// Code generated by go-bindata. DO NOT EDIT.
// sources:
// accounthist.graphql (3.08kB)
// block.graphql (3.182kB)
// blockmeta.graphql (310B)
// query.graphql (4.734kB)
// query_alpha.graphql (3.65kB)
// schema.graphql (59B)
// search_transaction.graphql (3.116kB)
// subscription.graphql (3.198kB)
// tokenmeta.graphql (2.848kB)
// transactions.graphql (17.174kB)

package schema

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _accounthistGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4f\x73\xdb\xc6\x0f\xbd\xf3\x53\xc0\xf2\x21\x76\x46\xd6\xe1\xf7\xeb\xf4\xa0\x5b\x52\xa7\x89\x3a\xa9\x9d\xc4\x6e\x33\xd3\x4c\xc7\x5c\x2d\x41\x72\x13\x12\xcb\x2c\x96\x96\xd4\x4e\xbe\x7b\x07\xbb\x4b\x8a\xb2\xe5\xa6\x07\x5b\xe4\xfe\x79\x78\x00\x1e\x00\x9e\x66\xa7\x00\x1f\x90\x3b\x4b\x8c\x0c\xa5\x75\xf0\xbe\x47\xb7\xcb\x4e\xb3\xcc\xef\x3a\x84\x17\x5a\xdb\x9e\xfc\x1b\xc3\xde\xba\xdd\x0b\xed\x8d\x25\xfe\xc9\x12\x61\x78\x84\xbf\x33\x00\x2c\x2a\xe4\x25\x7c\xba\x31\x6d\xd7\x60\x3c\x73\xeb\x94\xc6\x57\x45\x85\x27\x7f\x9e\x64\x00\x9d\xaa\x70\x45\xa5\x5d\xc2\xbb\xf4\x74\x92\x9d\xc2\x15\x6e\x3d\xb0\xc7\x0e\x0c\xc1\x6b\xa7\xba\xfa\xfd\xdb\x8b\x46\x51\xb1\x14\x5a\x64\x8b\xe3\xb0\x02\xf9\x2d\xf1\x3b\x6a\x33\xb0\xd2\xbd\x63\xeb\x96\x70\xe3\x9d\xa1\x4a\x48\x08\xe0\xf2\xf1\x8d\x00\x36\x9b\xcd\xb2\x47\x3b\x50\xdb\xa6\x60\xf0\x35\x82\x97\x77\x06\x5b\x02\x6e\x51\xf7\xc1\x77\x5b\x82\x02\x36\x54\x35\x08\x2a\x86\x63\x63\x7c\x6d\x08\x94\x9c\x27\x8e\x8b\x73\x58\xf7\x1e\xb4\x25\xaf\x0c\x31\x34\xc8\x1c\xde\x70\xeb\x7b\xd5\x80\xa1\xd2\xba\x56\x85\xeb\xa5\xb3\xed\x60\x6e\xb8\x0e\xbe\x56\x04\x8a\x60\x42\x6c\x91\x65\xb7\xb5\x61\xb0\xeb\xcf\xa8\x3d\x18\x86\x9e\xb1\x08\xd6\xc3\xf5\xbc\x42\x9f\x72\x95\xc7\x84\x2e\x82\x87\xc7\x43\x16\xc2\x75\x2a\x7f\xf0\xb2\xb1\xfa\xcb\xc0\x2e\xac\x66\x00\xb3\xb8\x4a\x7d\xbb\x46\x27\xa9\xda\xd4\x46\x8b\x21\xc3\xa3\xdf\x8a\xa1\x73\x56\x23\x33\x16\xb3\x0c\x60\x2d\x57\xae\xfa\x76\x09\xbf\x19\xf2\x3f\xfe\x70\x32\x01\x5a\x5d\xfe\x07\x90\xc5\x88\xb2\xba\xdc\x27\x51\x40\x6e\x4d\x8b\xa0\xfc\x08\x80\xf1\xd8\x70\xbd\xe8\x35\x16\x73\x50\x5a\x5b\x57\x18\xaa\xc0\xdb\xc9\xa1\x74\xc0\x8d\xe8\x82\xb6\x04\xf9\x1f\xd0\x63\x18\x6e\x27\xe1\x7f\x18\x8c\xe9\xde\xea\x12\xac\x33\x95\x21\xd5\x34\xbb\xa0\x96\x60\x70\xef\x93\x98\xf1\x6e\xfb\xc0\x85\x68\x24\x66\x00\x0a\xe5\xd5\x08\x3e\x9b\xbd\x6e\xec\x5a\x35\xc0\xf8\xb5\x47\xd2\x28\x26\xa4\x2a\xa7\x71\x32\x14\x5f\x75\xad\x0c\xc1\x19\xd7\xd6\x89\x46\x8a\x70\xd0\xa1\x46\xd3\xf9\x45\x15\x70\xee\x06\x9c\xf3\x85\xe4\x1f\x04\xf7\x30\x25\xb3\xd9\x1f\xe8\xec\xc5\x5a\x89\x80\x0c\x15\xb8\x15\x5d\x1f\xa4\x25\x6a\xfa\x81\x2c\xe7\x42\xe3\x6e\x2c\x86\x3b\xb0\xae\x40\x97\xac\x8c\xcb\x2b\x01\x8c\x06\xff\xff\xbf\xc1\x60\x72\x3c\x31\x85\xb3\x98\xc8\xc2\x94\x25\x3a\xde\xd7\xc0\x34\xd0\xe9\xec\xf9\x42\x20\x6e\x6b\x1c\x2f\x6f\x4c\xd3\xc0\x1a\x81\xfa\xa6\x81\x4d\x8d\x04\xa5\x32\x4d\xef\xa4\x56\xb5\xee\xdd\x02\x7e\x47\x67\xca\x5d\x2c\x0b\xf6\xca\xf7\x9c\x67\x00\xa5\xc1\xa6\x00\x4b\x0f\x2d\xc5\x82\x88\x75\xb5\x48\x7c\x33\x18\xcc\x2d\x53\xd2\x3e\xc4\xd7\xfd\x7e\x6a\x93\x49\x93\xda\x16\x18\xe4\x18\xe3\x80\x85\x68\x30\x29\x2f\x86\x76\xdf\x44\x7c\xaa\x67\x80\x9b\xa3\x79\x0c\xbf\xf7\xe8\x0e\xa9\xdc\xa3\x3b\x2c\x8a\xd9\xec\x56\xb9\x0a\x3d\xb4\xe8\x6b\x5b\x3c\xe3\x50\x00\x42\x89\x54\x8b\x0b\x09\x9a\x61\x28\x2c\x32\x3c\x27\xeb\x9f\x83\xb6\xce\x85\xbe\x5f\x0c\x05\x22\x42\x77\x4a\xfb\x48\x7f\x8d\x22\xe5\xc1\x81\xb9\x74\xa1\xd0\x68\x36\xf2\x9b\x0f\x24\x72\x68\x51\x11\x0f\xf8\xf7\xaa\xe9\x31\x58\xe4\x2e\xf4\xcb\x9d\xed\x5d\xd2\x11\x1f\x71\x52\x69\xbf\x18\x78\x1a\x82\x5c\x3a\xb4\xe5\x3c\x75\xdb\xe8\x6f\xda\xff\xbe\xbb\x21\x9c\xd1\xdb\x3d\x99\x39\x68\xdb\xae\x0d\x1d\x74\xc7\x04\x99\xcf\xa1\x40\x8f\xae\x35\x84\x3c\x4d\x5d\xa7\x7c\x3d\x2a\x6b\xcc\x61\xaa\x81\x89\xef\x07\x11\x7b\xc2\x3d\x21\x74\xc4\xb7\x54\x28\xb2\xfb\xd0\xb3\x1b\x53\x91\xf2\xd6\x19\x64\x70\xf8\xb5\x37\x2e\x0a\x28\x11\x99\xd6\xe6\x11\x9b\x79\x88\x69\xef\x6b\xeb\xcc\x5f\x61\xaa\xe4\x4f\x9b\x3f\x38\xb7\x84\x4f\xef\x24\x18\xcc\xc6\xd2\x5b\xbc\xc7\x46\x06\x6d\xe4\x74\xa9\xbc\x82\x4e\xed\x1a\xab\x8a\x05\xfc\x6a\xaa\xda\x4b\x6c\x14\x70\xa0\x0e\xe2\x2c\xfc\x72\x73\x7d\x95\x4a\x47\x22\xdb\x21\x85\x76\x28\x2d\xa4\x46\x5f\xcb\xec\xf0\xb1\x4b\x5b\x66\xb3\x6e\x50\xbc\xea\xa9\x53\xfa\x8b\xec\xf4\x32\x4a\xc3\xa0\x7b\xb9\x7a\xca\x31\x69\x96\xff\xe2\x8f\x6c\x2f\x03\x8f\xc4\x3b\x50\xba\x8e\x53\xd2\x61\xe7\x90\x91\x7c\xec\xd1\xe3\xcc\xee\x94\x53\xad\xe8\x80\x85\xb5\xa4\xb2\x00\x5f\x3b\xdb\x57\x51\x2e\x42\x07\x3e\x26\x35\xe4\xd2\x68\x72\x30\x65\xf2\x85\x9e\xf9\x03\x77\x22\x00\x18\x7f\x5c\x0e\x92\xb3\xcf\x6c\x29\xd2\x95\xa7\x03\xba\x6f\x70\x7b\x81\x14\x29\xa4\xc8\x3e\x62\xed\xd4\x26\xf8\x99\xc6\x02\x7e\x47\x0a\x35\x6e\xef\xbe\x13\xb5\x1a\xb7\x97\x21\x70\x87\x3a\xbc\xee\x7d\xd7\xfb\x38\x0d\x06\x2b\xcf\x18\xf2\xce\x19\xf2\x67\xe7\x39\x48\x37\xc5\x16\xc9\xa7\xa6\x3d\x19\x14\xdc\x2a\xe7\xc7\xfa\x48\x76\xb4\x25\xb6\xcd\x23\xbd\x7f\x4c\xe2\x38\x18\x71\x0c\x6a\x98\xbc\x17\xa5\xc3\xd1\xcb\x11\x49\x76\x7e\x76\x88\x4b\x78\x69\x6d\x83\x8a\x22\xdc\x93\x60\x64\xbd\x29\x8d\x56\x71\x76\x49\xd7\x8a\x01\x95\xae\x16\x55\xe9\x9d\xa9\x2a\x94\x62\x53\x1c\x3e\xec\x0a\x04\x2c\xcb\x20\x1d\xdb\x82\x22\x1b\x90\x07\xa7\xe6\x20\x71\xd6\xb6\x33\x41\x2f\xd2\x28\xa4\x15\xb0\xd4\x7b\xaa\x94\xfd\x2c\x1b\xbe\x12\xa6\x13\x74\x68\x9a\xb5\xea\x3a\x24\x8e\xd3\x6b\x67\x7b\xd0\xaa\x69\x86\x56\x13\xca\xff\x2e\x90\xdf\xe5\xa9\xdb\xed\x61\x5f\x5d\xdf\xac\xae\xc1\x90\xc4\x93\x8d\x66\x38\x9b\x26\x42\xc5\x34\x5c\x0c\x8c\xcf\xc3\x37\x95\xe1\xab\x80\x36\x09\xdc\xb7\xec\x9f\x00\x00\x00\xff\xff\x19\xa3\xc5\x8a\x08\x0c\x00\x00")

func accounthistGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_accounthistGraphql,
		"accounthist.graphql",
	)
}

func accounthistGraphql() (*asset, error) {
	bytes, err := accounthistGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "accounthist.graphql", size: 3080, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0x4b, 0xd7, 0x7c, 0x5f, 0xf7, 0xfb, 0x60, 0xbb, 0x98, 0xbd, 0xea, 0x6c, 0xfc, 0x38, 0x1b, 0xb5, 0xaa, 0xd1, 0x2a, 0x6e, 0x3c, 0x5e, 0xe3, 0x64, 0xfe, 0xd, 0xc4, 0x81, 0xc5, 0x85, 0x58}}
	return a, nil
}

var _blockGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\xfa\x92\x16\x30\xf6\xd0\xde\x74\x6b\x92\x05\xd6\xc8\xc7\x06\x75\xb6\x97\x60\x51\x8c\xc5\x91\x35\x88\x44\x2a\x24\x65\xc7\x58\xe4\xbf\x17\x24\x45\x91\x56\x94\x4d\xdb\xbd\x89\x22\xe7\xcd\x9b\xaf\x47\xda\x63\x47\x70\xde\xa8\xf2\x11\xbe\x2f\x00\x00\x96\xcb\xe5\xfa\x12\x54\x05\xb6\x66\x03\x5b\xb7\xf3\x11\xd6\x16\xd8\x00\x42\x2f\xf9\xa9\x27\xe8\x14\x4b\x4b\x1a\xac\xca\x4f\x2d\x97\x4b\x8f\xc0\xa2\x80\x8d\xd5\x2c\x77\x1f\x16\x11\x72\x43\x4f\x3d\x49\xcb\xd8\x80\xec\xdb\x2d\xe9\x53\x0f\xa0\x24\xd8\x9a\xa0\xac\x91\xe5\x47\xf8\x2a\x1b\x7e\x24\xff\xa7\x46\x53\xaf\x80\xbd\x7f\xa9\x6c\x64\xb0\xa5\x12\x7b\x43\x0e\xa5\x52\xfa\x91\x44\xc0\x31\x23\x09\xd9\xb7\x05\x7c\x65\x69\x7f\xff\x2d\xb1\xb8\xaf\x09\xae\xd1\x58\x58\x6b\x4d\x7b\xd2\x86\xb7\x4d\x8c\x7e\xa0\xe5\x39\x79\x1a\xce\xe3\x16\x0d\x09\x40\xeb\xa9\x5c\xde\xa9\x0d\x94\x4a\x1a\x92\xa6\x37\xd0\xe0\x91\xf4\xe8\x4f\x74\xca\x5c\xaf\xcf\x6f\xe7\xdc\xae\xa5\xe0\x12\x2d\x19\x38\xd4\x64\xeb\xe8\x25\x44\xce\x06\x38\x63\x93\xb2\x98\xfd\x2c\xe0\x5c\xa9\x86\x50\x26\xcc\xcf\x84\x82\x34\xfc\xc7\xd2\xd4\xde\xaa\x08\x21\x07\x88\x04\x79\x97\x9b\x12\xb0\x2c\x35\xb5\x24\x2d\x36\xd0\x92\x7e\x6c\x08\xb4\x52\x16\x04\x5a\x04\x63\x75\x5f\xda\x5e\x93\x4b\x7f\xe6\x29\x3a\x0a\x06\x7f\x2a\x65\x07\x67\xee\xf3\xc6\xff\x4c\x0e\x6f\x53\x27\x68\x94\x06\x4b\xcb\x4a\x42\xa5\x7a\x29\x80\x65\x86\x6a\x56\x61\xc1\xc6\x33\x4b\x1d\x74\x46\xcf\x54\xf6\x96\xc4\xd9\x09\x44\xa9\x7a\x69\xc7\xa0\xe3\x99\xfb\x74\xe2\xc2\x1d\x78\x5d\xa8\x6b\x36\x76\x42\xc7\xb8\x8a\x5b\x64\x49\x13\x4e\x23\x7c\x76\xf8\x5e\x63\x49\xe6\x97\x8a\xb5\x19\xd1\x57\xd0\x60\xbe\xda\x52\xa5\x34\xc5\x09\x59\x01\x56\xd6\x55\x24\x2c\x7f\x85\x02\xee\x27\x78\x17\x4a\x4a\xf2\xcb\x0f\x8b\x97\xc5\xc2\xb9\xcd\xca\x17\x73\x12\x2a\xeb\xc8\x63\xe0\xb7\x02\x7a\x2e\x9b\x5e\xb0\xdc\xf9\x03\x27\x31\xf9\x48\xd0\x0e\x91\x78\xcc\x24\x04\x03\xf0\xf7\x7c\x6a\xa6\x92\x10\x10\xe2\xc0\xfe\x68\xf2\x9d\xf5\x36\x9f\xb0\x59\xcb\xf9\x71\xe5\x96\x8c\xc5\xb6\x3b\xf5\x7d\xda\x0c\x58\xda\x1e\x1b\xb0\xdc\x92\x1b\xd4\x43\xcd\x65\xed\x37\x82\xd3\x03\x1a\xe8\xb4\x2a\x7b\x41\x22\x95\x2c\x02\x17\xe0\x7c\xcc\x91\xed\xb4\x12\x7d\x49\x1a\x0e\xb5\x4a\x8b\x99\xf2\xc7\xbd\xd7\x91\x7f\x56\x07\x68\xf1\xe8\x1a\xa8\x62\xdd\x62\x48\xbd\xaa\x60\x4f\x9a\x2b\xa7\x08\xac\xf2\x8e\x72\x5a\x07\x9a\x4a\xe2\x3d\x09\xa8\xb4\x6a\x41\x79\xb5\x38\x65\x94\x34\x6e\x00\x26\x31\xaf\x74\x9d\xa6\x3d\xab\x3e\xa2\xaf\x2f\x63\xea\xc3\x3a\x88\xdc\xa9\x12\x05\xbd\x53\x32\x8b\x2e\x60\xcc\xd7\x35\x9f\x39\x4f\xbc\xb3\x70\x93\x49\x85\x54\x22\x28\xf8\x8f\x0a\x78\x96\xa1\xfc\xdd\x3a\xbb\x33\x47\xf4\xd3\x97\xcd\xfa\xcb\xdc\x90\xdd\x04\x55\x99\xe3\xf3\xd3\x54\xde\x61\xf1\x2e\x81\xb1\x51\x4c\x59\x93\xe8\x1b\x02\x2f\xe1\xea\xcd\x3c\x83\xb3\x1a\x0f\x0f\x34\x9a\x41\x86\x9c\xbb\x7d\x06\x8a\x52\xb8\x7d\xd6\x80\xc6\xf0\x4e\xc6\x5b\x6f\x38\xe1\x63\x37\x8d\x4a\xca\x17\x81\xff\x0a\x24\x52\x9b\xf8\x91\xa3\xc3\x5d\x6c\xa9\x02\xe2\xe7\x66\x30\x39\x91\x9a\x24\xde\x13\xa9\x48\x1b\xff\x47\x2e\x5c\x4d\x26\x4a\x1c\xb3\xbc\xa7\x5b\x25\xc8\x14\xf0\x30\xa4\xf9\x9b\x17\x3f\xef\x79\x4a\x75\x70\xbd\x9f\x0b\xb2\x4b\x11\x3e\x44\xbb\x2b\x3a\xce\xc1\x5d\xd1\x71\x40\x8a\x46\xb7\xd8\x52\xaa\xb3\xdb\xf1\xc1\x6c\x78\x27\x59\xee\xae\xe8\x98\x36\x5f\x16\x03\xda\xdb\xea\x1d\x33\xf4\xc7\x58\x5f\x12\x3b\x32\xfe\xba\xcd\xe6\xc8\xfa\x3b\x64\xb8\xb9\xdc\x81\x02\x1e\xa6\xa0\x9f\xc4\x8e\xbe\xc5\xce\x5b\xcb\x4a\x0d\xea\xe2\xb0\x90\x05\x74\xb8\x63\xe9\xff\x0c\x53\x8c\x3b\x72\xc7\x0a\xb8\x1b\xbe\x52\xf8\x73\xd8\x59\x31\x35\x9e\x10\x83\xb2\xd7\x46\xe9\x51\x81\xfc\x6a\x66\x16\x26\x66\x79\xc5\x5f\xdf\x70\x21\x7d\xcb\xe5\xf2\xc2\xc3\x39\x11\x7c\xea\x59\x93\x70\xf1\xb8\xeb\x97\x65\x4f\x40\xec\xc5\xb0\x52\xfa\x80\x5a\x80\xd2\xb0\xc5\xf2\xd1\x7d\x9b\x20\x96\x38\x26\x76\x88\x9f\x04\x50\xe3\x9f\x30\x66\x6c\xdb\x98\x80\x14\x62\x88\x21\xf4\x2b\x81\xbf\xbb\xa3\x59\xfc\xe9\x70\x57\xe0\xde\x9b\x6c\x1d\x27\x43\xa8\xcb\x3a\x36\xb5\xea\x3a\x65\xd8\x12\x08\xd6\xa1\xd4\xe3\xfc\x59\xd4\xf6\x62\x92\xa3\x59\xb7\xee\x8d\xf0\x9e\xd7\x98\x89\xf1\x5d\x23\xc5\x1b\xd8\x3c\xf3\xe0\x24\x4d\xe1\xa1\x28\xe9\xd9\xfa\x8e\x18\x1f\x85\x68\x6e\xe9\xd9\xba\xcc\x64\x0f\xcd\x7f\x03\x35\xde\x30\x13\xb8\xbb\xe1\xff\x04\xf2\x65\xf1\x4f\x00\x00\x00\xff\xff\x38\x48\x5f\xa2\x6e\x0c\x00\x00")

func blockGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_blockGraphql,
		"block.graphql",
	)
}

func blockGraphql() (*asset, error) {
	bytes, err := blockGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "block.graphql", size: 3182, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0x5e, 0xe, 0x84, 0xb, 0x96, 0x15, 0x15, 0x68, 0x27, 0x90, 0xc8, 0x6c, 0x88, 0x23, 0x73, 0xf5, 0xab, 0xa7, 0xe9, 0x14, 0x5b, 0xfb, 0x88, 0xb3, 0xa1, 0x72, 0xa7, 0x7e, 0x8b, 0x49, 0x61}}
	return a, nil
}

var _blockmetaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xcd\x4a\xc6\x30\x14\x44\xf7\xf7\x29\xa6\xd9\xbb\xd1\x5d\x77\x55\x4b\x11\x2a\xd5\x5a\x1f\x20\xda\x5b\x0d\x36\x49\x4d\x6e\x10\x91\xbe\xbb\xf4\x07\xb1\xe2\xb7\x1a\x38\x9c\x19\x46\x3e\x27\xc6\xe5\xe8\x9f\xdf\x6e\xae\x5b\x8e\x93\x77\x91\xf1\x45\x00\xa0\x94\xda\x52\x42\x62\x05\x33\x40\xe3\x69\x31\x61\x7a\x7c\xe8\x88\xc1\x27\xd7\x1f\x54\x31\x96\x73\x74\xc6\x72\x46\xc7\x8d\x3d\x5d\xb2\x39\x1e\x8d\x93\x8b\xf3\x13\x86\xe9\x73\x3c\x48\x30\xee\x25\xa3\x99\x88\x5d\xb2\xb8\x6a\x6e\xef\x8a\xb6\xe8\x9a\x76\xbd\xa6\xaa\xc0\x5a\x38\x9c\xc9\xab\x76\xf0\x01\xfc\x9e\xf4\x08\xf1\xcb\x42\xd5\x95\xf4\xd7\xd9\xf8\x8a\x6b\x8e\xf1\xdf\x5e\xbd\xf7\x7e\x84\x0d\xae\xac\xfc\xe5\x95\xf7\x34\xd3\x77\x00\x00\x00\xff\xff\x98\x77\x32\x21\x36\x01\x00\x00")

func blockmetaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_blockmetaGraphql,
		"blockmeta.graphql",
	)
}

func blockmetaGraphql() (*asset, error) {
	bytes, err := blockmetaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "blockmeta.graphql", size: 310, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0x45, 0x31, 0x46, 0xf8, 0x7d, 0xcb, 0x52, 0xca, 0x83, 0x12, 0x95, 0xd6, 0xb8, 0x4a, 0xf0, 0xdb, 0xdb, 0x1f, 0xa8, 0x42, 0x61, 0x8d, 0xa7, 0x30, 0xaa, 0x48, 0xa7, 0xd8, 0x5e, 0x68, 0x32}}
	return a, nil
}

var _queryGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x41\x6f\xdb\xc6\x12\xbe\xeb\x57\x4c\xfc\x2e\x76\x20\x0b\xb2\x5f\x92\x83\x80\x1c\x24\x45\x2f\x16\x9e\x2d\xb5\xb2\xda\x00\xb9\x58\x23\x72\x48\x2e\xb2\xdc\x65\x76\x97\x52\x98\xa2\xff\xbd\x98\xdd\xa5\x44\xbb\x36\x1a\xb4\x29\x92\x43\x72\x89\x24\xce\xee\x7c\xf3\xcd\x37\xdf\x98\xae\xa9\x08\x7e\xae\xc9\x34\xf0\x5b\x0f\xe0\xe4\xe4\xa4\x07\xf0\x6e\xbc\x5a\xcc\x17\x6f\x47\xb0\x2e\x84\x05\x61\x01\x61\x32\x5b\x8f\x43\xdc\x00\xe6\x6b\xb8\x99\xbf\xbd\x5a\xc3\xed\x7a\x7e\x7d\x0d\xd3\xab\xf1\xe2\xed\x6c\xd0\xeb\x01\xac\xc8\x19\x41\x3b\x02\x57\x10\x48\xb4\x0e\x30\x71\x42\x2b\xdb\x07\x57\xa0\x03\x34\x04\xc2\x18\xda\x91\xb1\x62\x2b\xa9\x0f\xa8\x52\xff\x68\xd4\x03\xb8\x38\x03\xa5\x9d\xc8\x04\xa5\x80\x0a\x30\x49\x74\xad\x5c\x1f\xb4\xe9\x01\x5c\x9e\xc1\x1e\x2d\x60\xed\x0a\x6d\xc4\x67\x4a\x61\xdb\x74\xa2\x62\x7a\x5b\x4b\x67\x7d\x9a\xbb\x98\xf9\xae\x0f\x86\x5c\x6d\x14\xa5\x20\x14\x84\xdc\x04\xda\xa4\x64\xe0\x34\x33\xba\x04\x43\x09\x29\x07\x4e\x83\x96\xfc\x6b\x3c\x79\xe6\xef\x5c\x2c\xd7\xb3\x11\xd4\xb6\x46\x29\x9b\xbe\x2f\x6c\x8b\xc9\x07\xa1\x72\xb0\x64\x76\x22\x21\xd0\x19\x38\x26\xaa\x24\x57\xe8\x14\x0a\x2d\x53\xa6\xec\xce\x99\x5a\x25\xe8\x28\xbd\x83\xbd\x50\xa9\xde\x73\x64\x21\xac\xd3\xa6\xe9\x43\xe5\x33\x75\xc1\x63\xea\xaf\xdf\x24\xb5\xb1\xda\x6c\x18\x2e\x7f\x37\x64\x2b\xad\x6c\x24\xab\x42\x6b\x41\x38\x0f\x82\x21\x1f\xa2\x9d\x86\x44\x2b\x27\x54\x4d\x50\x61\x2e\x14\x3a\xa1\xf2\x41\xa7\x87\xb6\xd0\xc6\x9d\x4b\xb1\xa3\x14\xc2\xa9\x3e\x90\xad\x28\x11\x5c\x1b\xa0\xf5\xe9\x22\x6a\xa1\x55\x8b\x3a\xd7\x64\x61\xdb\x0c\x0e\xfa\xc8\xc9\x8d\x03\xf2\xab\x50\xcd\x38\x30\x76\xda\x03\x00\x38\x89\xcf\x40\x61\x49\x0c\xeb\xa3\x97\x57\xa6\x0f\xcc\x9e\xf8\xb8\x58\xfc\x08\x6e\x9d\x11\x2a\x7f\xd6\x0b\xa7\xa7\x5a\x39\x83\xc9\x5f\x1e\x4f\x62\x5c\x7b\x3e\x1e\xbf\xc1\x4f\xa2\xac\x4b\x50\x75\xb9\x25\xc3\x8c\xc7\x53\xf7\x64\xe0\xfb\x55\x61\x4e\x03\x80\x1b\xfc\x04\x52\x94\xc2\x01\x4a\xa9\xf7\x94\xfa\x5c\x3e\x22\x41\x29\x99\xbb\x8b\xe1\x70\x18\xb2\xfa\xc0\x11\xcc\x95\x7b\xf5\x02\x5e\xf3\x83\x98\x77\x59\x71\x16\x94\x91\xd9\x7b\xed\xd8\x17\x64\x08\x1a\x5d\x83\xa4\xcc\x81\xce\xb2\x3e\x38\xfc\x40\x0a\xa2\xfe\x82\x6c\x19\x2b\x54\x86\x76\x42\xd7\x31\xb7\xd3\x01\xc8\xc6\x53\xee\xeb\xd8\x04\x42\x06\x91\x05\x9f\xed\xc0\x01\xc0\xd9\x08\x1e\xed\xcd\x54\x2b\x45\xfe\xe3\xb3\x5e\x84\x7c\x12\xae\xb8\x25\x34\x49\x11\x94\x2d\x75\xf2\x21\x29\x50\x28\xe6\x60\x8f\x26\x72\x61\x50\xd9\x40\x23\x3c\xa7\x4f\x94\xd4\xfe\x23\xd3\x4f\xf6\x39\x6c\xd1\x52\x0a\x5a\xc1\xc6\x23\xdb\x0c\xc2\xfd\xef\x0a\x6a\x05\x1c\x89\x3f\x2a\xdb\x02\x95\x95\x6b\xfa\xac\xe4\x92\x50\x59\xcf\x4e\x81\x3b\x8e\xc6\xa4\xa0\x30\x0a\xa4\xd2\x30\x5d\x04\x5e\xa7\xde\x1a\x3c\x48\x30\xa8\x72\x6a\x33\x8d\x57\x8b\x11\xa0\xdc\x63\x63\x99\x75\x2b\x78\x8c\xfd\x2c\xd5\x2a\xd5\x1b\xc8\x04\x49\xdf\xf7\xb6\x2a\xeb\x6b\x26\xdb\x87\x7d\x21\x92\x02\xac\xc8\xb9\x77\xde\xa4\xf8\x5c\x89\x2e\x29\x78\xc6\x49\x52\xc9\xe6\xc0\xde\xc3\xe7\x59\x98\xab\xd9\xcd\xf2\xd7\xd9\x9b\xd0\x3c\x8e\x0e\x8c\x6d\x29\xc1\xda\x7a\x3b\xf0\x10\x59\x71\xda\xe4\xa8\xc4\x67\x3f\x4e\x11\xec\x2d\x11\xa0\xb4\x3a\x54\xe5\x0c\x61\xc9\x89\xbc\x25\x6a\x05\xb5\x62\xec\x9b\xdb\x7a\x6b\x13\x23\xbc\xa8\x36\xf7\xda\x15\xa0\xaf\x8f\x2d\xb1\xff\x0b\x45\x85\xe9\xf3\xa1\x69\xc6\x40\x62\x63\x83\xbb\x5f\xa3\xca\x6b\xcc\x7d\x4a\xa1\xf2\x93\x43\xb0\xef\xd9\x83\x21\xf4\x97\x5c\xeb\x3d\x99\xc8\xb6\xaa\x4b\xd8\xea\x5a\xa5\xc8\xd6\x25\x54\x22\x6b\x2b\x76\x24\x9b\x01\x8c\x41\x51\x8e\x4e\xec\x08\x76\x28\x6b\x8a\xfd\xc4\xb6\x4f\x24\xc3\x43\x17\x2a\x2e\xd8\xe6\xb4\x09\xdb\xa1\xbb\x0b\x62\xfc\x69\x4a\x15\xa9\x94\x29\x61\x45\x75\x23\x96\x4a\x36\x9b\xb3\xc1\x11\xba\xd4\xfb\x09\x1f\x5a\xd4\x65\x1c\xc9\x0e\xfc\x2b\x91\x17\x5f\x86\xff\x33\x19\xcd\x90\xbe\x59\x1d\x85\xc8\x8b\xa7\x0b\x59\x56\xf8\xb1\x26\x48\xd1\x21\x54\x82\x12\x0a\x32\xe5\x81\x49\x50\x85\x85\xd0\x6e\x83\x83\xe5\x34\xba\x36\x51\x2a\x20\x32\x1e\x33\x4e\x0f\xa9\xb0\x49\x30\x02\x4a\x07\xc7\x75\x2d\xdc\x51\xcc\x87\x21\x3d\x0c\x4d\x77\x09\xd9\xc3\xb6\x63\x7f\x1a\xc0\xdc\xf1\x30\x5b\xcc\x3c\x31\xac\x3a\x2f\x6b\xb6\xee\x68\x84\x42\xc1\x64\xb9\xbe\x82\x54\x18\x8a\x4e\x7c\xda\x8e\x21\x2f\x34\x86\xce\x5f\xba\x84\x3c\x70\xb5\x8e\x26\xbd\x4f\x73\x8a\xa3\xbf\xb7\xf6\xc9\x0b\x95\x2d\xbd\xfb\xdb\x69\x4a\x19\xfa\x4f\x4e\xb3\x59\xdf\x53\xcf\x13\x56\xee\x13\x05\xf3\x32\x35\xf5\x41\x2b\xd9\xc4\x41\x0d\x3c\x1f\xfc\x5a\xf9\x5e\x50\x13\x7a\xc0\xa8\x8e\x6d\x16\x52\xb8\xe6\xa0\xb9\x01\x2c\x5d\x41\x66\x2f\xfc\x1a\xe7\x35\x03\x19\x45\x8b\x69\xaf\xab\xab\x7b\xda\xf2\x32\xea\xc0\x7d\xa8\xa0\x11\x4c\xb4\x96\x84\x0a\x5e\x43\x86\xd2\x92\x8f\x3c\x1b\xc5\xb1\x7f\xc4\x20\x56\xb1\x87\xcf\xbe\xc4\xff\xdb\xb6\x7c\xaf\x0b\xc0\x67\xe8\x2e\x81\xaf\xef\xab\x93\x48\xc1\x37\x33\xd6\xe0\x43\x3a\x83\x61\xe4\xc8\xf7\x88\x72\xa1\x94\xf7\x95\xec\xb8\x7d\x7e\xf8\xf0\x0f\x1f\xfe\xe1\xc3\xdf\xb9\x0f\xb7\x86\xf2\xc0\x88\xff\x03\xe7\x7f\xeb\x5f\x3c\x3c\xb9\x5e\x4e\xff\x0f\x37\xb3\xf5\xf8\x9f\xdf\xd6\x9a\xe1\xca\x3b\xf6\x71\x27\xc0\xfc\x0d\x64\xcc\x21\xa0\xf1\xff\xf1\x93\x5c\xec\x48\xc1\xc6\x89\x92\x36\xfd\xe3\x12\x08\xe2\xd5\x65\x85\x06\x1d\x0b\xb8\x32\x7a\x27\x52\x4a\x07\xf7\x52\xf8\x7b\xe7\x6f\x26\xcd\x5a\x94\xd4\xb1\x58\xfe\x6a\x1d\x96\x95\xdf\x3c\xe1\x1e\x61\xb5\xea\xc7\xbf\xdf\x4b\x74\x70\x39\x1c\xbe\x3a\x1f\x5e\x9c\x0f\x2f\xd7\x17\x2f\x47\xc3\x17\xa3\xe1\xcb\xf7\x6c\x02\x8f\xfc\x3e\xb8\xb8\xfc\xef\xfb\x63\xf7\x18\xec\x08\x38\x47\xd7\x91\x3b\x8a\x3f\xe0\x1e\xc1\x74\x79\xf3\xd3\x78\x35\x5e\x2f\x57\xf0\x1a\xae\xd7\xb3\xb6\xb1\x93\x80\xfc\xeb\x76\x71\x3c\x9d\x2e\x7f\x59\xac\xff\xed\x3e\x2e\xc2\xb8\x86\x37\xd2\xd8\xc0\xf8\x22\xbe\xf1\x2f\x39\x89\x21\x74\x4f\xf4\x6a\xdc\xbe\xf6\x4f\x39\x48\x68\x75\xfa\x18\x85\x7f\x7a\xaf\x7f\x8a\xb6\xdf\x7b\x7f\x04\x00\x00\xff\xff\xb2\x12\xab\xb2\x7e\x12\x00\x00")

func queryGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_queryGraphql,
		"query.graphql",
	)
}

func queryGraphql() (*asset, error) {
	bytes, err := queryGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "query.graphql", size: 4734, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x21, 0x68, 0x72, 0x4c, 0xe2, 0xa3, 0xfa, 0x58, 0xd2, 0xe9, 0x99, 0x77, 0x3b, 0x56, 0xe0, 0x8d, 0x6b, 0xf7, 0xd3, 0x78, 0x83, 0x3, 0x6b, 0x53, 0xbb, 0xd6, 0x15, 0x28, 0x48, 0x6, 0xc9, 0xfb}}
	return a, nil
}

var _query_alphaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xc1\x8e\xdb\x36\x10\xbd\xfb\x2b\x66\x7d\x68\xbd\x40\xe0\x43\x7b\x33\x90\x83\xd6\x52\xba\x46\x14\x2b\x5d\x69\x0f\x45\x11\x18\x94\x34\xb6\x88\xa5\x48\x83\x1c\x25\x15\x82\xfc\x7b\x41\x4a\xb4\x2d\x47\xad\x37\x49\x61\xa0\x41\x74\x59\x81\x3b\x7c\xef\x71\x34\x8f\x33\xa6\x76\x8f\xf0\x7b\x83\xba\x85\x8f\x13\x00\x80\xe9\x74\x1a\xc4\x6f\xef\x03\xf8\x0d\x09\x18\x18\x2e\x77\x02\x21\x17\xaa\x78\x82\xbc\x05\x4e\x06\x56\x21\x28\xed\xde\x64\x53\xe7\xa8\xe7\xf0\x87\x6a\xa0\x60\x52\x2a\x02\xb3\xc7\x82\x6f\x5b\xc8\x15\x55\xf3\xe9\x74\xea\x40\xdd\xf6\x99\x7b\xb5\x0f\x2f\x17\x90\x92\xe6\x72\xf7\xe2\xb0\x26\x9b\x7a\x01\x8f\x5c\xd2\xaf\xbf\xb8\xb5\xdb\x05\xdc\xd9\x5d\x13\xaf\xca\xfd\x3d\x95\x26\xb8\x21\x50\x5b\x28\x94\x24\xcd\x0a\x02\x52\x4f\x28\x0d\xcc\x18\x41\xcc\x0c\xc1\x4a\x6b\x7c\x8f\xda\xf0\x5c\x60\x07\x06\x15\xf2\x5d\x45\x30\x8b\x57\x77\xb7\xa0\xa4\x68\x6f\x07\xf0\x1d\xc2\x51\xa8\x5f\xb7\x4f\xdc\xd3\xb9\x18\x30\x6d\x9d\x2b\x61\x60\x16\x25\xe9\x2d\x90\x82\x2d\x17\x84\x1a\xa8\x42\xd0\x68\x1a\x41\x06\xd8\x8e\x71\x69\x68\x14\xcd\xa1\xa4\x1d\xc8\x02\xfe\xec\xb2\x71\xf3\x6e\xf2\x0c\x6a\x7f\x5e\x03\x33\x54\x86\xab\xb9\x5b\xfe\x6a\x11\x4b\x0f\x77\x51\xc6\xb2\xd1\x46\x69\x68\x0c\x96\xb0\x55\x1a\xf6\x6c\xc7\x25\x23\xae\xe4\x68\x78\xe1\xc2\xfd\x97\x1e\x87\x7c\xc3\xfe\xe2\x75\x53\xf7\x85\x64\xcf\xe8\x75\x93\x02\x2e\x0b\xd1\x94\x08\x5c\x02\xeb\xd7\x47\x41\x04\xaf\x39\x1d\x8a\x67\x34\x24\x73\x99\x63\x44\x9a\xe7\x0d\x61\x77\x06\x52\x60\x94\xa6\xd3\x74\x8d\x6e\xb6\x41\xaf\x38\x8a\x72\x01\x59\xf2\x3a\x5a\xa7\x9b\x34\x79\xc8\x36\xaf\x56\x51\x1c\xc2\x4b\xb8\x4f\xe2\x30\x7a\x48\xc7\x89\x43\xae\xb1\xb0\x29\xb2\xa7\xf8\x50\xf1\xa2\xfa\x22\xda\x44\x97\x68\x53\x68\xf9\x92\x87\x30\x7a\x80\x97\x10\x46\xe9\xd2\x5b\x24\xeb\xbf\xa0\xec\x48\x6e\x2e\xbb\xa5\xab\xa1\x9c\x09\x26\x0b\x34\xee\x3b\xb2\xde\xb4\xbc\x00\x56\x14\xaa\x91\xf4\x2d\x1e\xea\x21\xee\x7a\x86\x71\x33\x65\x15\x1e\xb8\x3e\x54\xca\xe0\x51\x51\xab\x1a\x60\xda\xa6\x86\x34\xc7\xf7\x68\x6b\x67\x0c\xa2\xdf\xee\xeb\xeb\xe6\x6a\x35\xfb\xe3\x22\xf8\xbf\xb9\x36\x58\x2e\x93\xc7\x75\xb6\xb9\x0b\xe2\x60\xbd\x8c\xce\xfc\x1b\xbc\xb1\xff\xbc\xae\x7d\x0f\x51\x6a\x6f\xd1\x6d\xca\xcf\x44\x6e\x92\xb7\xd9\x2a\x59\xdf\xbc\xf3\x56\x0f\x06\xbe\xfa\x0f\x3d\x7f\xe8\x9f\x3f\xf5\xc5\xfc\xcd\x1d\xf4\xb2\xf7\x5d\xd8\xcf\xe6\xc8\x7d\xe6\xfa\x7f\x32\xbd\x8f\xbf\xe0\xfa\x53\x8a\xfe\x4c\xcf\x24\xe8\xa2\x2f\xc0\x0f\x6d\x58\x29\x51\xa2\x36\x5f\x6b\xbb\xfb\x6e\xfb\x8f\xee\xfb\xcc\xee\xfb\xbd\xba\xf8\xd3\x64\x32\x41\xd9\xd4\xa7\x3c\xdd\x48\x1e\xf4\xfd\xde\x71\x7e\xea\xa3\x3e\x9f\x44\x3e\x0e\x8c\xe8\x4e\x97\xb7\x83\x2e\x05\x33\x3e\xc7\x39\xb8\x4e\xc5\xc4\xbe\x62\xb2\xa9\x51\xf3\x82\x09\xd1\x7e\x7e\x89\x8c\xc2\x1d\x4b\xa5\x9f\xb6\xfb\xea\x1f\x04\xfb\x89\xc8\x6b\xfd\xb7\xfb\xf7\x2a\xaa\x59\xed\x26\x8d\x13\xd5\x28\xca\xe1\xde\xae\x7c\x06\xd9\xfd\x02\xbd\x7e\x96\x91\xac\xc6\xab\x89\x1c\xaf\xb5\x33\x85\xde\xc6\xa8\x0c\x18\x62\x4f\x58\x7a\x22\x7e\x68\x09\x2f\x80\x2a\x6e\xec\x2f\x38\x60\xdb\x2d\x16\x04\xca\x96\xbc\xbf\x23\x3d\x54\x94\xa4\x9b\xd5\x7a\x19\x3f\x86\xd1\x26\xcd\x82\xd7\x51\x68\xa5\xfc\x1d\x00\x00\xff\xff\xb3\x7a\xff\xc8\x42\x0e\x00\x00")

func query_alphaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_query_alphaGraphql,
		"query_alpha.graphql",
	)
}

func query_alphaGraphql() (*asset, error) {
	bytes, err := query_alphaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "query_alpha.graphql", size: 3650, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0xd4, 0x48, 0xb0, 0xea, 0x20, 0x84, 0xdc, 0x8, 0x6e, 0x11, 0x2e, 0xd, 0xbf, 0x7f, 0xdb, 0x5, 0xbb, 0xe1, 0xc2, 0x43, 0x47, 0x3b, 0xf7, 0x50, 0xb6, 0x55, 0x51, 0x71, 0xf, 0x7a, 0x67}}
	return a, nil
}

var _schemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\xce\x48\xcd\x4d\x54\xa8\xe6\x52\x50\x50\x50\x28\x2c\x4d\x2d\xaa\xb4\x52\x08\x04\x51\x60\x81\xe2\xd2\xa4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\x2b\x85\x60\x24\x1e\x57\x2d\x17\x20\x00\x00\xff\xff\x52\xd9\x58\xe5\x3b\x00\x00\x00")

func schemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_schemaGraphql,
		"schema.graphql",
	)
}

func schemaGraphql() (*asset, error) {
	bytes, err := schemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.graphql", size: 59, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5b, 0xba, 0x8f, 0x74, 0x29, 0x4e, 0xaf, 0x41, 0x66, 0x2b, 0x4e, 0x31, 0x85, 0x84, 0x19, 0x59, 0x50, 0x81, 0xda, 0x72, 0x50, 0x56, 0xaf, 0xe3, 0xd8, 0xb7, 0x35, 0xbc, 0xd1, 0x85, 0xf3, 0xc6}}
	return a, nil
}

var _search_transactionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcb\x6e\xe4\x36\x10\xbc\xf3\x2b\xda\xe3\x8b\xbd\x70\x74\x48\x6e\x73\x1b\x6f\x9c\xc4\xc0\x62\x8c\xd8\xde\x2c\x82\x20\x80\x5a\x64\x6b\x48\x98\x22\xb5\x7c\x8c\x22\x04\xf9\xf7\xa0\x29\x8d\xe7\x61\x3b\x87\x5c\x92\x05\xf6\x26\x88\xfd\x28\x56\x57\x17\xcf\xc5\x39\xc0\x3d\xc5\xde\xbb\x48\x11\x5a\x1f\xe0\xe7\x4c\x61\x14\xe7\x42\xa4\xb1\x27\x78\x20\x0c\x52\x3f\x06\x74\x11\x65\x32\xde\xc5\x1f\x7c\x18\x30\xa8\x5d\x12\xfc\x29\x16\x8f\xda\x44\x30\x11\x10\xa4\x46\xe3\xbe\x19\x8c\x22\x90\x39\x44\x1f\xae\xc0\x38\x65\x24\x26\xe3\x36\x90\x34\x41\x1f\xfc\x26\x50\x8c\xe0\x5b\x40\x88\xa5\x7c\x05\xbf\xfa\x0c\x12\x1d\xf4\x18\x23\x98\x04\x0d\xca\x27\x48\xbe\x64\x28\xd3\xb6\x14\xc8\xa5\x39\x1a\x3a\x4a\xda\xab\xc8\xe7\xd2\xbb\x64\x5c\x26\x68\x29\x49\xcd\x3d\x3a\x1f\x08\x02\xc5\x6c\x53\xe4\xe6\xf0\x8e\x4c\xd2\x14\x40\x99\x40\xd3\x0d\xde\xc1\x05\x6d\xc9\xf1\x21\xd7\x0f\xb4\xa5\x10\x69\x1f\x70\x59\xc1\x0a\x6a\x97\xad\xad\xe7\x5b\x40\x47\xe8\x62\x89\x26\xa7\x18\x7a\x40\xb7\x21\xd0\x18\xa1\x21\x72\x10\x08\xa5\x26\x55\x2d\xc4\x94\xb0\x84\x87\x14\x8c\xdb\x08\x31\x43\x59\xc2\x6f\x2f\xa8\x3c\x61\xf2\xec\x77\xf1\xd7\x9b\xac\x5f\xa3\x7c\x3a\xa1\xfd\xb8\xd3\xd9\x3f\xb6\x3a\x4d\x9f\x7a\x09\xc1\xf3\x7f\x65\xfc\x80\x4e\xc1\x43\x6e\xa2\x0c\xa6\x2f\xfd\x59\x10\x8b\xc5\x42\xac\x20\x1a\xb7\xb1\x04\x69\x5f\x9c\xbf\x65\x21\xbd\xd4\xb9\x82\x0e\xe7\x61\x20\x97\xe4\xbe\xbb\xd1\x7d\xe6\xea\x95\x10\x9f\x56\xf7\xeb\xdb\xf5\x8f\x4b\x50\x1e\xd6\x77\x8f\x1c\xb6\xa1\xc4\x13\x35\x4e\xda\xac\xa8\x70\x5d\x67\xa7\x7c\x0d\xad\x21\xab\xf8\x4c\x51\xa2\xd0\x19\x47\x60\xda\x12\xd0\x51\x8c\xb8\xa1\xa2\x3d\x99\x32\x5a\x3b\x02\xc2\xfd\xcd\x2f\x37\xf7\x0f\xab\x0f\x3c\x27\x8e\x3a\x80\x5a\x09\xb1\xbe\x7b\xbc\x59\x02\xda\x01\xc7\x08\x52\x13\x0b\x4d\x13\x6c\xd1\x66\xe2\x8c\xba\xdc\xa6\x8a\x09\x53\x8e\x35\xb7\xed\xf0\x89\x20\xe6\x40\xac\x4c\x13\xa1\xa6\x3f\x48\xe6\x44\xaa\x66\x1c\xa3\xcf\x30\xa0\x4b\xc7\x91\x78\x44\x50\x87\xaa\x24\xcf\x8a\x2e\x5b\x52\x4d\x84\xbe\x3e\xef\x57\x96\x6c\xb1\xf8\xa4\xa9\x28\x39\xf1\xba\xed\xd8\x2e\x77\x77\xf0\x71\xfd\xfd\x1d\xf8\x9e\x02\x96\x86\x65\xb9\xfa\x40\x5b\xe3\x73\xb4\x23\x44\x5e\x9f\x5d\x4a\x25\xc4\xad\x7b\x31\x9b\xab\x03\xf4\x63\x59\xc7\x24\xf5\xd4\x8b\xd5\x30\x13\xb6\xa5\x60\xda\x11\x4c\x8a\x13\x63\x55\x05\x58\x36\xd1\xf9\x04\xca\xe7\xc6\x12\xf8\x00\x29\x98\xde\x12\x48\x9f\x99\x98\x03\x1d\x57\xe5\xd2\x3c\xd7\x25\x5c\x7b\x6f\x09\xdd\x59\x21\xe2\xfd\x4b\xe7\x40\x6b\xfd\xc0\x32\x62\x38\x87\xcb\x5e\x54\xc4\x07\x83\x26\xc7\xbf\xdd\xb4\xb8\xcc\x85\x71\x89\x42\xc8\x7d\x22\xc5\x9d\x5e\x2c\xc9\x11\x8f\x04\x8d\xf5\xf2\x09\x02\xf5\x81\x98\x23\x52\xa0\x29\x14\x52\x4d\x98\x8c\xc1\x34\x96\xb8\x92\x89\xb7\x07\x7f\x4e\xd0\x3f\x6a\x02\x8b\x31\xc1\x93\xf3\x83\x3b\xca\x9d\x5b\x14\xa8\x7d\xf0\x92\x62\x9c\xbc\xd0\xc4\x23\x65\x02\x14\x1b\x75\xb9\x6b\x28\x14\x33\x6c\x08\xe8\x73\x46\xfb\x2c\x9b\x1c\x8a\x0d\x4e\x05\x5d\xee\xe0\x22\x3b\x45\x61\x27\xd9\xf2\xbf\x72\xb9\xab\x2f\x8b\xf3\x0d\xda\x48\x0d\x12\x79\x25\xeb\x63\xf8\x35\x94\xee\x99\x2a\x80\xdb\x43\x1b\x2c\x88\x23\x6d\x3a\x6e\x34\xef\x4f\x91\xeb\xd5\x84\x78\x86\x37\x18\x6b\x19\x9f\x0a\xa6\x2d\xd6\x8e\x03\x8e\xd0\x8c\x25\x7e\x8e\xf1\xed\x84\x34\x42\xa4\x1e\xc3\xf4\x04\x68\x42\x35\x5f\x80\x55\xf5\xe1\xf6\xba\x2a\xe4\x1e\x60\xbb\xe6\xd3\x75\xee\x96\xf0\xd1\xb8\xf4\xdd\xb7\x67\x42\x94\x84\x25\x94\x93\x9f\x08\x15\x85\x33\x21\x00\x00\x98\x7a\xbe\x7b\x79\x4e\xa6\xb5\x9c\xe5\x7f\xb2\xf8\x45\x3c\x68\x5c\x79\x22\x9e\xed\x69\xa7\x49\xf1\xbe\xf8\x40\xbd\x3b\x59\x4d\x07\x35\x34\x64\xfd\xc0\xfc\x5b\xd3\xf1\xfe\xea\xbd\xcd\xf1\x5f\xef\xd8\x70\xa6\xe0\x7d\xd9\xd1\xe7\x70\x6c\x78\xb0\xb2\x49\xfb\xbc\xd1\x45\xd4\xcf\x19\x6d\xf0\xdd\x29\xd0\x08\xc8\xf6\xb1\x45\x63\x91\x67\x71\x11\x89\xf6\x8e\xb3\x03\x76\x39\xed\x51\x99\xfb\x12\x0e\x8c\xa3\xb0\xc1\xde\xfe\x6f\xcc\xba\x99\x5f\x89\x53\xb7\xfe\xff\x58\xe6\xdb\x8e\xf9\xca\x03\xf9\x65\xbb\xca\x57\x5b\xf9\x6f\x6c\xe5\xab\xa5\xbc\x61\x29\x7f\x07\x00\x00\xff\xff\xb4\x8d\x8a\xd9\x2c\x0c\x00\x00")

func search_transactionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_search_transactionGraphql,
		"search_transaction.graphql",
	)
}

func search_transactionGraphql() (*asset, error) {
	bytes, err := search_transactionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "search_transaction.graphql", size: 3116, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x88, 0x44, 0x2b, 0xac, 0xef, 0xe5, 0x4f, 0xa2, 0x32, 0xfa, 0xca, 0x83, 0x9e, 0xa8, 0x1, 0xc8, 0x68, 0x3c, 0xa4, 0xd3, 0xdc, 0xc0, 0x35, 0x82, 0x1, 0x86, 0xb9, 0xb4, 0x8b, 0x66, 0x84, 0x8c}}
	return a, nil
}

var _subscriptionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x4d\x6f\xdb\x46\x10\xbd\xe7\x57\xbc\xea\xe4\x04\x8a\x90\x7e\xa0\x07\x01\x39\xd8\xa8\x8b\x18\x48\x2c\xd4\x76\x9b\x2b\x47\xcb\xa1\xb8\xf0\x72\x56\xde\x0f\xb1\x4a\xd1\xff\x5e\xcc\x92\x92\x68\xb7\x6e\xd1\x53\x72\xc8\x49\x14\xb9\x33\xf3\xe6\xed\x9b\x37\x69\xbf\x65\xdc\xe6\x75\x34\xc1\x6e\x93\xf5\x82\x3f\x5e\x00\xc0\x6c\x36\x2b\xbf\xb7\x4c\xc1\xb4\x48\x2d\x63\xed\xbc\xb9\x37\x2d\x59\x41\xe3\x43\x4f\xa1\xd6\x5f\xa4\x40\x12\xc9\x94\xd8\x57\xfc\x3b\x9b\x5c\x1e\x53\x20\xc3\xf1\x15\xd6\x14\xb9\x86\x17\x54\x0f\x99\xc3\xbe\x5a\xbc\x28\x79\x3f\x9e\xdf\x5c\x2f\x41\xae\xa7\x7d\x84\xf1\x12\x6d\xcd\xa1\x94\xa9\xb2\xd4\xbe\x42\x63\xd9\xd5\x98\xd4\x8a\x05\x09\xc7\x39\xfa\xd6\x9a\x16\xd1\x6e\x84\x1c\x52\x4b\xa9\xc4\x75\x94\x4c\x6b\x65\x03\x76\xdc\xb1\xa4\x52\xa6\xa7\x58\x72\x90\x49\xb8\xb9\xfc\xb0\xfa\xed\xf2\x27\x34\xc1\x77\x25\x62\xe8\x65\xcd\x86\x72\x64\xf8\x66\xe8\x30\x22\xb0\x0f\x1b\x12\xfb\x89\xb4\x93\xc5\x23\x3e\x06\x14\x77\xa7\x9e\xe3\xcf\x03\xbe\xb3\xf2\xb9\x1c\xad\x1b\xcd\x37\x32\xf7\x8b\x76\x8d\xf7\x24\x9b\x4c\x1b\x46\x4c\xc1\xca\x66\x76\x3c\x5c\x48\x59\xe2\xb6\xbc\xfe\xe6\xc5\x29\xc9\x7b\xdf\x73\x18\x10\x41\x72\x87\xb5\xcf\x52\x53\xd8\xcf\x61\xc5\xb8\x1c\xed\x8e\xdd\x7e\x81\x73\x08\x6f\x28\xd9\x1d\x63\x47\x2e\x33\x3a\x26\x89\xa0\x31\x32\xb0\x1b\x3e\x26\x5f\x5a\x6e\x99\x6a\xf8\x00\x47\x31\xc1\x86\xc0\x3b\x0e\xd1\xae\xdd\x78\xbb\x38\xab\x79\xcb\x52\x2b\x8d\x7a\x65\xd3\x13\x2b\x71\xfb\xea\xe5\xe2\x04\xdd\xf9\xfe\x42\x83\xae\x73\xb7\xc4\x95\xa4\x1f\x7f\x98\xc0\x7f\x67\x37\xed\x17\x89\x1f\xe7\xa8\x24\x3b\x57\x3d\xaa\x27\x1e\xed\x80\xd8\xd9\xce\xa6\x38\xd7\x6a\x81\x1b\x1f\x78\xbc\x72\x4d\x69\x65\x84\xd1\xe4\x94\x43\x91\xcc\x51\x47\x13\x62\x34\xd3\xf3\xcc\xac\xb6\xf4\x90\x19\x35\x25\xc2\xd6\xb2\xe1\x41\xc2\x7b\x9f\x61\x48\xb0\xa5\x18\xb1\x26\x73\xaf\x2d\x1b\x2f\xc9\x4a\x66\xfd\x1a\x46\x20\xb0\x0d\x6c\x82\xf6\x85\xda\x46\xe3\x45\xd8\x24\xae\x17\xb8\xe1\x14\x2c\xef\x58\x3f\x1f\x45\x5e\x99\x1c\xa2\x0f\x93\x81\xd2\xb7\x81\xe3\xd6\x4b\xe4\x38\xf4\x60\x23\x0c\x39\xb7\xc0\x55\x82\x8d\x88\xd4\x14\xc6\x55\xc6\x7a\x3a\x52\xc7\x18\xf2\x68\x82\x8b\xd5\xdd\x3b\xd4\x36\xf0\x30\x00\x38\x3b\x8c\x28\x49\x5d\xa0\xeb\x9f\xa9\x52\x86\xd0\x83\xca\xa7\x22\x57\xb2\x4b\x09\xc9\xdd\x9a\x83\xa2\x09\x1c\xb3\x4b\x51\x27\x85\xa9\xe3\x21\xe3\x54\x76\x1a\x33\xd2\x8a\xb7\x78\x33\x49\xf7\xb1\x65\x35\x9e\xcc\x73\x78\x71\xfb\x31\xc5\xc0\xe6\x21\xad\x97\xc2\x38\xef\x07\xa6\xb5\xf6\x49\x25\xd6\xd9\xb4\x3f\x4a\x75\x81\x95\xaa\xa0\xb7\x91\xe7\x20\xe7\x7c\x8f\x86\x47\x93\x39\xa4\xcb\xdb\x47\xd2\x2c\x2a\x9c\x80\x7d\x2a\xc0\x25\x2e\xbc\x77\x4c\x82\xb7\x68\xc8\x45\x9e\xa0\x9f\xcd\xae\x1a\x88\x97\xd7\x9f\x38\x78\x1d\x93\xda\x1a\x4a\x1c\x8b\x34\x7a\x92\xa4\x95\x3a\x0a\xf7\xc3\x9d\x0c\xbd\xf5\xda\x72\x60\x1a\x50\x39\x1d\x95\xc1\xc5\x54\xe8\x7a\x98\x83\xde\x28\x1d\x6f\x1c\xbd\x4d\x2d\x08\x55\x31\xe8\x0a\xfc\x90\xd5\x45\xfd\x38\x15\x07\x77\xed\xad\x73\x58\xab\xf8\x25\x81\x12\xb4\x02\x2a\xcd\xff\xa1\x24\xbd\x92\xc4\x61\x47\xae\x3a\x96\xbb\xd3\xb9\xb0\x21\xa6\x63\xea\xe4\x35\xc3\x93\x02\x2a\x20\x3a\xa0\x7f\xdc\x23\x05\x86\xf8\x1e\xdb\xe0\x0d\xc7\xf8\xb4\xa1\x13\x55\x5a\x6a\x98\x5e\x5d\x40\xff\x88\xaa\xf4\x7c\x12\xd5\x21\xc5\x84\xec\x89\xa0\x9e\x86\x2f\xf1\xab\x95\xf4\xfd\x77\x27\x79\xbd\x5c\x8e\x7e\x3e\x71\xfe\xd1\xf8\x6f\x46\x62\x47\xf3\xfe\xf7\xc5\x79\x98\x8e\xbf\x6d\xce\xa7\x8b\xf3\xb9\xbd\x79\xbd\xba\xbb\x5c\x16\x02\x1e\xef\x49\xb5\xb0\xa4\x03\x5b\x46\xfc\x50\x26\x8e\x9e\xf1\x5f\x3b\xec\x62\x3c\xff\x99\x96\x98\xb6\x43\xeb\xc8\x3a\x9a\xbe\x01\x0d\x97\x3b\x57\xa3\x1f\x9f\xf5\xf5\x9b\xd1\xab\x0b\xa5\xbc\xb1\x22\xc5\xe6\xa7\x1e\xfc\x75\x1d\xfe\x4f\xfc\x73\xbc\xfe\x16\x6b\xd6\x03\xcf\x7a\xd8\xd7\x75\xf6\x05\xaf\xb3\x42\x76\x4b\x3b\x2e\x4c\x73\xfd\xf9\x17\xda\x73\x76\x79\xf0\x98\x89\x5f\xfe\xf9\x57\x00\x00\x00\xff\xff\x93\x1e\x2f\x48\x7e\x0c\x00\x00")

func subscriptionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_subscriptionGraphql,
		"subscription.graphql",
	)
}

func subscriptionGraphql() (*asset, error) {
	bytes, err := subscriptionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "subscription.graphql", size: 3198, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2e, 0x9c, 0xd0, 0x11, 0xad, 0x7e, 0x39, 0x73, 0x29, 0xea, 0xdc, 0x5c, 0xba, 0xc9, 0xe, 0x27, 0x79, 0x62, 0x51, 0x0, 0x35, 0xd4, 0x91, 0xe9, 0xb5, 0xfc, 0x76, 0xc5, 0xb7, 0x52, 0xab, 0xf1}}
	return a, nil
}

var _tokenmetaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4f\x8f\xdb\xb6\x13\xbd\xeb\x53\x4c\xf4\x3b\xec\xaf\x40\x2b\xa3\xf9\xb3\x49\x05\xf4\xe0\x75\xdd\x62\x81\x66\x13\xac\xdd\x53\x51\x34\x34\x39\xb6\xa6\x2b\x91\x0a\x39\xda\x3f\x28\xf6\xbb\x17\x24\x45\xc9\x96\xbd\x68\x72\x68\xb2\x87\x85\x38\x9e\x79\x6f\xe6\xf1\x71\xf2\x3c\x5f\x57\x08\x0b\xa3\x35\x4a\x26\xa3\x81\x1f\x5a\x84\xad\xb1\x20\x60\x6d\x6e\x50\xe7\x79\x9e\x85\x58\x38\xed\x25\xfe\x9d\x01\x00\xe4\x79\xfe\x61\x53\x1b\x79\xf3\x01\xc8\x01\x57\x08\xe1\x04\x82\xe1\xae\x22\x59\x85\x10\xfb\x52\x50\x82\x85\x4f\xba\x15\x35\x29\x0f\xeb\xeb\x43\xf6\x35\x6e\x4b\xb8\xe8\xbf\xb2\x84\x3b\x87\x9a\x1c\x83\xd9\x02\xaa\x1d\x3a\x60\x13\x81\x5c\xaa\x0d\xe1\x12\x7e\x0f\x9d\x2d\xd5\x0e\xff\x78\x36\x14\x5f\xea\xad\xb1\x8d\x88\x23\x19\x10\xa4\xa0\x15\x3b\xd2\x21\x92\x00\x5a\xb1\x43\x9f\x58\xc2\xfb\xfe\x2b\x7b\xcc\xb2\x40\xed\x48\xef\xea\x7e\x68\xb0\xe8\x5a\xa3\x1d\x16\x87\x62\x78\xca\x51\x86\x15\x22\x54\xcc\xad\x2b\x67\x33\x65\xa4\x2b\xd4\xb6\x73\x58\x90\x99\xa1\x71\x64\x66\x6d\xb7\xa9\x49\x7e\x27\x5a\x72\x33\x8b\x5b\xb4\xa8\x25\xce\x1c\x0a\x2b\xab\x99\xec\xac\x33\x76\x98\x2c\x1e\x4b\x58\xb1\x25\xbd\x1b\xa7\xf2\x77\x15\x5b\x32\x9b\xbf\x50\x72\x91\x0a\xb4\x51\x58\xc6\x9f\x9e\x4d\x67\x08\xc2\x9e\x98\x21\x09\xbe\x3f\xc2\xc7\x0e\x35\x93\xa8\x41\x77\xcd\x06\xad\x17\x9f\x2b\x72\xfd\xa5\x7a\x2d\x2b\x04\x59\x09\xd2\x23\x75\xc8\x2c\xe1\x37\xd2\x7c\xfe\xb2\xef\x95\xd4\xd8\xfc\x29\x49\x0f\x85\x1c\x3b\x58\x18\xcd\x56\x48\x06\xae\x04\x83\xb4\x28\x18\xd5\x9e\x87\xa8\xc0\xa2\x84\x20\x68\xc1\x09\x28\x28\xd6\x17\x1e\x6b\xb6\x7a\x68\x36\xa6\x0e\x93\x04\x88\x1e\x63\xf9\x6e\x95\x6a\x5d\xc8\x38\xa1\x76\xc8\x6f\x2d\x4a\x72\xfb\xae\x49\x81\x38\xf3\x8b\xe7\xd3\x8a\xd4\x0b\x90\x73\x9d\x97\x26\xf4\x9b\xca\x53\x70\xca\x76\x35\x2a\x1e\x50\x2a\x53\x2b\x1c\x2d\xd1\x1f\x27\x3a\x27\xce\x33\x07\x8d\xb8\xa7\xa6\x6b\xc0\x75\x6d\x5b\x3f\xa4\xb2\x3e\xba\x0a\xc1\xff\xc7\x37\x51\xc2\x7c\xb5\x5a\xae\xff\xfc\xf9\xdd\xf5\xdb\xf9\x1a\x7e\x8c\xc7\x6f\x9e\x10\xe0\xcc\xbf\x3c\x16\xf5\x04\x38\xc4\x3e\x0f\x36\x1a\xe1\xe9\x7d\x33\x97\xd2\x74\x9a\xe1\x42\xd4\x42\x4b\x1c\x3c\xd2\xc7\xfb\xf0\x57\x5e\x41\xa2\x6f\x72\x13\xbb\x39\x5a\x46\x87\xcd\x7e\xd9\xad\x74\xcc\xfd\xe5\xd7\xd3\x44\x9f\xd3\x8b\xea\xb0\xd1\xe0\x8c\x53\x13\xfc\xa7\x7b\x21\xb9\xcd\x3f\x2c\xd2\xbb\x11\x2c\x95\xf6\x93\x7c\xdd\x8d\x32\x6f\x42\x93\x61\x0f\xa7\x61\x2b\xac\x15\x50\xdc\xc5\x7d\x93\x83\x97\xa3\x70\x9f\xf7\x22\x17\xf1\x76\xc1\xe2\xc7\x8e\xac\xd7\xd5\x04\xdd\x48\x77\x08\x48\x5c\xa1\xf5\x2f\xf4\x4e\x58\x05\xc6\xc2\x46\xc8\x1b\xff\xed\x60\x6b\x4d\x03\x62\x78\x23\xbd\x95\x51\x01\xd6\xd8\xa0\x66\x37\x38\x33\x39\x79\xbc\xd1\xe8\xa1\x34\xd8\x96\xac\xe3\x54\x96\x82\x1e\xf7\x5b\xe8\x1c\x02\xb1\xef\x29\x9a\x31\x4d\x6e\xda\xd6\x38\x62\x04\x45\x36\xee\x83\x41\x7d\x16\x96\x17\x13\x8f\x9e\xa4\xad\xc5\xbf\xb3\x26\x25\x86\x87\xae\xd5\x13\xd8\xa4\x15\x49\xc1\xe8\xe0\xae\xc2\xa0\x9a\xff\x87\x7e\xe1\x08\xd0\x78\xcf\xe1\x69\x0f\x0b\x5d\xb8\x2b\xbc\x67\xaf\x4c\x09\x17\xc6\xd4\x28\xf4\xa7\x41\xb5\x16\x6f\xc9\x74\x6e\x0a\xf7\xbe\x8f\x4f\x20\x1f\xb3\x0c\x75\xd7\x1c\x7a\x61\xb8\x87\x5b\x51\x77\x08\x77\xc4\x71\x4f\x0e\x56\x04\xa1\x55\xef\x63\xef\x6f\x38\xfb\xfe\xf9\x8b\x97\xc5\xab\xf3\xd7\x6f\xbc\xd1\xcf\x12\x6d\x00\x85\xf8\xf7\x3f\xf0\x39\xaf\x8a\xf3\xd7\x6f\x7e\xf0\x49\xc7\x14\xa6\xe3\x09\x8b\xb1\x7b\x24\x45\x64\xf1\x24\x03\xc1\xe5\xd5\x7a\xf9\xcb\xf2\x7a\x9f\xc0\xe3\x7f\x52\xfb\xda\x44\xba\x23\x86\xe2\x80\xe2\xa7\xe5\xe2\xf2\xed\xfc\xd7\xa3\x19\xb2\xc7\xec\x9f\x00\x00\x00\xff\xff\xa4\x1b\xf5\xed\x20\x0b\x00\x00")

func tokenmetaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_tokenmetaGraphql,
		"tokenmeta.graphql",
	)
}

func tokenmetaGraphql() (*asset, error) {
	bytes, err := tokenmetaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tokenmeta.graphql", size: 2848, mode: os.FileMode(0644), modTime: time.Unix(1672665691, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x13, 0x6f, 0xc2, 0x83, 0xb1, 0x86, 0x6d, 0x47, 0xaa, 0xfd, 0xac, 0xf6, 0xec, 0xd0, 0xab, 0x9, 0x66, 0x22, 0xa8, 0x13, 0x59, 0x2b, 0x4d, 0xd2, 0x95, 0x1e, 0x5c, 0x77, 0xf6, 0xbd, 0x4b, 0x9e}}
	return a, nil
}

var _transactionsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7b\xdd\x92\x1b\x37\xee\xef\xbd\x9e\x02\x99\x5c\x78\x26\x25\x2b\xc9\x66\x2b\x27\x47\x75\xf6\xa4\xe4\x91\x1c\x6b\xe3\xf9\xd8\xf9\x58\x27\x67\x2b\x25\x51\xdd\x90\xc4\xb8\x45\xb6\x49\xf6\x68\xb4\x5b\x7e\xac\xf3\x02\xff\x27\xfb\x17\x00\xb2\x3f\x24\x8d\x3d\xf9\xd7\x5e\xec\x8d\x3d\xea\x6e\x82\x00\x08\x02\x3f\x80\x60\xef\xe4\xe4\xa4\x77\xe7\x54\x86\x1e\xec\x12\xc2\x1a\x01\x1f\x31\xab\x82\xb6\x86\x1e\x28\x58\xe9\x07\x34\x10\x9c\x32\x5e\x65\xf4\x78\x00\x77\x6b\xed\x61\x83\xca\x78\x1a\xd0\x6b\xbd\x83\xad\xf2\x91\x00\xe6\x60\x0d\x13\xcc\xd6\x4a\x9b\x01\xfc\x6a\x2b\x50\x85\xb7\xb0\xc2\x00\x99\x35\x01\x1f\x03\xa8\x85\xad\x02\x53\x59\x14\x36\x7b\x0f\xda\xc0\x76\xad\xb3\x35\xe8\xd0\xa1\xd5\x07\x65\x72\xa6\xe6\x83\x0a\xd5\x21\xb3\x83\x5e\xef\xdd\xe8\xe6\x72\x08\x17\xea\x3d\x82\xaf\x1c\x42\xb0\xa0\x8a\xad\xda\x79\xc8\xd6\x98\xbd\xe7\xef\xe7\x32\x7c\x0e\xa7\x5a\x98\x9b\x3b\xcc\x50\x97\x61\x7e\x06\xc1\xf6\x36\xf5\xe0\x9d\xad\x5e\x38\x04\x63\x99\x57\xaf\x73\x74\xda\xac\x40\xc1\x52\xe9\x02\xf3\xb6\x42\x40\x79\xd0\xcb\xc8\x71\xcf\x57\x59\x86\xde\x2f\xab\x62\xc0\xca\x0d\xbb\x12\xe1\xae\xf9\x9a\x95\x0d\xff\xea\x01\xe8\x7c\x08\xb7\x81\xc8\x7e\xd1\xeb\x01\xd0\xc7\x00\xaf\xba\x6a\x08\xa4\xea\xf6\x5c\x81\x87\xdb\x2c\xab\x9c\xc3\xbc\x1e\xc6\xda\x1b\xca\xe8\x37\xa8\x72\x74\x2d\x9a\xbc\x5e\xda\x83\x02\xbf\xb6\x2e\xbc\x5c\x93\x2e\x97\xd6\xd5\xc2\x0f\xa2\x56\x06\xf5\x10\x79\x30\x84\xbb\x9b\xd1\xe5\xed\xe8\xfc\x6e\x7a\x75\x39\xbb\xbd\x1b\xdd\xdd\xdf\xb6\xe9\xb6\xf8\x6a\xac\x26\xd2\x4c\xeb\xe8\xc5\x06\xac\xf1\x68\x7c\xe5\xe1\x41\x15\x15\x42\xe9\x6c\xa9\x56\x8a\xac\x44\x65\xce\x7a\xf9\xca\x60\xd8\x5a\xf7\xbe\x61\x23\xd2\x1a\xb6\xa7\xba\x91\x67\x07\x52\x8e\x36\xb6\x32\x81\x0c\xa3\xe1\x25\xe8\x0d\x92\x32\x37\x9a\x26\xc1\xcc\x9a\xdc\xc3\xe9\x7f\xfd\x7f\x7f\x06\x58\xa8\xd2\x63\x0e\x8b\x9d\x28\x79\xbb\xb6\x05\x1e\xda\x79\x0f\x20\xb3\xce\xa1\x2f\x79\x6c\xb0\x62\x35\xad\xef\x66\xbc\x24\x83\x48\x6f\x0e\x4b\x8d\x45\x0e\xd1\xbc\x26\x57\xb7\xd3\x2b\xf0\x76\x19\xb6\xca\xe1\x80\xb8\x15\x33\x4d\x6b\xf2\xd5\x57\xc6\x86\xaf\xbe\xe2\x8f\x5b\x4a\xd9\xd3\x57\xdc\x73\xa2\x3b\xed\x61\xe9\xec\xa6\x45\xdf\xd8\x1c\x7b\x00\x61\xad\x02\x38\x2c\x0b\xb5\x43\xd9\x2c\x6d\xcb\xa9\xc7\x24\x2d\xc3\xbd\x6f\xec\x7f\x90\x95\xd5\xbd\x57\x2b\xbc\x20\x55\xdd\x8a\xaa\xe6\x24\xc6\xce\x56\xae\x07\xf0\x93\x53\xe5\xfa\x6f\x6f\xc1\x96\xe8\x14\x13\xd4\xc6\x07\x54\x39\xe9\xc4\x61\x70\x1a\x1f\xf0\xd8\x5a\x37\xab\x19\x55\x34\x84\xa9\x09\xdf\xff\xf9\xe8\xd2\x45\xde\x60\xa1\x4c\xbe\xd5\x79\x58\x33\xb5\x6a\x83\x39\x9c\x92\xc5\xb2\x07\xa0\x4d\x1a\xf7\xbf\x53\x01\xa1\xd0\x1b\x1d\x68\x77\xa2\x59\x69\x83\x67\x4f\xaf\x69\x1f\xb4\xa1\xdd\xb2\x0b\xe8\xa3\x4e\x9f\xb7\xba\x06\xc3\xac\x22\xf5\x7c\x72\x7d\xe1\xb4\x36\xfa\xca\x57\xaa\x28\x76\x24\xf5\x87\x4a\x3f\xa8\x02\x4d\x20\xfa\xb5\xbe\x6b\x8a\xb3\xad\x75\xb9\x87\xaf\xe0\x87\xf9\xd9\x7f\x98\x81\xbc\x5b\xeb\x82\xd7\xd4\x31\x51\x43\x0b\xad\x3c\xed\x2b\xcb\x9e\x71\xa3\x02\xfb\x28\xe4\x5d\xd2\x61\xa8\x4f\xfe\xd0\x07\x5d\x14\x90\xd9\xaa\xc8\x61\x81\x90\xeb\xe5\x12\x1d\x9a\x30\x80\xae\xed\x19\x0c\x6c\x7b\xef\x48\x13\xff\x16\xa3\x83\xd3\x4d\x55\x04\x5d\x16\x48\x7c\x2c\x76\xf0\x03\x8d\xa0\xc8\x43\x1f\xab\x64\x6f\xc9\x16\xce\x1a\x23\x4d\xbc\x0c\xe1\x5e\xef\x99\xe9\xbb\x35\x92\x2e\x0e\x9d\x32\x45\x2a\xeb\xf4\x4a\x1b\x5a\x73\xf2\xb3\xd9\x1a\xf3\x6a\x2f\x4e\xb4\xbc\x6b\x7a\x3d\x84\x57\xd6\x16\xa8\x0c\xcf\xf2\x25\x8c\xf2\x1c\x4e\xf4\xa6\x2c\x74\xa6\xc3\x09\x6c\xd7\xc8\x66\xb6\xa3\x50\x94\x1e\xc3\x69\xa1\x69\x03\x18\x74\xce\x3a\x8e\x8b\xd6\xb0\xff\x3f\x6b\x88\x38\xb5\xb1\xa5\x97\x05\x27\xc3\x3c\xb0\x68\x28\xf0\x01\x8b\x21\x0f\xf8\x0a\x54\x51\x88\xe5\x8f\x27\xaf\x27\x37\x37\x93\xf1\xec\xee\xe6\x97\x39\x51\x69\x54\xef\x07\x8d\x26\xde\x6a\x1f\x3c\x8f\x6a\x87\x25\xdf\x87\x65\xa1\x42\x40\x43\x6e\x9d\xf8\x72\x39\x3a\xf1\xb1\x5d\x9f\xdc\xf2\x09\x31\xc0\x8f\x98\x8e\x1f\xc2\x3f\x46\x4d\x98\xfc\xe2\xb7\x96\xf6\x6f\x30\x54\xce\x50\x14\x6b\x26\x29\xb4\x67\xb7\xb1\xc7\x85\x36\x30\xab\x27\x9c\x09\x1b\x7d\xfa\xce\x9a\x62\xc7\x82\xb2\xe5\x92\xcb\x68\x29\xc6\xc3\x29\x6f\x01\x05\x1e\x95\xcb\xd6\x7d\xb0\x0e\x2c\xaf\xf8\x52\x17\x81\x01\x40\xcb\x50\x12\x89\x4f\x72\xde\x40\xab\x34\x87\x0a\x90\x63\x19\xd6\x7f\xf9\xa6\x0f\x61\x6d\x3d\x42\xa9\x5c\x48\xfe\x2c\x59\x51\x3b\xe0\x0d\x60\x6a\x60\x4e\x5b\xd8\xfa\x39\x3c\xa0\xf3\x24\xeb\xb7\x83\xff\x35\xf8\x86\xb5\xbc\xc0\xc2\x6e\xfb\x62\x95\xc7\xbc\x59\x7b\xd9\x7d\xf4\x5f\x03\x92\x20\xd8\xf2\x2d\x59\xc1\x51\x09\x7e\x8b\x26\xf9\x7a\xfa\xcb\xc5\x64\xc8\xd6\x87\x1b\x76\x62\x6b\xed\xc5\x6e\x04\x0a\x8d\xef\xdc\x23\x8f\x18\x1e\xc0\x9c\x0e\x05\x7c\x40\x13\x2a\xd9\x20\x79\x0e\x73\x36\xdf\x59\x66\x73\x9c\xf7\x23\x58\x58\x60\x66\x37\xe8\xc1\xa8\xa0\x1f\x38\x70\x7f\x3b\xf8\x61\xf0\x4d\x8f\xed\x24\xc3\x32\xfc\xf5\xf6\xea\x72\x08\xf4\x6f\xef\x63\xaf\xe7\x33\x55\x28\x27\x3f\xe3\xdf\xb2\x67\xd3\xaf\x69\xfb\x07\xbd\xfa\xee\x4f\x3d\x02\x65\x77\x0c\x0b\xc8\x94\x1c\x96\x0e\x3d\x9a\xa0\x12\xe2\x4d\x90\x81\x54\x77\xf3\xfa\xfc\xbb\xef\xbe\xfb\xdf\x84\x95\x36\x2a\xf4\xc1\x96\xf4\x15\x8b\xa0\x4d\x56\x54\x39\x59\xd0\x46\x17\x85\x8e\xd8\x62\x40\xa6\x11\xe7\xa3\x49\x7a\x07\xf0\xaf\x83\x5e\x18\x06\x7e\x0a\x6a\x01\x1c\x0b\xcb\xc3\x28\xcb\x17\x2d\x77\xc5\xae\xb3\x79\xf1\xb1\xc7\x82\xf6\x5a\x0b\x0a\x6b\x5b\xe4\x3e\x79\xfd\x68\x95\x7b\x60\xdf\x6b\xb3\x2a\x30\x6d\xa7\xad\x0e\x6b\x6d\x40\x75\x9d\x58\x0d\x6a\x47\x7b\x78\xf6\xe4\xe4\xe4\xa7\xc2\x2e\x54\x01\x1e\x3f\x54\x68\x32\x84\xe9\x18\x24\x6a\x93\xb2\xb3\xe8\xc0\xa3\xa5\x52\x56\x00\xa7\x8c\x48\x6b\x40\x9a\x02\xc2\x8a\xe9\xcc\x12\x9d\xb3\x01\x5c\x5e\xdd\x91\x15\x2e\x65\x30\xaf\x5d\x44\xe2\x29\xb2\x7b\xfc\x00\x5b\x8a\x37\x0b\x84\x6f\x06\xd1\xd1\xe2\x87\x7d\x3f\xfe\xff\xd0\xd9\x97\x0b\x45\xd0\x4f\x9b\x1c\x1f\x65\xe7\x35\xfc\x45\xa1\xf7\x82\xe3\x71\x9f\x32\x68\xfb\x30\x6d\xcd\x94\x08\x36\x8b\x20\x13\x8a\x9a\x6a\x58\x1c\x21\x82\xc4\xc2\x56\xa0\x6e\x83\xe9\xf8\xad\xc0\x81\x3b\x82\x39\x09\x53\x47\xf9\x4c\x55\x14\x12\x1d\x48\x09\x95\xa3\xc5\xa4\x94\x60\x00\x7f\x47\xa7\x97\xbb\x4e\xae\xd3\x83\x88\x59\x62\x3e\x76\x90\x8c\xd8\xc5\xef\x98\x85\x96\x7b\xaf\x61\xf7\xa8\x6d\xb3\x2d\xbc\x96\x65\x1c\x40\x45\x14\xda\xc2\xdd\xc4\x2f\x58\x82\x2a\x79\x95\xa1\xa8\xb6\xe5\xfc\x19\x4d\x11\xa5\xdb\xa3\x0b\xcf\xff\x3f\xa0\xeb\xb2\xf2\x80\xae\x95\x2a\xc9\xbb\x3b\xe5\x28\x9c\x6f\x30\xac\x6d\xfe\x82\x96\x4f\x78\x32\x6a\x83\x83\x98\xf3\xe4\x16\x3d\x30\x7e\x6a\x39\xc6\xe4\x17\x29\x05\x75\x2a\x0b\xc2\xff\x02\x19\x40\xd6\xe9\x26\x47\x4e\x86\x90\x2a\x44\xa0\xf2\x80\x6e\x2e\x69\x6f\xa2\x2f\x50\x83\x66\xf4\x25\xef\x28\x82\x2d\xc9\xd3\x1f\x91\x52\x65\x61\x90\xf8\xd4\x2d\x9f\x2e\xfb\x51\x04\x8e\xef\xf7\x53\xc3\x43\x71\x59\x9f\x22\x6d\xc3\x4c\x1f\x32\xbb\x59\x68\x8a\x8d\x64\xc8\x29\x00\x30\xc9\x79\x1f\x72\x0c\xe8\x36\xda\xa0\x6f\xaf\x5d\xa9\xc2\xba\x36\xad\x7a\x11\x3b\x09\x32\xcb\xde\xd1\xd8\x13\xe2\x11\x43\x47\x64\x8b\x3b\x85\xde\xee\x4b\x76\xab\x57\x46\x05\xeb\x34\x7a\x70\x04\x96\x9d\x58\x50\x64\xa4\xbd\x39\x8f\xcc\x39\x67\x9d\x56\x61\x6d\x9d\xfe\x27\x3b\xf1\xf9\xd3\xd3\x77\xbe\x1b\xc2\x3f\xae\x49\x19\x9e\xc2\x29\xc7\xc1\x06\x6e\x8c\x55\x50\x50\xaa\x5d\x61\x55\x3e\x80\x0b\xbd\x5a\x07\xd2\x8d\x02\xcf\xac\x13\x30\x50\x1c\x77\xe2\xde\x21\xcd\x96\x68\x38\x1e\x90\x0f\x89\x40\x31\x16\x31\x4a\xeb\xbd\x5e\x14\x5c\x91\xa8\x4c\xa9\x28\xc1\x0f\x50\x79\x2e\x28\x18\x18\xbd\x9a\x3e\x25\x58\xae\x82\xfa\x84\x3c\xf4\x3a\x86\x43\xe1\x9b\x59\xba\x62\x96\x9a\xd0\xc6\x30\x67\x5d\x7b\xf5\x52\x39\xb5\x21\x3b\xf0\xc4\x35\x2d\x25\xa5\x02\xce\x56\x2b\x31\x17\x62\x07\xde\x45\x6b\x98\x93\xa7\x99\x37\xe5\x0d\xf3\x22\x74\xc4\x11\x02\xa0\xc3\x71\x73\xa0\x35\xfb\xdd\x5b\x23\xec\xd2\x5f\x1d\x76\xdf\xe0\xe3\x4b\x34\xc2\x42\xd4\xec\x01\xd7\x8e\x61\x5f\xdc\x6a\x11\x25\x7d\xda\x1a\x64\xc4\x8c\x47\xcc\xd6\xf8\x38\xfb\x8c\x16\xe5\xfb\xbf\xd3\xe7\x6f\xf0\x71\xcc\x3a\x15\x13\xfd\x23\x6c\xaa\x2d\x2f\x07\xa4\x2c\xf5\xd3\x3c\x3e\x83\xad\x75\x97\x97\x3a\x9c\xd4\xa0\xf7\x66\x74\x01\x9b\x2a\x21\x97\x1a\xa6\xf7\x93\xef\x6d\x6a\x1b\x9d\xf8\xdd\x83\x18\x4c\x19\xe1\x8c\x2e\x80\x12\x05\x6b\xc8\x12\x93\x53\xc1\x07\x32\x5e\x46\x38\xd8\xa2\xdc\xa4\x13\x69\xda\xba\x0e\xd7\xce\x86\x74\xf0\x58\x2c\x63\x9a\x92\x39\x54\x0d\xbe\xc8\x71\x89\xce\x91\x7f\x65\x9f\xbf\xb1\x0f\xaa\xe8\xbe\x91\x80\x78\x33\xba\x38\x1b\xc0\xeb\x08\x1d\xfa\xb1\x80\x37\x77\x6a\x73\x55\xfa\xf9\x67\x03\x59\x1d\x3c\xf8\xfb\x21\xfc\xe3\x66\x74\x71\x55\x36\xdb\xbb\xd1\x21\xa5\x30\x2d\x01\xd5\x72\x89\x19\xaf\x69\xcd\x4f\x3b\x41\xe8\x43\x47\x26\xda\x3f\x05\xca\x5f\x1b\x9b\xeb\xa5\xce\xe2\xf3\x83\x15\x88\xca\x8f\xdb\x36\xb8\x47\xe1\x8b\xb0\xf3\x71\xc6\x82\xa2\x1d\x76\x64\x79\xe1\xb4\x51\xa9\xab\x19\x10\x25\xce\x78\xd4\xac\xcf\xc9\xb9\x82\x99\xb3\xdb\xd9\x59\x9c\x94\x5f\xc9\xac\x77\xf2\x67\x27\xbb\x6a\x66\x26\xb3\x24\x7c\xd4\x9e\xf3\x29\x79\x60\x6a\x3c\xba\xa8\x9b\xb6\x0a\x3c\x67\x26\x89\x3b\x49\x80\xcc\x2e\x4a\x45\x7c\xf9\x59\x0a\x30\x3e\xb3\x25\xee\xa1\xb0\x17\xbe\x15\x77\x92\xd6\x16\x57\xa5\x3f\xa5\x5d\x38\x94\x1d\x21\xd4\xd2\xfe\x38\x23\x75\xbe\x6a\x4b\x75\x55\x85\xb2\x0a\x5d\x9f\x41\x84\x4b\xa7\x4d\x38\x3d\x9b\x33\xf2\xe6\x9c\x26\xc2\xb0\x16\xf4\xf3\x1b\x4a\xca\x52\xc0\x8b\x1c\x64\xd6\x78\x5b\x1c\x04\xb0\x4e\x59\x20\xed\x01\x02\xa8\xb1\xc8\xfd\x72\xe9\x10\xbb\x16\x10\xdf\xbc\x76\x88\xdd\x12\x80\xbc\x9e\xc4\xda\x24\xe7\x22\x0b\x0c\x5b\x94\x3a\x00\x2c\x70\xa5\x8d\xe1\x28\x73\xa4\x58\xdf\x62\xa0\x0f\x0e\x0b\xc9\xa2\x22\xdc\x61\x5a\xf4\xc7\x41\x51\x8c\xf4\xe0\x22\x6c\x5b\x70\x91\x29\x43\xef\x5b\xc5\xe5\xe3\x75\xbb\xe9\x12\x8c\x35\x2f\x29\x40\xf4\x3b\xb2\x0b\x2e\x1f\x30\x70\xf5\x81\xa2\x1d\xd9\x82\x54\x8e\x7c\x8d\x33\x96\xb6\x32\x79\x5b\xe5\xe4\x41\x39\x7e\xc5\xb8\x4b\x8c\x3c\xe8\x1c\xf3\x1a\x65\xef\x65\x80\x9c\x5c\x4e\x65\xf0\xb2\x0a\x95\xc3\x3e\x6c\x31\x96\x9b\x7c\x70\x55\x46\xcf\x60\x2e\x03\xe7\xd1\xde\x62\x15\xf6\xe9\x55\x33\x36\xb4\x76\x32\xe1\x3d\xf1\xf1\x84\x07\x25\x9e\x07\xa7\x57\x2b\x2e\x6c\x28\x2e\xaa\xeb\x1c\x01\xd9\x73\x00\xd7\x0f\x8c\x14\x0d\x92\xf5\xc8\xd9\x45\x66\x4b\x1d\x8b\x6e\xf8\x48\x20\xca\x13\x52\x4a\xb2\xd6\x69\x40\x5d\x00\xe8\x54\xa2\x05\xe1\xad\x55\x59\x22\xa9\x90\x80\xff\xce\x56\x90\xd5\x75\x9b\x08\x9c\x66\xcc\xfc\x6e\x1e\x71\xe2\x7e\x19\x50\x1b\x32\x5c\xaf\xb3\x54\xea\xa8\x33\x3c\xb6\xf7\x97\x89\xe3\x33\x2e\x0f\x68\x7f\xc9\xd4\xf6\x2c\x34\x29\xce\x3a\x76\x33\x6d\xfd\x71\x49\x24\x0a\x99\x2f\x2b\x8f\xb1\x92\x02\x1f\x2a\x74\x3b\xa1\x79\x11\xcb\x26\x7f\xa3\x47\x7b\xa4\x0f\xab\x25\x33\x76\x76\x98\xcf\x0e\x3c\x8f\x54\x49\x43\x82\xf9\x04\x4c\xb4\x59\xf2\x82\x2a\xa9\xf2\xb5\xfc\xd7\x16\x1d\xc2\xd6\xe9\x10\xd0\xa4\x0d\xc1\x25\x33\xc9\x42\x53\x4e\x9a\x0a\x45\x52\x25\x6a\x16\x3c\x32\x71\xc0\xc3\x9d\x05\xbb\x08\x44\xa1\xb5\x0f\x85\x86\x47\xb6\xbc\x4e\x71\xeb\xb3\x81\x8b\x5d\x83\xcc\x15\x87\x9c\x7a\xeb\x28\x0f\x8b\x65\x81\xab\x9b\xbb\xd9\xd5\xcd\x78\x72\x03\x7f\x81\xc9\x2f\x93\xf3\x7b\x7a\x7c\x76\xac\x70\x73\x12\x09\xb7\x9d\x9f\xc8\x94\x84\x11\x89\x0d\xf6\x45\x59\x06\x63\x4a\xd0\xa8\xfc\x88\xbe\x75\x90\x42\x70\x00\x83\xe4\x25\x94\xd3\xb1\xa2\x56\x2a\x87\x92\xd6\x1c\xe8\x62\x51\xc5\xcc\xd5\xe1\xb2\xa0\x5d\x22\x13\x75\x7d\x2c\xe4\x5a\x0c\xa7\x8d\x18\x50\xc7\x3d\x8a\x7b\xdb\x32\x0a\x64\x5d\x72\xa5\x33\x72\xb2\xb3\xe4\x64\x93\x1e\xad\x13\xc5\x0c\xdb\xc5\x8a\xc6\xcf\xde\xfb\x98\x5e\x70\x35\x79\x51\xe9\x22\xdf\xf3\xaa\xc1\x21\xf6\x23\x54\xe7\x8d\x96\xa0\x5a\xae\x7d\xc9\xd5\x6f\x55\xac\xac\xd3\x61\xbd\xe1\xe3\x8b\x16\x93\xbe\xdf\xd4\xfc\x78\xff\x1f\x04\x03\x1f\xf3\x7b\x29\x68\x78\xbd\xd1\x85\x72\xc4\x0b\x27\x9d\xb4\xc1\xb7\xec\xcb\xd6\xea\x01\x61\x65\xd9\x78\xdb\x70\xb1\x74\xda\xf2\xf7\x4d\x4d\xf0\x87\xc1\x37\x0d\xfc\xc9\x0a\xeb\xd1\x87\x7b\x23\x6c\x61\x3e\x32\x19\xfa\x27\x94\xf2\xb1\xd7\x43\x53\x6d\x8e\x98\x5a\xac\xed\x4c\x6a\xa5\x90\x4d\xca\xda\xc6\x53\x60\x66\x55\xc9\x01\x07\x33\xcb\x4a\x94\x7a\x21\x61\x66\xeb\x38\xa7\x8e\x8e\x5e\x46\x52\x36\x1e\xb1\x16\x3d\x2c\xb4\x41\xe5\x5a\x80\x67\x59\x9f\xf6\x62\x0c\x8a\xc9\xde\xe3\xfa\x9d\x27\x3b\xf9\x04\x3b\xb5\xe9\xfb\xc8\x44\x97\x87\xb0\xc6\x9d\xf8\x86\xa6\x60\xbf\xe8\x98\x73\x13\x4d\x6b\x6e\xd9\xfb\xce\x3d\x9a\x7c\xde\x97\xff\x67\x6d\x1b\x9c\xf3\x6a\xcf\xc5\x11\xcf\x1c\x66\xba\xd4\x68\xc2\x5c\xe6\x21\x8f\x4d\xb1\x71\x1a\x60\xc3\x59\xa5\xf8\xf4\x46\x56\x4e\x11\x50\x91\x61\x35\x67\x0b\xac\x15\x61\x5e\x35\xa7\x28\x9d\x1a\xd4\xf9\xcd\x64\xc4\xca\xf9\xc8\x85\xbf\x9b\x94\x9f\x30\x0e\x59\x2b\xb3\xe2\xac\x5c\x0e\xd3\xca\xa4\x61\x42\xff\x9c\xa9\xc5\x53\xfe\x58\x28\xa8\x2b\x7c\x0c\x9b\xd3\xfa\xbf\x23\xa3\x14\x76\x05\x2b\xfc\x5e\xf9\x20\xb5\x26\x29\xe7\xc5\x39\x6e\x46\x17\x91\xa7\xda\x01\x0f\xe9\xe1\xec\xea\x7a\x72\xc3\x3c\xd6\x35\x0d\x5e\x1e\x29\x87\x48\xfd\x25\xc7\x85\xe6\xce\x01\x47\xfb\x37\xe7\xbf\x6f\x46\x17\x42\xae\x54\xbb\x4e\x1d\x88\x69\x5c\x56\x9b\x05\x05\xa3\xa5\x1c\xe4\x88\x8b\x63\x55\x47\xdf\xd1\x9c\x1f\x96\xd6\x6b\x42\x44\x67\x92\x7c\x14\xc8\x45\xc0\x53\x83\x2b\x06\x4a\x67\x11\x66\x62\x41\x49\x57\x07\xea\xec\x4f\x62\xec\x16\x2a\xdf\x18\xcb\x9c\x59\x9b\x27\x61\xfa\xa0\x96\x01\x1d\xa8\xb2\x2c\x76\x62\xe0\xda\xc7\x54\x2b\x6a\x44\x76\x7e\xdc\x2d\x0a\x4a\xb2\x13\x8f\xf0\xa0\x71\x9b\x4c\x9f\xbe\x2f\x70\x19\xea\xdc\x4c\x14\x25\xa4\x8f\x1e\x41\xd1\x7c\x9a\x36\xda\xca\xd6\x19\x7d\x73\x46\xe3\x8f\xf8\x66\x38\x9d\xef\xc7\xa2\xc1\x7e\xd0\x3a\x63\x83\xae\xbc\xec\xea\x42\xf9\x10\xed\x22\x65\xba\x1d\xdb\x69\xbc\x4f\xd5\x3d\x45\x4b\xfe\xa5\x63\x09\x62\x5b\xdd\x1c\x91\x51\x7d\x6d\xd2\x93\xd9\xdd\xe8\xd5\xdb\x09\x2f\x04\xb9\xae\xa7\x72\x33\x1a\xd0\x3e\xbc\x9a\x8d\xc6\x63\x1e\x94\x29\x93\x61\xf1\xec\x61\xe7\xa3\xcb\xf3\xc9\xdb\x5e\xc3\xd6\x73\x07\x5e\xdf\xdf\xbe\x99\xc8\x94\x51\xc9\x4f\x8c\x1c\xd4\xe9\xb7\x0a\x75\x10\x4e\x7d\x12\x0c\x3d\xe8\x77\xaa\x3f\x3a\xe4\xe3\x06\x4e\x92\xea\xd2\x65\xa7\x30\x4d\xab\x23\x40\xac\x4e\x32\xb8\xd7\x26\x53\x06\xf4\xca\x58\x27\x0b\x57\x17\x50\xe2\x71\x90\xce\x1f\xc5\x95\xd9\x92\xe6\x49\x9c\xce\x82\x7b\x9c\x71\x66\x8e\x72\x48\xd4\x11\xf2\x66\x72\x71\xf5\xf7\x28\xa5\x24\x77\x66\x95\xaa\x6a\x61\x27\x9f\xbf\x9d\xdc\x4d\x46\xf7\x77\x6f\xf8\xa3\x42\x9b\xf7\x07\xdf\xbc\x9d\x5e\xfe\x5c\x7f\x51\x6b\xd9\xe0\xb6\x76\x40\x3d\x80\xcb\xc9\xbb\xd1\xf9\xf9\xd5\xfd\xe5\x5d\x67\xed\x9d\xdd\xc2\x69\xe9\xf4\x46\xb9\xdd\x19\x7d\x77\x7d\x33\xbd\x18\xdd\xfc\x3a\x9b\x5e\x8e\x27\xcd\xaa\xb3\x04\xcf\xf8\x5e\x04\xe2\x21\x55\x99\x0b\x23\x9f\x19\x72\x7f\x3d\x1e\xdd\x75\x0d\x92\xb7\xff\xe7\xc7\x10\x77\xb3\xcb\xc9\xbb\xd9\xf5\xe8\xd7\xc9\x4d\x97\xcf\xe7\x92\x10\x86\x67\x57\x6f\xc7\xc7\xa8\xb4\x76\x4f\xfc\xf0\x70\xf7\xb0\x78\x72\x5e\x95\x66\xba\x9d\x9c\x5f\x5d\x8e\x3f\xa7\xc5\x4f\x8f\x69\x69\x72\x4f\x2d\x9f\x1e\xf7\x6c\xd5\x3c\x8b\xcc\x51\xf5\xd4\x2b\x3b\x7a\x35\x8d\x95\xc9\xda\xcc\x6e\x27\x77\xa3\x57\xd3\xee\x67\x35\x24\x3d\xfc\xf6\xfc\x6a\x1c\xad\xc5\x1c\x35\xed\xfb\xcb\xa7\x8d\xbb\xac\xab\xcd\xfc\x25\x33\x4c\x5f\xce\xc4\xd1\x75\x79\x78\xf2\xe3\x68\x7e\x12\xe6\x47\xad\xb8\x7b\xb4\x62\x95\xf0\x0e\xe7\x39\x2f\x3c\x6c\x70\x63\xdd\x6e\x50\x47\x78\x29\x40\xa5\x10\xcf\x19\xbb\xad\x1c\x25\x0e\x0e\x32\x45\x4e\xdf\x2e\x6b\x44\xfe\x75\xbb\xc2\xf3\x75\xb7\xf4\x74\xd4\x47\xee\xa3\x80\x31\xf9\x90\x2e\x0c\x20\xfc\xd4\x44\xf5\xfa\xc1\x74\xbc\x57\x83\x7d\x1e\x56\x08\x16\xc8\xf8\x22\xaa\x7f\x9a\xa7\x0e\x94\x68\xcd\x10\x8b\x24\xed\xb1\x5c\xc0\xaf\x16\x85\xf6\x94\xd9\xaa\x10\x09\xa4\x27\xa3\x30\x8c\x27\xbd\x5d\x22\x2a\x65\x39\xd2\xd0\x77\x2d\x05\x34\x17\xeb\x1f\x5c\x71\x01\x15\x02\x12\x18\x23\x84\xb0\x77\xde\x71\xc0\x71\x8e\x85\xda\xdd\x9b\xa0\x8b\xff\xc9\x7c\xf8\xa0\xb3\x70\x08\x1a\xb8\x06\x20\x26\x11\x4b\xfc\x4b\xa5\x8b\xd6\x79\x5d\x5d\x7a\x29\xb5\xac\xe1\x31\x71\x5b\x04\xa7\xe3\x84\x5e\xda\x3d\x54\xf3\x58\x81\x74\x8f\x47\x97\xf5\xd8\x32\xd5\x85\x11\x29\x26\xa7\x1a\x66\xf3\x41\xa7\xd9\xa0\x06\x17\x5d\x03\x13\xb3\x7e\x72\x8a\xbd\xcc\xbe\xac\x3c\x77\x84\x68\x4a\x45\x1d\x66\x81\x12\xdb\x83\x52\x41\xc2\x55\x5f\x3f\x7c\xfb\x35\x3f\xf9\x9a\xc6\xcd\x3a\x11\x99\x4f\xde\x14\x57\xc7\xfe\x89\xce\xc2\x9c\x17\x6f\xe6\x31\x6b\x77\x5f\x10\x60\x68\x6f\xfd\x67\xf1\x59\x3a\xbb\x72\x6a\xb3\x51\x41\x67\x0c\x0c\x16\xbb\x54\xbd\x69\x55\x2b\x6b\xf0\xf4\x79\xc2\xb2\xa5\x9f\x4b\xb9\x4e\x56\xd9\xa7\x30\xb2\x2a\x54\x3a\x55\x0a\x7d\x58\xda\xa2\xb0\x5b\xd1\xa7\x82\x8b\xab\xf1\xf4\xf5\xaf\x51\x46\xe6\x2a\x3d\x69\x40\xd6\xbf\x93\xb9\x29\x23\xa6\x52\xf1\x09\x62\x7d\xfc\xd9\x99\x53\x70\x55\x2a\xa4\x51\x06\x03\x0b\x5c\x5a\x87\x1d\xf6\x9e\xd0\x1d\x2f\x04\x0b\x9d\x24\x24\xb7\xde\x66\x9a\x98\x4b\x19\x6d\x6c\x62\x99\xa3\xf5\xda\x0e\x65\x1c\x1b\xc2\x1c\x5a\x65\x8a\xa8\x0a\x71\xe7\xe7\x4f\x56\xf6\x25\xac\xd7\xed\xc4\x52\xc0\x67\xfb\x6e\xb9\x57\x8e\xf5\x6d\xff\x0a\xa9\x44\x1e\x07\xfc\x8c\x3b\x7a\xf8\x25\x3f\xbd\x56\x61\xdd\x64\x53\x69\x07\xed\xd1\xa8\x23\x03\x17\xee\xa3\x15\xca\x66\x9c\x5e\xde\xf6\xda\x2f\x99\xe1\xf4\xf2\x66\x72\x11\x65\xea\xb5\x52\xd1\x18\x89\x28\x60\x71\x9a\x25\xb2\x39\xbb\xed\x4b\x6a\x5b\x07\x5e\x66\x70\xd0\xeb\x91\xfa\xe7\xb5\x84\xa9\xf7\x92\x90\xed\x02\x25\x03\xe3\x33\xc8\x78\xa8\x2d\x75\x93\x94\xa2\xf6\xe2\xe6\x75\x76\x3b\x80\x77\x8a\xcd\x96\x17\x5c\xf3\x99\x05\xe5\x49\xb5\x7d\x25\x7d\x63\xfe\x63\xd3\xdf\x32\x7e\xd5\x44\xc6\xd8\x87\xd1\xe6\x85\xbf\xf1\xeb\xd4\xdc\xe8\x6a\x23\xb6\x82\xab\xb5\xe9\x14\x38\xe6\xb6\xc8\xc7\x2a\xa8\x79\x9f\xff\xfc\xeb\xed\xd5\x25\xfd\x69\x70\x9b\x9e\x1a\xdc\xf2\xd3\xd4\xaf\xe1\x07\xfb\x73\xbe\x48\x2d\x07\xec\xd4\xf7\xe4\x96\x66\xb2\xd6\x7b\xd2\xa6\xd2\x92\x6a\x8e\x3c\x25\xc1\x52\x2a\xe7\x3d\x2a\xdd\x0e\x6a\x53\x16\x18\x67\x93\xa1\x5e\xfa\x6c\x17\x4e\xe3\x83\x0e\x3b\x29\x5d\x15\x8a\xf0\x0d\x57\xd7\xfd\xda\x6e\x6b\x79\x12\xbb\xa9\x37\xbf\x16\x21\x92\x94\xd2\x5f\x6c\xb6\xc8\xb0\x0c\x31\x45\xf5\x80\x1f\xa4\x13\x2c\xd8\x46\x31\xb1\x70\x12\x15\x22\xe1\x8c\x88\xc7\x04\xe6\x0d\x3e\xaa\x1c\x33\xbd\x51\x05\x2c\xb4\x51\x6e\x57\xd7\xbd\x62\xcc\xa1\xa9\xcf\x86\x24\xee\x7c\x4e\x6c\x01\xc0\xbf\xda\xfb\xe3\x64\x7a\x79\x7b\xd2\x87\xc8\xe4\x10\xfe\x05\x27\x3a\x3f\x19\x7e\xdb\x87\x13\xa3\x36\x78\x32\x84\x93\xdf\xed\xda\x9c\xc0\xc7\x3e\x44\xe9\x86\xf0\x7f\x8c\x2e\xfe\x2f\x7c\x84\x8f\x47\x08\xde\x5f\x8f\x3f\x4f\xce\xec\x4e\xda\xf4\x9e\x9e\xf4\xe8\x14\x37\x93\x8b\xd6\x14\xcc\xcc\xe7\x89\x99\x5d\x22\x47\x8a\x90\xce\xd5\xd8\xcd\xb1\x6f\xc0\xda\xc3\x9c\xf5\x32\xef\x77\x97\xb5\x3e\xa8\x91\x16\x80\x3e\x78\x6d\x32\x04\x1d\x5e\xf8\xe8\xf8\x68\xdf\xf6\x80\xe2\x65\xa6\x0c\x65\xa0\x4d\x31\xe3\x41\xdb\xca\x4b\x41\xab\xbf\x67\x19\x89\xac\xc7\xd0\xf8\x68\x22\x27\x96\xdb\xd9\xa1\x83\x67\xf0\x7e\x7f\x3d\xae\x79\xef\x4e\x12\xed\xbf\x9e\xc0\xd9\x6d\xbd\x81\xb8\x8a\xc2\x1d\xd1\x08\x8c\xb9\xb9\xfa\x2d\xcd\xce\x47\x74\xd0\x61\x56\x28\x44\xd7\x02\x6b\x95\xc7\x10\x12\x71\xa9\x90\x7b\x16\xef\x37\x93\x8b\x27\x78\x7f\x4a\xef\xd1\x4b\x25\xdd\x1b\xcb\x92\x49\xe5\x10\x1f\xb5\x0f\xfe\xa9\x65\xfc\x03\x22\x08\xdc\x44\x16\x22\x79\xbf\x36\x8a\x7f\x75\x58\xca\xbb\x4e\x6b\x5e\x2a\xae\x78\xa5\x6a\x50\x53\xde\xe6\x96\xb5\x94\x8d\x28\x49\x2c\x94\x89\x4b\xdd\x40\x4d\x5b\xe4\xd7\x1d\x70\x2e\x05\x38\x4a\x9f\xfe\x10\xe5\x3a\x7e\xa6\xce\x23\xdc\x1e\xa1\x7b\x2d\xe9\x36\xbc\xc7\x5d\x7d\xa3\xc0\x6e\x13\x31\x89\x42\x32\xfe\x3d\xee\x86\x1c\x11\x52\x0c\xa5\x27\xdd\x10\x1a\xcb\xd2\xd6\x04\x0e\x76\xa7\x6b\x7c\xe4\xc3\xf4\xb3\x36\xe9\xa8\x67\x45\x1b\x9b\xc2\xce\xfd\xf5\xb8\x55\x15\xac\x75\xd0\xee\xfc\xa0\xc9\x12\xad\x67\xcd\x11\xab\x8f\x86\x42\xf4\x53\x73\x44\x37\x7b\x74\x8e\xd8\x03\x15\x7b\x83\x5a\x4e\x36\x32\x56\x73\x29\x4e\x28\x7e\x28\x6d\x47\x5f\x90\x07\xfb\xb2\x6e\x2c\x92\x83\xad\x27\x09\x46\x2e\x6a\x96\x9e\x4d\xb0\x41\xfc\xaf\xf6\xc0\x0a\xc9\x0c\x5f\x36\x76\x25\xd9\x33\x3d\x92\x8d\x29\xe0\x84\x7e\xa7\xfe\x93\xaf\x6b\x5b\x21\xaa\x75\xe8\xff\x19\x77\x4c\x90\x3b\x0e\xd2\x22\xd3\x38\xf2\xb4\x75\x3f\x90\xdc\x30\x6b\x90\xd6\x67\xbf\xe3\x4a\xde\x29\x3f\xd6\x66\x35\x84\xfb\xe9\xe5\xdd\xf7\x7f\x9e\x4d\x2e\xcf\xaf\xc6\xd3\xcb\x9f\xe0\x2f\x70\x39\xba\x98\x9c\x75\x28\xe5\xb8\x54\x55\x11\xf8\x9c\xaa\xa1\x2a\x56\xfc\x1e\x77\x7f\x88\xda\xa7\xe9\x25\x05\x34\x80\xf1\x3f\x5f\x07\xc9\x14\xf6\xa9\x10\xe3\x44\x87\xab\x92\xe7\xd3\x8b\xd1\xdb\x1e\xc0\x9b\xc9\x2f\xa3\xf8\x8b\xa8\x92\x47\xb4\x95\xb8\xcc\x6f\x1e\x09\x34\xdc\xfe\x7a\xf1\xea\xea\xad\x98\x10\x37\x40\xf9\x58\x9d\x17\x5b\x92\xd7\xb3\xf3\xab\xf1\x84\xbe\xc1\xc7\x83\x6f\x6a\x24\x7d\xd0\xcf\xcd\x1c\xa5\x83\xac\xc9\x98\x7f\xdc\x5e\xbd\xbe\x9b\xbd\x1e\x4d\xdf\xf2\xaf\x37\xa3\x9b\x71\xf3\x6b\x3c\x79\x3b\xfa\x35\x7e\x37\xf9\xe5\x7a\x7a\x13\xff\xbe\xbf\xfc\xf9\xf2\xea\x5d\x3a\xea\x99\x1c\xdc\xbc\x6b\x1f\xe9\xb4\x8e\xf8\x12\x9e\x4e\xc7\x87\x02\xa6\xe7\xaa\x0a\xeb\xba\xd3\x7a\x9e\x8e\x77\x77\x18\x20\xe2\xf6\x01\x90\xbf\x21\x58\x5e\xf1\x45\xc7\x9d\xad\xc0\x20\xe6\xdc\xf5\xb7\xd7\x0d\x1e\x5b\x85\x05\x36\xa7\x36\x61\xe2\xa7\xd5\x6e\xaa\x7d\x8c\x94\x75\x1f\xc5\x00\x5e\xe1\x56\x70\x5e\xaa\x89\xcb\xe9\x18\x71\xb2\xc0\x78\xeb\x6b\x93\xe2\x96\xf2\xed\x9e\xd6\x78\x0a\x11\xa4\x41\x36\xd5\x88\x3a\x07\xdf\xfd\xfd\xf0\xd0\x39\xa7\x1d\xc0\x2d\x22\xe4\x36\xab\x36\xf5\x45\x80\x78\x3b\xb2\xdb\x54\xa1\x4d\xec\xa3\x48\x79\x8a\x7f\xa2\x43\x19\xe0\xe4\x8d\xf2\xeb\xbd\xd3\xf7\xba\x9f\x74\x54\x78\x0b\xef\x8d\xdd\x9a\x28\x4a\x98\xe5\x7a\x85\x3e\xcc\xa5\x22\x93\x56\x88\xeb\x3e\xfc\x62\x3f\xc8\x48\x9f\x7d\xb1\x83\xca\xe8\x0f\x15\x36\x0d\xf7\x46\x4e\xaa\x28\x9b\x6a\x1d\xfc\xd4\x6d\x20\x85\x35\x44\x2e\x5d\xc9\xe5\x08\xca\x00\x41\x5a\xfe\x38\x8d\xa1\xb4\x4a\x4e\x15\xb4\x87\x55\xa5\x9c\x32\x01\x25\xaf\xd9\x58\x63\x83\x35\x31\x07\xd7\x26\x73\x72\x25\x84\x71\x45\xeb\xd0\xb2\x39\xd7\x2e\x1d\x05\x9e\xb0\x4b\x39\x9b\xc3\x42\xc7\x9b\xc1\x16\xde\x23\x96\xdc\xf3\xf8\x9e\x34\xb5\xb4\xee\xbd\x4f\x77\xbf\xea\x2e\xb4\x3e\xa8\xf6\xd1\x86\x5c\x5b\xaa\xaf\xc9\x4d\x2f\x7f\x1a\x4a\xb6\xc5\x37\x3c\x5f\x0a\x8d\x98\xde\xf7\x61\xd5\xbd\x8e\xd0\x52\x44\x73\x88\x2a\x43\x12\x4a\x4a\xe2\xd7\x2d\x0b\x0b\x32\x37\x6f\x33\xcd\xe5\x17\x16\x54\xba\x7b\xd2\x11\x7e\x0d\x43\xb6\xeb\x9d\xa0\x34\xbd\x29\xad\x0b\xf1\x38\xdc\xa8\x07\xbd\x8a\xe7\xba\xef\x93\x3e\x8a\x5d\x03\xac\x84\xc7\xdb\xc8\x62\xe7\xb6\xc2\x97\x5c\x5b\x6e\x5e\x51\x74\x64\x5f\xc8\x53\x36\xa9\xa7\x6a\xba\x06\xd7\xda\xac\xfc\x00\x2e\x6d\x90\x6b\xcc\x5b\x2e\xd3\x34\xed\xaa\x84\xd6\x95\x4f\xf7\xea\xfa\x50\x99\x02\xbd\xa7\xcf\xb8\x8c\xb1\xb4\x6e\x13\x3f\x51\x26\x75\xa5\xc0\x35\xba\xb5\x2a\x7d\x22\x96\xdb\xb4\x4f\xb9\x12\x36\x3c\x83\x91\xc9\xd9\xdd\x88\x0d\x88\x5f\x51\x75\xeb\x14\x99\x92\x62\x9f\xcd\xdb\x8a\x32\xc1\x41\x8c\x29\x87\x62\x03\xa8\x85\x3e\x7c\xfc\xf1\xf0\x26\x0d\xfb\x98\xa6\x32\x29\x75\xc9\x2f\x52\x45\xe2\xda\xde\x4a\x4a\xce\xdb\x42\x2e\x97\x9b\x6a\xd3\x58\xa6\xb8\x12\xb9\x13\xc3\xa7\x6e\xdf\x7e\x0f\x0b\x1d\xea\x8e\x56\x1e\x72\x59\x6d\xe0\x34\x5d\x39\xb4\x4b\xf8\xee\x4f\x7c\x01\x8c\xdc\xa8\x58\x41\x1a\x44\xce\x2b\xf9\x98\xca\xb1\x61\x35\x04\xa2\x92\xed\x03\xba\x65\x61\xb7\xe6\xac\x7d\xc1\x79\xf9\x2a\x7e\x57\xdf\x1b\xa1\xd0\x43\x58\xbf\xd2\x26\x7c\xfb\x3d\x91\x75\xa8\x0a\x4e\xc0\xe3\x9a\x6f\xb1\x75\x1f\x4b\x87\x1f\x9b\x4b\x02\x24\xb6\x08\x5b\x3a\x5c\xea\x47\x38\x95\x13\xeb\x1f\x5e\x7e\xfb\x7d\x47\x32\x98\x8e\xcf\xd8\x2d\xc6\x4e\x08\x0b\x3a\x47\x13\xd2\xdd\x11\xbe\x2e\x21\x27\x20\xef\x3b\xf1\xa4\xd6\xe4\xa2\x6e\x3d\x48\x32\x5c\xf3\x8c\x9d\xeb\x2f\x1b\xf5\x78\x79\xfc\x82\x12\xbf\x3b\xbf\xbe\x97\xcb\x4d\xb7\x47\x85\xff\xa1\x25\x7b\x2a\x81\xdf\x62\xd6\xf9\xd6\x40\xbc\x7a\xd5\xeb\xb6\x55\xee\xdf\x69\xfb\xe2\x37\xb6\xad\xa3\x4f\x29\x8c\x07\x34\x3e\xbe\x9a\xa4\x1f\x5f\xfc\xc6\x68\x69\x8b\xb0\xb5\xe6\x45\x60\xc3\xb7\xb9\xda\xd5\xd6\x38\x6a\x0c\xf1\xe0\xda\xc6\xfe\x65\x87\xcf\xde\x3e\x90\xbe\xad\x56\x8f\x7c\xa7\xbf\xff\x48\x3f\x78\xe2\x62\x8f\x4e\x64\x27\x58\xd7\x9e\xbc\x39\x4f\xea\x10\xa8\x6f\xe7\xd1\xc6\x4e\xb7\x6d\x1b\x6f\x51\xf0\x3d\x4f\xbb\x4c\xcd\x3c\x9e\x6f\x51\x36\xce\x93\xe6\xf7\x3f\xf6\xbe\xac\x5d\x44\xba\x9d\xb5\xc0\x40\x39\x88\x2f\x31\x93\x0a\x9b\x8a\xc5\xb7\xb9\x64\xa5\xe4\x13\x0a\x82\x18\x68\xcb\x02\x5b\xb7\x22\xf8\x86\x17\xee\x18\x60\xfc\x18\xb5\xdc\x72\x82\xc7\x74\x2d\xf7\xbc\x9e\x70\x18\x9d\x5c\x22\x02\x30\xf1\x6b\xb5\x62\x01\xf8\x2a\x62\x4d\xee\x63\xef\xbf\x03\x00\x00\xff\xff\x70\x63\xf7\x71\x16\x43\x00\x00")

func transactionsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_transactionsGraphql,
		"transactions.graphql",
	)
}

func transactionsGraphql() (*asset, error) {
	bytes, err := transactionsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions.graphql", size: 17174, mode: os.FileMode(0644), modTime: time.Unix(1679496061, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1f, 0x7, 0xf, 0xbc, 0xcd, 0x22, 0x32, 0xcf, 0x8e, 0x5a, 0x34, 0xef, 0xb7, 0xbe, 0x3a, 0x79, 0xac, 0x95, 0xee, 0x7d, 0x4b, 0x2e, 0x44, 0xa2, 0x30, 0x16, 0x7e, 0x5b, 0xf1, 0xa, 0x4b, 0xdb}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"accounthist.graphql":        accounthistGraphql,
	"block.graphql":              blockGraphql,
	"blockmeta.graphql":          blockmetaGraphql,
	"query.graphql":              queryGraphql,
	"query_alpha.graphql":        query_alphaGraphql,
	"schema.graphql":             schemaGraphql,
	"search_transaction.graphql": search_transactionGraphql,
	"subscription.graphql":       subscriptionGraphql,
	"tokenmeta.graphql":          tokenmetaGraphql,
	"transactions.graphql":       transactionsGraphql,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"accounthist.graphql":        {accounthistGraphql, map[string]*bintree{}},
	"block.graphql":              {blockGraphql, map[string]*bintree{}},
	"blockmeta.graphql":          {blockmetaGraphql, map[string]*bintree{}},
	"query.graphql":              {queryGraphql, map[string]*bintree{}},
	"query_alpha.graphql":        {query_alphaGraphql, map[string]*bintree{}},
	"schema.graphql":             {schemaGraphql, map[string]*bintree{}},
	"search_transaction.graphql": {search_transactionGraphql, map[string]*bintree{}},
	"subscription.graphql":       {subscriptionGraphql, map[string]*bintree{}},
	"tokenmeta.graphql":          {tokenmetaGraphql, map[string]*bintree{}},
	"transactions.graphql":       {transactionsGraphql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}

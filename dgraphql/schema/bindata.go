// Code generated by go-bindata.
// sources:
// block.graphql
// blockmeta.graphql
// query.graphql
// query_alpha.graphql
// schema.graphql
// search_transaction.graphql
// subscription.graphql
// transactions.graphql
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _blockGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x7c\x49\x0b\x18\x7b\x68\x6f\xbe\x35\xc9\x02\x6b\x24\x9b\x0d\xea\x6c\x2f\x8b\x45\x31\x16\x47\xd6\xc0\x12\x47\xe1\x87\x1d\x63\x91\xff\x5e\x90\x14\x25\xd9\x51\x36\x2d\x7a\x13\x45\xce\x9b\x37\x5f\x8f\x74\xc7\x96\xe0\xaa\x96\x62\x07\x3f\x66\x00\x00\xf3\xf9\x7c\x75\x03\x52\x82\xab\xd8\xc2\x26\xec\x7c\x80\x95\x03\xb6\x80\xe0\x35\x3f\x79\x82\x56\x58\x3b\x32\xe0\x64\x7c\x6a\x3e\x9f\x47\x04\x56\x4b\x58\x3b\xc3\x7a\x7b\x31\xcb\x90\x6b\x7a\xf2\xa4\x1d\x63\x0d\xda\x37\x1b\x32\xa7\x1e\x40\x34\xb8\x8a\xa0\xa8\x90\xf5\x07\xf8\xaa\x6b\xde\x51\xfc\x53\xa1\xad\x16\xc0\xd1\xbf\x16\x97\x19\x6c\xa8\x40\x6f\x29\xa0\x94\x62\x76\xa4\x12\x8e\xed\x49\x68\xdf\x2c\xe1\x2b\x6b\xf7\xfb\x6f\x03\x8b\xc7\x8a\xe0\x0e\xad\x83\x95\x31\xb4\x27\x63\x79\x53\xe7\xe8\x3b\x5a\x91\x53\xa4\x11\x3c\x6e\xd0\x92\x02\x74\x91\xca\xcd\x83\xac\xa1\x10\x6d\x49\x5b\x6f\xa1\xc6\x23\x99\xde\x9f\x6a\xc5\xde\xad\xae\xee\xa7\xdc\xae\xb4\xe2\x02\x1d\x59\x38\x54\xe4\xaa\xec\x25\x45\xce\x16\x78\xc4\x66\xc8\xe2\xe8\xe7\x12\xae\x44\x6a\x42\x3d\x60\x7e\x22\x54\x64\xe0\x3f\x96\xa6\x8a\x56\xcb\x14\x72\x82\x18\x20\xef\x87\xc2\x18\xd4\x16\x0b\xc7\xa2\xa1\x14\xaf\x15\xb0\x1e\xc1\xd9\x45\x5a\xb0\x8d\x79\x19\x0a\x7a\x49\xcf\x54\x78\x47\xea\xf2\x04\xa2\x10\xaf\x5d\xcf\x21\x9f\x79\x1c\x4e\x5c\x87\x03\xaf\xf3\x76\xc7\xd6\x9d\xd1\xb1\xa1\x00\x0e\x59\xd3\x19\xa7\x1e\x7e\x74\xf8\xd1\x60\x41\xf6\x97\x92\x8d\xed\xd1\x17\x50\xe3\x78\xb5\xa1\x52\x0c\xe5\x86\x5d\x00\x96\x2e\x24\x28\x2d\x7f\x85\x25\x3c\x9e\xe1\x5d\x8b\xd6\x14\x97\x17\xb3\x97\xd9\x2c\xb8\x1d\x65\x33\xe7\x24\x25\x3a\x90\xc7\xc4\x6f\x01\xf4\x5c\xd4\x5e\xb1\xde\xc6\x03\x27\x31\xc5\x48\xd0\x75\x91\x44\xcc\x61\x2e\x3b\xe0\x1f\xe3\x26\x3e\x9f\xd0\x84\x90\xe7\xe7\x67\x83\x18\xac\x37\xe3\x86\x9f\xb4\x9c\x9e\x1e\x6e\xc8\x3a\x6c\xda\x53\xdf\xa7\xcd\x80\x85\xf3\x58\x83\xe3\x86\xc2\xdc\x1c\x2a\x2e\xaa\xb8\x91\x9c\x1e\xd0\x42\x6b\xa4\xf0\x8a\xd4\x50\xb2\x0c\xbc\x84\xe0\x63\x8a\x6c\x6b\x44\xf9\x82\x0c\x1c\x2a\x19\x16\x13\xe5\xcf\x7b\xaf\x23\xff\x24\x07\x68\xf0\x18\x1a\xa8\x64\xd3\x60\x4a\xbd\x94\xb0\x27\xc3\x65\x18\x50\x96\x71\x47\x05\xe9\x01\x43\x05\xf1\x9e\x14\x94\x46\x1a\x90\x38\xbc\xa7\x8c\x06\xc9\xe9\x80\x49\x4d\x0b\x4f\x6b\x68\xcf\xe2\x33\xfa\xea\x26\xa7\x3e\xad\x93\xe6\x9c\x0a\x43\x92\x1f\xd1\xa3\xe8\x12\xc6\x74\x5d\xc7\x33\x17\x89\xb7\x0e\x3e\x93\xd9\xd5\x04\x46\xc4\x81\x16\x95\x04\xf5\x67\x05\xbc\x1c\xa1\xfc\xdd\x04\xbb\xcb\x40\xf4\xe3\x97\xf5\xea\xcb\xd4\x90\x7d\xfe\x53\xc4\x4d\xf3\xf9\xdf\x54\xde\x61\xf1\x2e\x81\xbe\x51\x6c\x51\x91\xf2\x35\x41\x54\x54\x79\x33\xcf\x10\xac\xfa\xc3\x1d\x8d\xba\x93\xa1\xe0\x6e\x3f\x02\x45\xad\xc2\x3e\x1b\x40\x6b\x79\xab\xf3\x25\xd4\x9d\x88\xb1\xdb\x5a\x06\xe5\xcb\xc0\x7f\x25\x12\x43\x9b\xc4\x91\xa3\xc3\x43\x6e\xa9\x25\xe4\xcf\x75\x67\x12\xa4\x26\x4a\xc2\xf9\x46\xa7\x0b\xfb\x29\xc8\x76\xc0\xfb\x96\xed\x6e\xe9\x78\xf1\xfd\xe2\x15\xdc\x2d\x1d\x3b\xa4\x6c\x74\x8f\x0d\x0d\x59\x0d\x3b\x31\xb8\x35\x6f\x35\xeb\xed\x2d\x1d\x87\xcd\x97\x59\x87\xf6\xb6\x56\x66\xf9\xfa\xa3\xcf\x26\xa9\x2d\xd9\x78\x4d\x8d\xba\xd6\x45\xc5\xee\xee\x89\x70\x60\x09\xdf\xce\x41\x3f\xaa\x2d\x7d\xcf\x75\x5e\xe9\x52\xba\x59\x0e\x58\xc8\x0a\x5a\xdc\xb2\x8e\x7f\xba\x99\xc1\x2d\x85\x63\x4b\x78\xe8\xbe\x86\xf0\xa7\xb0\x47\x4a\x6b\xf0\x84\x18\x14\xde\x58\x31\xfd\xbc\xc7\xd5\x44\xe7\x9d\x99\xf5\xa2\x2a\x8a\x5e\xdf\x27\x29\x7d\xf3\xf9\xfc\x3a\xc2\x05\xc9\x79\xf2\x6c\x48\x85\x78\xc2\x65\xc7\xda\x13\x10\x47\xe9\x29\xc5\x1c\xd0\x28\x10\x03\x1b\x2c\x76\xe1\xdb\x26\x69\xc2\x3e\xb1\x5d\xfc\xa4\x80\x6a\x6a\x48\x3b\xdb\xdf\x27\x39\x01\x43\x88\x29\x86\x34\x84\x04\xf1\xa6\xcc\x66\xf9\x67\xc0\x5d\x40\x78\x6c\xb1\x0b\x9c\x2c\xa1\x29\xaa\x2c\x5e\xd2\xb6\x62\xd9\x11\x28\x36\xa9\xd4\x7d\xb7\x3b\x34\xee\xfa\x2c\x47\x93\x6e\xc3\x8d\xfc\x9e\xd7\x9c\x89\xfe\x15\xa1\xd5\x1b\xd8\x3c\xf1\xda\x22\x43\xe9\x95\xa4\xe9\xd9\xc5\x8e\xe8\x5f\x44\x68\xef\xe9\xd9\x85\xcc\x8c\x5e\x59\xff\x06\xaa\xd7\xf3\x33\xb8\x87\xee\xff\x19\xe4\xcb\xec\x9f\x00\x00\x00\xff\xff\x25\x8a\xb9\x05\x6b\x0b\x00\x00")

func blockGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_blockGraphql,
		"block.graphql",
	)
}

func blockGraphql() (*asset, error) {
	bytes, err := blockGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "block.graphql", size: 2923, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _blockmetaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xcd\x4a\xc6\x30\x14\x44\xf7\xf7\x29\xa6\xd9\xbb\xd1\x5d\x77\x55\x4b\x11\x2a\xd5\x5a\x1f\x20\xda\x5b\x0d\x36\x49\x4d\x6e\x10\x91\xbe\xbb\xf4\x07\xb1\xe2\xb7\x1a\x38\x9c\x19\x46\x3e\x27\xc6\xe5\xe8\x9f\xdf\x6e\xae\x5b\x8e\x93\x77\x91\xf1\x45\x00\xa0\x94\xda\x52\x42\x62\x05\x33\x40\xe3\x69\x31\x61\x7a\x7c\xe8\x88\xc1\x27\xd7\x1f\x54\x31\x96\x73\x74\xc6\x72\x46\xc7\x8d\x3d\x5d\xb2\x39\x1e\x8d\x93\x8b\xf3\x13\x86\xe9\x73\x3c\x48\x30\xee\x25\xa3\x99\x88\x5d\xb2\xb8\x6a\x6e\xef\x8a\xb6\xe8\x9a\x76\xbd\xa6\xaa\xc0\x5a\x38\x9c\xc9\xab\x76\xf0\x01\xfc\x9e\xf4\x08\xf1\xcb\x42\xd5\x95\xf4\xd7\xd9\xf8\x8a\x6b\x8e\xf1\xdf\x5e\xbd\xf7\x7e\x84\x0d\xae\xac\xfc\xe5\x95\xf7\x34\xd3\x77\x00\x00\x00\xff\xff\x98\x77\x32\x21\x36\x01\x00\x00")

func blockmetaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_blockmetaGraphql,
		"blockmeta.graphql",
	)
}

func blockmetaGraphql() (*asset, error) {
	bytes, err := blockmetaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "blockmeta.graphql", size: 310, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _queryGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4f\x6f\x1b\xb7\x13\xbd\xfb\x53\xcc\xcf\xbf\x8b\x13\x28\x82\xec\x26\x39\x08\xf0\x41\xb2\x5d\xc4\xa8\x6d\xb5\xb2\xda\x02\x39\xed\x88\x9c\xdd\x25\xc2\x1d\x6e\xf8\x47\xea\xa6\xe8\x77\x2f\x48\xae\xa4\x75\x60\x17\x45\x9b\x22\x2d\xe0\x5c\x76\xb5\x24\x67\xde\xcc\x7b\xf3\x18\xfb\xae\x25\xf8\x21\x90\xed\xe0\xd7\x23\x00\x80\xe3\xe3\xe3\xf4\xbc\x27\xb4\xa2\x06\x5f\x13\xac\xb5\x11\x1f\x44\x8d\x8a\xa1\x34\x76\x8b\x56\xc6\x27\x78\x8b\xec\x50\x78\x65\x18\x5e\xd2\x2f\x24\x42\x7a\xf5\x16\x05\xb9\x97\xb0\x46\x47\x12\x0c\x43\xf1\x31\x86\x2f\xc6\x47\x29\xee\xcf\x35\x71\x8a\x6a\xc9\x07\xcb\x24\xa1\x10\xc1\x3a\x63\x0b\x50\x0e\xa8\x69\x7d\x37\x02\xe5\xa1\x21\x64\x07\x9d\x09\x50\xe3\x26\xee\x46\x51\x93\x4c\x27\x89\x25\x98\x32\xbd\xba\x96\x84\x2a\x15\xc9\x0c\x32\x65\xb0\xc8\x15\xed\xb2\xcd\x96\x77\x53\x40\xbd\xc5\xce\x81\x30\xec\x94\x24\x9b\x4e\x16\x81\xa5\x29\xa0\x54\xa4\x25\x0c\x2a\x73\xa9\x6e\x72\x23\xd8\xd6\x4a\xd4\xe0\x54\xc5\xa8\xc1\xd7\xe8\xd3\xb9\x06\xbd\xa8\x15\x57\x40\x9a\x1a\x62\x9f\xd2\x6c\xd1\xa5\x18\x28\x3c\x2c\xaf\x6e\x17\x3f\x5d\x5d\x42\x69\x4d\x93\x4e\xe4\xce\xad\x49\x60\x70\x14\x81\x27\xa8\x0e\x2c\x19\x5b\x21\xab\x4f\x18\xfb\xd6\x03\xbe\x27\x02\xd4\xce\xe4\xea\xbc\x25\x6c\x62\xb2\x0d\x59\x17\x9b\x1b\x38\xe2\x2f\xee\xc3\xda\x09\xab\xda\x78\xb0\x78\x40\x5b\x86\xbf\x3a\x50\xe3\xbe\xcd\x85\x9d\xa4\xe5\xb4\x55\x96\x11\x48\x4f\x70\xe6\xfe\x06\xb9\x0a\x58\xa5\x94\x8a\xab\xe3\xfd\xe6\xc4\xdd\x14\xee\xd3\xe7\xff\x1d\x1d\x82\xdc\x98\x2d\xd9\x5c\x0a\x70\x68\x60\x6d\x02\x4b\xb4\x91\x3c\x16\x3a\x38\xb5\x21\xdd\x8d\x61\x06\x4c\x15\x7a\xb5\x21\xd8\xa0\x0e\xd4\xf3\x8a\xfd\x49\x4b\x3a\x2f\xfa\x5c\x71\x4d\x28\xc1\x58\xd0\xe8\x3c\x28\x6b\x29\x15\xbe\xd6\xbd\x08\xe1\x44\x52\x4b\x2c\x63\x4b\xa2\xb2\x86\x3b\x16\xac\xbb\xe2\xc5\xf8\x00\x5d\x9b\xed\x3c\x1e\xba\x0b\xcd\x14\xae\xd9\xbf\x7d\x3d\x80\xff\x4e\x55\xf5\x9f\xc3\xff\x89\xac\x89\x90\xbe\x5a\x1d\xb5\xaa\xea\xa7\x0b\x59\xb4\xf8\x31\x10\x48\xf4\x08\xad\x22\x41\x59\xaa\x71\x70\x04\x32\xb4\xe8\x1c\xac\x51\x7c\x88\xc8\x84\x61\xaf\x38\x50\x5c\xb5\xbd\x54\x40\x95\x71\xdc\x62\x7a\x90\xca\x09\xc3\x4c\xc2\x93\x1c\xc3\x92\xbc\x55\xb4\xa1\xb8\xbc\x17\xf3\x7e\x58\xf7\x83\x93\x67\xd9\xb5\x86\x1d\xb9\x3c\x97\xca\x81\x40\xad\xc7\x70\xed\xe3\x50\x3b\x2c\x53\x63\xa2\xea\x92\xac\xb1\x21\xc8\x71\x62\x80\xf9\x62\xf5\x0e\xa4\xb2\x94\xf5\x0a\x27\xbb\x51\x44\x96\x09\x7a\xfc\x31\x6c\x48\x3e\xba\x13\xe5\x50\x93\xaa\x51\x79\x4a\x39\x34\x6b\xb2\x11\x8d\x25\x17\xb4\x77\xd0\x92\x85\x36\x2a\x7c\xf0\xed\x44\x52\x89\xe9\xcd\x1b\x38\x9d\x4c\x1e\xa8\x27\xc6\xea\xdb\x0d\xe7\x71\x75\x90\x28\x9b\x98\x0d\x34\x02\xc3\xba\xeb\x07\x35\xf7\x79\x17\xdc\x70\xe2\x82\xba\xcc\x41\x44\x75\xa0\x59\x69\xe5\xbb\xbd\xe6\xc6\xb0\xf0\x35\xd9\xad\x72\x34\x02\xd4\xda\x6c\xa1\xa4\xde\x66\x76\xe1\x42\xfb\x40\x5b\x49\x46\x03\xb8\x9f\x2b\x68\x0a\x73\x63\x34\x21\xc3\x39\x94\xa8\x1d\xa5\x9d\x2f\xa6\xfd\xd8\x3f\x62\x10\xcb\x9e\xc3\x7e\xc8\xff\xf8\x1e\xd8\xd1\xf2\x9f\xb9\x08\xbe\xbc\xaf\xce\xfb\x16\x7c\x35\x63\xcd\x3e\x64\x4a\x98\xf4\x3d\x4a\x1c\x51\xa5\x98\x93\xaf\x94\x87\xdb\xe7\xd9\x87\x9f\x7d\xf8\xd9\x87\xff\xe5\x3e\xbc\x33\x94\xcf\x8c\xf8\xff\xf0\xea\x2f\xfd\xeb\x0f\xcf\x6f\x16\x17\xdf\xc1\xed\xd5\x6a\xf6\xf7\xa3\xed\xcc\x70\x99\x1c\xfb\x70\x27\xc0\xf5\x25\x94\xb1\x87\x80\x36\x3d\xe2\x4a\xa5\x36\xc4\x50\x78\xd5\x50\x31\x3a\x5c\x02\x59\xbc\xa6\x69\xd1\xa2\x8f\x02\x6e\xad\xd9\x28\x49\x72\xfc\x20\x45\x8a\x7b\x7d\x39\xef\x56\xaa\xa1\x81\xc5\xc6\x9f\xce\x63\xd3\xa6\x9b\x27\xc7\x51\xce\xf0\xa8\xff\x3f\x7c\x83\x1e\xce\x26\x93\xb7\xaf\x26\xa7\xaf\x26\x67\xab\xd3\x37\xd3\xc9\xeb\xe9\xe4\xcd\xfb\x68\x02\x8f\x7c\x1f\x9f\x9e\x7d\xf3\xfe\xc0\x5e\x04\x3b\x85\x98\x63\xe8\xc8\x03\xc5\xef\x71\x4f\xe1\x62\x71\xfb\xfd\x6c\x39\x5b\x2d\x96\x70\x0e\x37\xab\xab\x1d\xb1\xf3\x8c\xfc\xcb\xb2\x38\xbb\xb8\x58\xfc\x78\xb7\xfa\xa7\x79\xbc\xcb\xe3\xba\xad\xc9\xee\x09\x44\x21\x4c\x60\x5f\xa4\x3f\x72\x84\x25\xf4\x4f\x70\x35\xf3\xb3\xbc\xf5\x22\x6e\x52\x86\x4f\x1e\x6b\x61\x1f\xee\x70\xf3\x3d\xd5\xb6\xdf\x8e\x7e\x0f\x00\x00\xff\xff\xd6\x89\x1a\x9c\x9c\x0e\x00\x00")

func queryGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_queryGraphql,
		"query.graphql",
	)
}

func queryGraphql() (*asset, error) {
	bytes, err := queryGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "query.graphql", size: 3740, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _query_alphaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x0a\xc2\x30\x14\x45\xf7\x7c\xc5\x25\x93\x82\x74\xd0\xad\x5b\x45\x50\xc1\x41\x11\x07\xc7\xa6\x3e\xeb\xc3\xf6\xa5\x24\x2f\x43\x10\xff\x5d\x9a\xc1\x3b\x1d\x0e\x9c\xab\x79\x22\x5c\x12\x85\x8c\x8f\x01\x00\x6b\x6d\x73\x3a\x1f\x1a\xec\x49\xd1\x22\xb2\xf4\x03\xc1\x0d\xbe\x7b\xc3\x65\xb0\x46\x1c\x77\xf0\xa1\x90\xa4\xd1\x51\xa8\x70\xf7\x09\x5d\x2b\xe2\x15\x71\xa2\x8e\x9f\x19\xce\xeb\xab\xb2\xd6\x96\xd3\x92\x2f\x0a\xce\xe3\x47\x8d\xab\x06\x96\x7e\xf5\x77\x92\xc6\x1a\x37\x16\xdd\xac\x8b\x5b\xd6\xd8\xce\x95\xf9\x1a\xf3\x0b\x00\x00\xff\xff\x66\x22\x04\xcf\xa5\x00\x00\x00")

func query_alphaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_query_alphaGraphql,
		"query_alpha.graphql",
	)
}

func query_alphaGraphql() (*asset, error) {
	bytes, err := query_alphaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "query_alpha.graphql", size: 165, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\xce\x48\xcd\x4d\x54\xa8\xe6\x52\x50\x50\x50\x28\x2c\x4d\x2d\xaa\xb4\x52\x08\x04\x51\x60\x81\xe2\xd2\xa4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\x2b\x85\x60\x24\x1e\x57\x2d\x17\x20\x00\x00\xff\xff\x52\xd9\x58\xe5\x3b\x00\x00\x00")

func schemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_schemaGraphql,
		"schema.graphql",
	)
}

func schemaGraphql() (*asset, error) {
	bytes, err := schemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.graphql", size: 59, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _search_transactionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcb\x6e\xe4\x36\x10\xbc\xf3\x2b\xda\xe3\x8b\xbd\x70\x74\x48\x6e\x73\x1b\x6f\x9c\xc4\xc0\x62\x8c\xd8\xde\x2c\x82\x20\x80\x5a\x64\x6b\x48\x98\x22\xb5\x7c\x8c\x22\x04\xf9\xf7\xa0\x29\x8d\xe7\x61\x3b\x87\x5c\x92\x05\xf6\x26\x88\xfd\x28\x56\x57\x17\xcf\xc5\x39\xc0\x3d\xc5\xde\xbb\x48\x11\x5a\x1f\xe0\xe7\x4c\x61\x14\xe7\x42\xa4\xb1\x27\x78\x20\x0c\x52\x3f\x06\x74\x11\x65\x32\xde\xc5\x1f\x7c\x18\x30\xa8\x5d\x12\xfc\x29\x16\x8f\xda\x44\x30\x11\x10\xa4\x46\xe3\xbe\x19\x8c\x22\x90\x39\x44\x1f\xae\xc0\x38\x65\x24\x26\xe3\x36\x90\x34\x41\x1f\xfc\x26\x50\x8c\xe0\x5b\x40\x88\xa5\x7c\x05\xbf\xfa\x0c\x12\x1d\xf4\x18\x23\x98\x04\x0d\xca\x27\x48\xbe\x64\x28\xd3\xb6\x14\xc8\xa5\x39\x1a\x3a\x4a\xda\xab\xc8\xe7\xd2\xbb\x64\x5c\x26\x68\x29\x49\xcd\x3d\x3a\x1f\x08\x02\xc5\x6c\x53\xe4\xe6\xf0\x8e\x4c\xd2\x14\x40\x99\x40\xd3\x0d\xde\xc1\x05\x6d\xc9\xf1\x21\xd7\x0f\xb4\xa5\x10\x69\x1f\x70\x59\xc1\x0a\x6a\x97\xad\xad\xe7\x5b\x40\x47\xe8\x62\x89\x26\xa7\x18\x7a\x40\xb7\x21\xd0\x18\xa1\x21\x72\x10\x08\xa5\x26\x55\x2d\xc4\x94\xb0\x84\x87\x14\x8c\xdb\x08\x31\x43\x59\xc2\x6f\x2f\xa8\x3c\x61\xf2\xec\x77\xf1\xd7\x9b\xac\x5f\xa3\x7c\x3a\xa1\xfd\xb8\xd3\xd9\x3f\xb6\x3a\x4d\x9f\x7a\x09\xc1\xf3\x7f\x65\xfc\x80\x4e\xc1\x43\x6e\xa2\x0c\xa6\x2f\xfd\x59\x10\x8b\xc5\x42\xac\x20\x1a\xb7\xb1\x04\x69\x5f\x9c\xbf\x65\x21\xbd\xd4\xb9\x82\x0e\xe7\x61\x20\x97\xe4\xbe\xbb\xd1\x7d\xe6\xea\x95\x10\x9f\x56\xf7\xeb\xdb\xf5\x8f\x4b\x50\x1e\xd6\x77\x8f\x1c\xb6\xa1\xc4\x13\x35\x4e\xda\xac\xa8\x70\x5d\x67\xa7\x7c\x0d\xad\x21\xab\xf8\x4c\x51\xa2\xd0\x19\x47\x60\xda\x12\xd0\x51\x8c\xb8\xa1\xa2\x3d\x99\x32\x5a\x3b\x02\xc2\xfd\xcd\x2f\x37\xf7\x0f\xab\x0f\x3c\x27\x8e\x3a\x80\x5a\x09\xb1\xbe\x7b\xbc\x59\x02\xda\x01\xc7\x08\x52\x13\x0b\x4d\x13\x6c\xd1\x66\xe2\x8c\xba\xdc\xa6\x8a\x09\x53\x8e\x35\xb7\xed\xf0\x89\x20\xe6\x40\xac\x4c\x13\xa1\xa6\x3f\x48\xe6\x44\xaa\x66\x1c\xa3\xcf\x30\xa0\x4b\xc7\x91\x78\x44\x50\x87\xaa\x24\xcf\x8a\x2e\x5b\x52\x4d\x84\xbe\x3e\xef\x57\x96\x6c\xb1\xf8\xa4\xa9\x28\x39\xf1\xba\xed\xd8\x2e\x77\x77\xf0\x71\xfd\xfd\x1d\xf8\x9e\x02\x96\x86\x65\xb9\xfa\x40\x5b\xe3\x73\xb4\x23\x44\x5e\x9f\x5d\x4a\x25\xc4\xad\x7b\x31\x9b\xab\x03\xf4\x63\x59\xc7\x24\xf5\xd4\x8b\xd5\x30\x13\xb6\xa5\x60\xda\x11\x4c\x8a\x13\x63\x55\x05\x58\x36\xd1\xf9\x04\xca\xe7\xc6\x12\xf8\x00\x29\x98\xde\x12\x48\x9f\x99\x98\x03\x1d\x57\xe5\xd2\x3c\xd7\x25\x5c\x7b\x6f\x09\xdd\x59\x21\xe2\xfd\x4b\xe7\x40\x6b\xfd\xc0\x32\x62\x38\x87\xcb\x5e\x54\xc4\x07\x83\x26\xc7\xbf\xdd\xb4\xb8\xcc\x85\x71\x89\x42\xc8\x7d\x22\xc5\x9d\x5e\x2c\xc9\x11\x8f\x04\x8d\xf5\xf2\x09\x02\xf5\x81\x98\x23\x52\xa0\x29\x14\x52\x4d\x98\x8c\xc1\x34\x96\xb8\x92\x89\xb7\x07\x7f\x4e\xd0\x3f\x6a\x02\x8b\x31\xc1\x93\xf3\x83\x3b\xca\x9d\x5b\x14\xa8\x7d\xf0\x92\x62\x9c\xbc\xd0\xc4\x23\x65\x02\x14\x1b\x75\xb9\x6b\x28\x14\x33\x6c\x08\xe8\x73\x46\xfb\x2c\x9b\x1c\x8a\x0d\x4e\x05\x5d\xee\xe0\x22\x3b\x45\x61\x27\xd9\xf2\xbf\x72\xb9\xab\x2f\x8b\xf3\x0d\xda\x48\x0d\x12\x79\x25\xeb\x63\xf8\x35\x94\xee\x99\x2a\x80\xdb\x43\x1b\x2c\x88\x23\x6d\x3a\x6e\x34\xef\x4f\x91\xeb\xd5\x84\x78\x86\x37\x18\x6b\x19\x9f\x0a\xa6\x2d\xd6\x8e\x03\x8e\xd0\x8c\x25\x7e\x8e\xf1\xed\x84\x34\x42\xa4\x1e\xc3\xf4\x04\x68\x42\x35\x5f\x80\x55\xf5\xe1\xf6\xba\x2a\xe4\x1e\x60\xbb\xe6\xd3\x75\xee\x96\xf0\xd1\xb8\xf4\xdd\xb7\x67\x42\x94\x84\x25\x94\x93\x9f\x08\x15\x85\x33\x21\x00\x00\x98\x7a\xbe\x7b\x79\x4e\xa6\xb5\x9c\xe5\x7f\xb2\xf8\x45\x3c\x68\x5c\x79\x22\x9e\xed\x69\xa7\x49\xf1\xbe\xf8\x40\xbd\x3b\x59\x4d\x07\x35\x34\x64\xfd\xc0\xfc\x5b\xd3\xf1\xfe\xea\xbd\xcd\xf1\x5f\xef\xd8\x70\xa6\xe0\x7d\xd9\xd1\xe7\x70\x6c\x78\xb0\xb2\x49\xfb\xbc\xd1\x45\xd4\xcf\x19\x6d\xf0\xdd\x29\xd0\x08\xc8\xf6\xb1\x45\x63\x91\x67\x71\x11\x89\xf6\x8e\xb3\x03\x76\x39\xed\x51\x99\xfb\x12\x0e\x8c\xa3\xb0\xc1\xde\xfe\x6f\xcc\xba\x99\x5f\x89\x53\xb7\xfe\xff\x58\xe6\xdb\x8e\xf9\xca\x03\xf9\x65\xbb\xca\x57\x5b\xf9\x6f\x6c\xe5\xab\xa5\xbc\x61\x29\x7f\x07\x00\x00\xff\xff\xb4\x8d\x8a\xd9\x2c\x0c\x00\x00")

func search_transactionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_search_transactionGraphql,
		"search_transaction.graphql",
	)
}

func search_transactionGraphql() (*asset, error) {
	bytes, err := search_transactionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "search_transaction.graphql", size: 3116, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _subscriptionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x4d\x6f\xdb\x46\x10\xbd\xe7\x57\xbc\xea\xe4\x04\x8a\x90\x7e\xa0\x07\x01\x39\xd8\xa8\x8b\x18\x48\x2c\xd4\x76\x9b\x2b\x47\xcb\xa1\xb8\xf0\x72\x56\xde\x0f\xb1\x4a\xd1\xff\x5e\xcc\x92\x92\x68\xb7\x6e\xd1\x53\x72\xc8\x49\x14\xb9\x33\xf3\xe6\xed\x9b\x37\x69\xbf\x65\xdc\xe6\x75\x34\xc1\x6e\x93\xf5\x82\x3f\x5e\x00\xc0\x6c\x36\x2b\xbf\xb7\x4c\xc1\xb4\x48\x2d\x63\xed\xbc\xb9\x37\x2d\x59\x41\xe3\x43\x4f\xa1\xd6\x5f\xa4\x40\x12\xc9\x94\xd8\x57\xfc\x3b\x9b\x5c\x1e\x53\x20\xc3\xf1\x15\xd6\x14\xb9\x86\x17\x54\x0f\x99\xc3\xbe\x5a\xbc\x28\x79\x3f\x9e\xdf\x5c\x2f\x41\xae\xa7\x7d\x84\xf1\x12\x6d\xcd\xa1\x94\xa9\xb2\xd4\xbe\x42\x63\xd9\xd5\x98\xd4\x8a\x05\x09\xc7\x39\xfa\xd6\x9a\x16\xd1\x6e\x84\x1c\x52\x4b\xa9\xc4\x75\x94\x4c\x6b\x65\x03\x76\xdc\xb1\xa4\x52\xa6\xa7\x58\x72\x90\x49\xb8\xb9\xfc\xb0\xfa\xed\xf2\x27\x34\xc1\x77\x25\x62\xe8\x65\xcd\x86\x72\x64\xf8\x66\xe8\x30\x22\xb0\x0f\x1b\x12\xfb\x89\xb4\x93\xc5\x23\x3e\x06\x14\x77\xa7\x9e\xe3\xcf\x03\xbe\xb3\xf2\xb9\x1c\xad\x1b\xcd\x37\x32\xf7\x8b\x76\x8d\xf7\x24\x9b\x4c\x1b\x46\x4c\xc1\xca\x66\x76\x3c\x5c\x48\x59\xe2\xb6\xbc\xfe\xe6\xc5\x29\xc9\x7b\xdf\x73\x18\x10\x41\x72\x87\xb5\xcf\x52\x53\xd8\xcf\x61\xc5\xb8\x1c\xed\x8e\xdd\x7e\x81\x73\x08\x6f\x28\xd9\x1d\x63\x47\x2e\x33\x3a\x26\x89\xa0\x31\x32\xb0\x1b\x3e\x26\x5f\x5a\x6e\x99\x6a\xf8\x00\x47\x31\xc1\x86\xc0\x3b\x0e\xd1\xae\xdd\x78\xbb\x38\xab\x79\xcb\x52\x2b\x8d\x7a\x65\xd3\x13\x2b\x71\xfb\xea\xe5\xe2\x04\xdd\xf9\xfe\x42\x83\xae\x73\xb7\xc4\x95\xa4\x1f\x7f\x98\xc0\x7f\x67\x37\xed\x17\x89\x1f\xe7\xa8\x24\x3b\x57\x3d\xaa\x27\x1e\xed\x80\xd8\xd9\xce\xa6\x38\xd7\x6a\x81\x1b\x1f\x78\xbc\x72\x4d\x69\x65\x84\xd1\xe4\x94\x43\x91\xcc\x51\x47\x13\x62\x34\xd3\xf3\xcc\xac\xb6\xf4\x90\x19\x35\x25\xc2\xd6\xb2\xe1\x41\xc2\x7b\x9f\x61\x48\xb0\xa5\x18\xb1\x26\x73\xaf\x2d\x1b\x2f\xc9\x4a\x66\xfd\x1a\x46\x20\xb0\x0d\x6c\x82\xf6\x85\xda\x46\xe3\x45\xd8\x24\xae\x17\xb8\xe1\x14\x2c\xef\x58\x3f\x1f\x45\x5e\x99\x1c\xa2\x0f\x93\x81\xd2\xb7\x81\xe3\xd6\x4b\xe4\x38\xf4\x60\x23\x0c\x39\xb7\xc0\x55\x82\x8d\x88\xd4\x14\xc6\x55\xc6\x7a\x3a\x52\xc7\x18\xf2\x68\x82\x8b\xd5\xdd\x3b\xd4\x36\xf0\x30\x00\x38\x3b\x8c\x28\x49\x5d\xa0\xeb\x9f\xa9\x52\x86\xd0\x83\xca\xa7\x22\x57\xb2\x4b\x09\xc9\xdd\x9a\x83\xa2\x09\x1c\xb3\x4b\x51\x27\x85\xa9\xe3\x21\xe3\x54\x76\x1a\x33\xd2\x8a\xb7\x78\x33\x49\xf7\xb1\x65\x35\x9e\xcc\x73\x78\x71\xfb\x31\xc5\xc0\xe6\x21\xad\x97\xc2\x38\xef\x07\xa6\xb5\xf6\x49\x25\xd6\xd9\xb4\x3f\x4a\x75\x81\x95\xaa\xa0\xb7\x91\xe7\x20\xe7\x7c\x8f\x86\x47\x93\x39\xa4\xcb\xdb\x47\xd2\x2c\x2a\x9c\x80\x7d\x2a\xc0\x25\x2e\xbc\x77\x4c\x82\xb7\x68\xc8\x45\x9e\xa0\x9f\xcd\xae\x1a\x88\x97\xd7\x9f\x38\x78\x1d\x93\xda\x1a\x4a\x1c\x8b\x34\x7a\x92\xa4\x95\x3a\x0a\xf7\xc3\x9d\x0c\xbd\xf5\xda\x72\x60\x1a\x50\x39\x1d\x95\xc1\xc5\x54\xe8\x7a\x98\x83\xde\x28\x1d\x6f\x1c\xbd\x4d\x2d\x08\x55\x31\xe8\x0a\xfc\x90\xd5\x45\xfd\x38\x15\x07\x77\xed\xad\x73\x58\xab\xf8\x25\x81\x12\xb4\x02\x2a\xcd\xff\xa1\x24\xbd\x92\xc4\x61\x47\xae\x3a\x96\xbb\xd3\xb9\xb0\x21\xa6\x63\xea\xe4\x35\xc3\x93\x02\x2a\x20\x3a\xa0\x7f\xdc\x23\x05\x86\xf8\x1e\xdb\xe0\x0d\xc7\xf8\xb4\xa1\x13\x55\x5a\x6a\x98\x5e\x5d\x40\xff\x88\xaa\xf4\x7c\x12\xd5\x21\xc5\x84\xec\x89\xa0\x9e\x86\x2f\xf1\xab\x95\xf4\xfd\x77\x27\x79\xbd\x5c\x8e\x7e\x3e\x71\xfe\xd1\xf8\x6f\x46\x62\x47\xf3\xfe\xf7\xc5\x79\x98\x8e\xbf\x6d\xce\xa7\x8b\xf3\xb9\xbd\x79\xbd\xba\xbb\x5c\x16\x02\x1e\xef\x49\xb5\xb0\xa4\x03\x5b\x46\xfc\x50\x26\x8e\x9e\xf1\x5f\x3b\xec\x62\x3c\xff\x99\x96\x98\xb6\x43\xeb\xc8\x3a\x9a\xbe\x01\x0d\x97\x3b\x57\xa3\x1f\x9f\xf5\xf5\x9b\xd1\xab\x0b\xa5\xbc\xb1\x22\xc5\xe6\xa7\x1e\xfc\x75\x1d\xfe\x4f\xfc\x73\xbc\xfe\x16\x6b\xd6\x03\xcf\x7a\xd8\xd7\x75\xf6\x05\xaf\xb3\x42\x76\x4b\x3b\x2e\x4c\x73\xfd\xf9\x17\xda\x73\x76\x79\xf0\x98\x89\x5f\xfe\xf9\x57\x00\x00\x00\xff\xff\x93\x1e\x2f\x48\x7e\x0c\x00\x00")

func subscriptionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_subscriptionGraphql,
		"subscription.graphql",
	)
}

func subscriptionGraphql() (*asset, error) {
	bytes, err := subscriptionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "subscription.graphql", size: 3198, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _transactionsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7b\xe1\x72\x1b\x39\x8e\xff\x77\x3d\x05\x92\xf9\x10\x7b\x4a\xd1\x4c\x76\xb6\xe6\x9f\xbf\xaa\xb6\xb6\x64\x4b\x99\xe8\xc6\x96\xbd\xb2\xbc\x99\xdc\xd6\x94\x44\x75\x43\x12\xd7\x2d\xb2\x43\xb2\x2d\x6b\xaf\xf2\x58\xf7\x02\xf7\x64\x57\x00\xc9\x6e\xb6\x24\x27\xd9\xab\xfd\xb0\x5f\x12\xab\x9b\x04\x01\x10\x04\x7e\x00\xd1\x9d\x97\x2f\x5f\x76\x66\x46\x64\x68\x41\xaf\xc0\x6d\x10\xf0\x09\xb3\xca\x49\xad\xe8\x81\x80\xb5\x7c\x44\x05\xce\x08\x65\x45\x46\x8f\x7b\x30\xdb\x48\x0b\x5b\x14\xca\xd2\x84\x4e\xf2\x0e\x76\xc2\x06\x02\x98\x83\x56\x4c\x30\xdb\x08\xa9\x7a\xf0\x51\x57\x20\x0a\xab\x61\x8d\x0e\x32\xad\x1c\x3e\x39\x10\x4b\x5d\x39\xa6\xb2\x2c\x74\xf6\x00\x52\xc1\x6e\x23\xb3\x0d\x48\xd7\xa2\xd5\x05\xa1\x72\xa6\x66\x9d\x70\xd5\x31\xb3\xbd\x4e\xe7\xc3\x60\x3a\xe9\xc3\xb5\x78\x40\xb0\x95\x41\x70\x1a\x44\xb1\x13\x7b\x0b\xd9\x06\xb3\x07\x1e\xbf\xf0\xd3\x17\x70\x26\x3d\x73\x0b\x83\x19\xca\xd2\x2d\xce\xc1\xe9\xce\xb6\x9e\xbc\xd7\xd5\x2b\x83\xa0\x34\xf3\x6a\x65\x8e\x46\xaa\x35\x08\x58\x09\x59\x60\x9e\x2a\x04\x84\x05\xb9\x0a\x1c\x77\x6c\x95\x65\x68\xed\xaa\x2a\x7a\xac\x5c\xb7\x2f\x11\x66\xcd\x68\x56\x36\xfc\x57\x07\x40\xe6\x7d\xb8\x73\x44\xf6\x45\xa7\x03\x40\x83\x01\x2e\xda\x6a\x70\xa4\xea\x74\x2d\xc7\xd3\x75\x96\x55\xc6\x60\x5e\x4f\x63\xed\xf5\xfd\xec\xf7\x28\x72\x34\x09\x4d\xde\x2f\x69\x41\x80\xdd\x68\xe3\x5e\x6f\x48\x97\x2b\x6d\x6a\xe1\x7b\x41\x2b\xbd\x7a\x8a\x7f\xd0\x87\xd9\x74\x30\xb9\x1b\x5c\xce\xc6\x37\x93\xf9\xdd\x6c\x30\xbb\xbf\x4b\xe9\x26\x7c\x35\x56\x13\x68\xc6\x7d\xb4\xde\x06\xb4\xb2\xa8\x6c\x65\xe1\x51\x14\x15\x42\x69\x74\x29\xd6\x82\xac\x44\x64\x46\x5b\x3f\x4a\xa1\xdb\x69\xf3\xd0\xb0\x11\x68\xf5\xd3\xa5\xa6\xfe\xd9\x91\x94\x83\xad\xae\x94\x23\xc3\x68\x78\x71\x72\x8b\xa4\xcc\xad\xa4\x45\x30\xd3\x2a\xb7\x70\xf6\x3f\xff\x6d\xcf\x01\x0b\x51\x5a\xcc\x61\xb9\xf7\x4a\xde\x6d\x74\x81\xc7\x76\xde\x01\xc8\xb4\x31\x68\x4b\x9e\xeb\xb4\xb7\x9a\x64\xdc\x9c\xb7\xa4\x17\xe8\x2d\x60\x25\xb1\xc8\x21\x98\xd7\xe8\xe6\x6e\x7c\x03\x56\xaf\xdc\x4e\x18\xec\x11\xb7\xde\x4c\xe3\x9e\x7c\xff\xbd\xd2\xee\xfb\xef\x79\x70\xa2\x94\x03\x7d\x85\x33\xe7\x75\x27\x2d\xac\x8c\xde\x26\xf4\x95\xce\xb1\x03\xe0\x36\xc2\x81\xc1\xb2\x10\x7b\xf4\x87\x25\xb5\x9c\x7a\x4e\xd4\x32\xdc\xdb\xc6\xfe\x7b\x59\x59\xdd\x5b\xb1\xc6\x6b\x52\xd5\x9d\x57\xd5\x82\xc4\xd8\xeb\xca\x74\x00\x7e\x31\xa2\xdc\xfc\xe5\x0a\x74\x89\x46\x30\x41\xa9\xac\x43\x91\x93\x4e\x0c\x3a\x23\xf1\x11\x4f\xed\x75\xb3\x9b\x41\x45\x7d\x18\x2b\xf7\xf3\x1f\x4f\x6e\x5d\xe0\x0d\x96\x42\xe5\x3b\x99\xbb\x0d\x53\xab\xb6\x98\xc3\x19\x59\x2c\x7b\x00\x3a\xa4\xe1\xfc\x1b\xe1\x10\x0a\xb9\x95\x8e\x4e\x27\xaa\xb5\x54\x78\xfe\xfc\x9e\x76\x41\x2a\x3a\x2d\x7b\x87\x36\xe8\xf4\xdb\x76\x57\xa1\x9b\x57\xa4\x9e\x2f\xee\x2f\x9c\xd5\x46\x5f\xd9\x4a\x14\xc5\x9e\xa4\xfe\x54\xc9\x47\x51\xa0\x72\x44\xbf\xd6\x77\x4d\x71\xbe\xd3\x26\xb7\xf0\x3d\xbc\x5d\x9c\xff\x9b\x19\xc8\x87\x8d\x2c\x78\x4f\x0d\x13\x55\xb4\xd1\xc2\xd2\xb9\xd2\xec\x19\xb7\xc2\xb1\x8f\x42\x3e\x25\x2d\x86\xba\xe4\x0f\xad\x93\x45\x01\x99\xae\x8a\x1c\x96\x08\xb9\x5c\xad\xd0\xa0\x72\x3d\x68\xdb\x9e\x42\xc7\xb6\xf7\x81\x34\xf1\x2f\x31\x3a\x38\xdb\x56\x85\x93\x65\x81\xc4\xc7\x72\x0f\x6f\x69\x06\x45\x1e\x1a\x2c\xa2\xbd\x45\x5b\x38\x6f\x8c\x34\xf2\xd2\x87\x7b\x79\x60\xa6\x1f\x36\x48\xba\x38\x76\xca\x14\xa9\xb4\x91\x6b\xa9\x68\xcf\xc9\xcf\x66\x1b\xcc\xab\x83\x38\x91\x78\xd7\xf8\xba\x0f\x17\x5a\x17\x28\x14\xaf\xf2\x1d\x0c\xf2\x1c\x5e\xca\x6d\x59\xc8\x4c\xba\x97\xb0\xdb\x20\x9b\xd9\x9e\x42\x51\x7c\x0c\x67\x85\xa4\x03\xa0\xd0\x18\x6d\x38\x2e\x6a\xc5\xfe\xff\xbc\x21\x62\xc4\x56\x97\xd6\x6f\x38\x19\xe6\x91\x45\x43\x81\x8f\x58\xf4\x79\xc2\xf7\x20\x8a\xc2\x5b\xfe\x70\xf4\x6e\x34\x9d\x8e\x86\xf3\xd9\xf4\xb7\x05\x51\x69\x54\x6f\x7b\x8d\x26\xae\xa4\x75\x96\x67\xa5\x61\xc9\x76\x61\x55\x08\xe7\x50\x91\x5b\x27\xbe\x4c\x8e\xc6\xfb\xd8\xb6\x4f\x4e\x7c\x42\x08\xf0\x03\xa6\x63\xfb\xf0\xb7\x41\x13\x26\x5f\xfc\x9e\x68\x7f\x8a\xae\x32\x8a\xa2\x58\xb3\x48\x21\x2d\xbb\x8d\x03\x2e\xa4\x82\x79\xbd\xe0\xdc\xb3\xd1\xa5\x71\x5a\x15\x7b\x16\x94\x2d\x97\x5c\x46\xa2\x18\x0b\x67\x7c\x04\x04\x58\x14\x26\xdb\x74\x41\x1b\xd0\xbc\xe3\x2b\x59\x38\x06\x00\x89\xa1\x44\x12\x5f\xe4\xbc\x81\x56\x71\x0d\xe1\x20\xc7\xd2\x6d\xfe\xf4\x63\x17\xdc\x46\x5b\x84\x52\x18\x17\xfd\x59\xb4\xa2\x34\xe0\xf5\x60\xac\x60\x41\x47\x58\xdb\x05\x3c\xa2\xb1\x24\xeb\x9b\xde\xff\xeb\xfd\xc8\x5a\x5e\x62\xa1\x77\x5d\x6f\x95\xa7\xbc\x59\xba\xed\x36\xf8\xaf\x1e\x49\xe0\x74\x79\x45\x56\x70\x52\x82\xdf\x83\x49\xbe\x1b\xff\x76\x3d\xea\xb3\xf5\xe1\x96\x9d\xd8\x46\x5a\x6f\x37\x1e\x0a\x0d\x67\xe6\x89\x67\xf4\x8f\x60\x4e\x8b\x02\x3e\xa2\x72\x95\x3f\x20\x79\x0e\x0b\x36\xdf\x79\xa6\x73\x5c\x74\x03\x58\x58\x62\xa6\xb7\x68\x41\x09\x27\x1f\x39\x70\xbf\xe9\xbd\xed\xfd\xd8\x61\x3b\xc9\xb0\x74\xff\x71\x77\x33\xe9\x03\xfd\xdb\xf9\xdc\xe9\xd8\x4c\x14\xc2\xf8\x9f\xe1\x6f\x7f\x66\xe3\xaf\x71\xfa\x83\x5e\xfd\xf4\x87\x0e\x81\xb2\x19\xc3\x02\x32\x25\x83\xa5\x41\x8b\xca\x89\x88\x78\x23\x64\x20\xd5\x4d\xdf\x5d\xfe\xf4\xd3\x4f\xff\x9f\xb0\xd2\x56\xb8\x2e\xe8\x92\x46\xb1\x08\x52\x65\x45\x95\x93\x05\x6d\x65\x51\xc8\x80\x2d\x7a\x64\x1a\x61\x3d\x5a\xa4\x73\x04\xff\x5a\xe8\x85\x61\xe0\x97\xa0\x16\xc0\xa9\xb0\xdc\x0f\xb2\xbc\x48\xdc\x15\xbb\xce\xe6\xc5\xe7\x0e\x0b\xda\x49\x36\x14\x36\xba\xc8\x6d\xf4\xfa\xc1\x2a\x0f\xc0\xbe\x95\x6a\x5d\x60\x3c\x4e\x3b\xe9\x36\x52\x81\x68\x3b\xb1\x1a\xd4\x0e\x0e\xf0\xec\xcb\x97\x2f\x7f\x29\xf4\x52\x14\x60\xf1\x53\x85\x2a\x43\x18\x0f\xc1\x47\x6d\x52\x76\x16\x1c\x78\xb0\x54\xca\x0a\xe0\x8c\x11\x69\x0d\x48\x63\x40\x58\x33\x9d\x79\xa4\x73\xde\x83\xc9\xcd\x8c\xac\x70\xe5\x27\xf3\xde\x05\x24\x1e\x23\xbb\xc5\x4f\xb0\xa3\x78\xb3\x44\xf8\xb1\x17\x1c\x2d\x7e\x3a\xf4\xe3\xff\x89\x46\xbf\x5e\x0a\x82\x7e\x52\xe5\xf8\xe4\x4f\x5e\xc3\x5f\x10\xfa\x20\x38\x9e\xf6\x29\xbd\xd4\x87\x49\xad\xc6\x44\xb0\xd9\x04\xbf\xa0\x57\x53\x0d\x8b\x03\x44\xf0\xb1\x30\x09\xd4\x29\x98\x0e\x63\x3d\x1c\x98\x11\xcc\x89\x98\x3a\xc8\xa7\xaa\xa2\xf0\xd1\x81\x94\x50\x19\xda\x4c\x4a\x09\x7a\xf0\x57\x34\x72\xb5\x6f\xe5\x3a\x1d\x08\x98\x25\xe4\x63\x47\xc9\x88\x5e\xfe\x1d\x33\x97\xb8\xf7\x1a\x76\x0f\x52\x9b\x4d\xf0\x5a\x96\x71\x00\xf5\xa2\xd0\x11\x6e\x27\x7e\x4e\x13\x54\xc9\xab\x0c\xbd\x6a\x13\xe7\xcf\x68\x8a\x28\xdd\x9d\xdc\x78\xfe\xff\x11\x4d\x9b\x95\x47\x34\x49\xaa\xe4\xdf\xcd\x84\xa1\x70\xbe\x45\xb7\xd1\xf9\x2b\xda\x3e\xcf\x93\x12\x5b\xec\x85\x9c\x27\xd7\x68\x81\xf1\x53\xe2\x18\xa3\x5f\xa4\x14\xd4\x88\xcc\x79\xfe\x97\xc8\x00\xb2\x4e\x37\x39\x72\x32\x84\x14\x2e\x00\x95\x47\x34\x0b\x9f\xf6\x46\xfa\x1e\x6a\xd0\x8a\xb6\xe4\x13\x45\xb0\x25\x7a\xfa\x13\x52\x8a\xcc\xf5\x22\x9f\x32\xf1\xe9\xfe\x3c\x7a\x81\xc3\xfb\xc3\xd4\xf0\x58\x5c\xd6\xa7\x97\xb6\x61\xa6\x0b\x99\xde\x2e\x25\xc5\x46\x32\xe4\x18\x00\x98\xe4\xa2\x0b\x39\x3a\x34\x5b\xa9\xd0\xa6\x7b\x57\x0a\xb7\xa9\x4d\xab\xde\xc4\x56\x82\xcc\xb2\xb7\x34\xf6\x8c\x78\xc4\xd0\x09\xd9\xc2\x49\xa1\xb7\x87\x92\xdd\xc9\xb5\x12\x4e\x1b\x89\x16\x0c\x81\x65\xe3\x2d\x28\x30\x92\x1e\xce\x13\x6b\x2e\x58\xa7\x95\xdb\x68\x23\xff\xc1\x4e\x7c\xf1\xfc\xf2\xad\x71\x7d\xf8\xdb\x2d\x29\xc3\x52\x38\xe5\x38\xd8\xc0\x8d\xa1\x70\x02\x4a\xb1\x2f\xb4\xc8\x7b\x70\x2d\xd7\x1b\x47\xba\x11\x60\x99\x75\x02\x06\x82\xe3\x4e\x38\x3b\xa4\xd9\x12\x15\xc7\x03\xf2\x21\x01\x28\x86\x22\x46\xa9\xad\x95\xcb\x82\x2b\x12\x95\x2a\x05\x25\xf8\x0e\x2a\xcb\x05\x05\x05\x83\x8b\xf1\x73\x82\xe5\xc2\x89\x2f\xc8\x43\xaf\x43\x38\xf4\x7c\x33\x4b\x37\xcc\x52\x13\xda\x18\xe6\x6c\x6a\xaf\x5e\x0a\x23\xb6\x64\x07\x96\xb8\xa6\xad\xa4\x54\xc0\xe8\x6a\xed\xcd\x85\xd8\x81\x0f\xc1\x1a\x16\xe4\x69\x16\x4d\x79\x43\xbd\x72\x2d\x71\x3c\x01\x90\xee\xb4\x39\xd0\x9e\xfd\xdd\x6a\xe5\xd9\xa5\xbf\x5a\xec\xbe\xc7\xa7\xd7\xa8\x3c\x0b\x41\xb3\x47\x5c\x1b\xb1\x63\x39\x21\xa6\x7f\x5f\x36\x85\x0d\x3e\xcd\xbf\xa2\xb5\x0d\x3e\x0d\x59\x71\x6d\x3b\x1c\xd4\x68\x72\x3a\xb8\x86\x6d\x15\x21\x41\x8d\x7f\xbb\xd1\xa9\x35\x45\x83\x56\x60\xec\x40\x88\x52\x0c\x1d\x06\xd7\x40\x08\x5c\x2b\xda\xe2\x78\x5a\xf1\x91\xac\x82\xa1\x03\x26\x94\x1b\x9c\x1e\x97\xad\x0b\x5c\x69\x9a\x21\x9d\xc5\x62\x15\xf0\x7f\x66\x50\x34\x81\x3b\xc7\x15\x1a\x43\x8e\x8b\x9d\xe9\x56\x3f\x8a\xa2\xfd\xc6\x47\x9a\xe9\xe0\xfa\xbc\x07\xef\x42\x4c\xee\x86\xca\xd8\xc2\x88\xed\x4d\x69\x17\x5f\x8d\x10\xb5\x57\xe6\xf1\x7d\xf8\xdb\x74\x70\x7d\x53\x36\xe7\xa6\xd1\x21\xe5\x06\x89\x80\x62\xb5\xc2\x8c\xf7\xb4\xe6\x27\x45\xde\x5d\x68\xc9\x44\x86\x59\xa0\xff\x6b\xab\x73\xb9\x92\x59\x78\x7e\xb4\x03\x41\xf9\xe1\x3c\x38\xf3\xe4\xf9\x22\x50\x7a\x9a\x31\x27\xc8\x74\x4f\x6c\x2f\x9c\x35\x2a\x35\x35\x03\x5e\x89\x73\x9e\x35\xef\x72\xd6\x2b\x60\x6e\xf4\x6e\x7e\x1e\x16\xe5\x57\x7e\xd5\x99\xff\xf3\xd4\xb2\x64\x93\x84\x3a\xd2\x05\x9f\x13\x06\xc6\xca\xa2\x09\x8a\x49\xe5\xb7\x8c\xf7\x23\x6b\x3e\xad\x50\xfb\x20\x12\x31\x65\xe7\xd1\x6d\xdb\x4c\x97\x78\x80\x6d\x5e\xd9\xc4\x9b\x47\x95\x2d\x6f\x4a\x7b\x46\x47\xb0\xef\x8f\x83\xa7\x16\x0f\xc7\x39\xe9\xf2\x22\x15\xe9\xa6\x72\x65\x55\xe7\x2b\x0d\xe1\xd2\x48\xe5\xce\xce\x17\x8c\x67\x39\x53\x08\xe0\x26\x01\x54\x76\x4b\xa9\x4e\x0c\x23\x81\x03\xca\xdc\x75\x71\x14\x16\x5a\xc9\x76\x3c\x00\x04\xfb\x42\xe9\xf8\xf5\xca\x20\xb6\xb7\x3f\xbc\x79\x67\x10\xdb\x89\xb5\x7f\x3d\x0a\x15\x3f\x46\xf8\x4b\x74\x3b\xf4\xd9\x35\x2c\x71\x2d\x95\x62\xdf\x7d\xa2\x04\x9e\x30\xd0\x05\x83\x85\xcf\x4d\x02\x88\x60\x5a\xf4\xc7\x51\xa9\x89\xf4\x60\x02\x18\x5a\x72\xe9\x26\x43\x6b\x93\x92\xed\xe9\x6a\xd8\x78\x05\x4a\xab\xd7\xe4\x76\xbb\x2d\xd9\x3d\xda\xed\x31\x1c\xb4\x8e\x62\x08\xd9\x82\xaf\xc7\xd8\x3a\x7a\xaf\x74\xa5\xf2\x54\xe5\xe4\x3e\x39\x2a\x84\x68\x46\x8c\x3c\xca\x1c\xf3\x1a\xbb\x1e\xe4\x55\x9c\xb2\x8d\xfd\xe4\x55\xe5\x2a\x83\x5d\xd8\x61\x28\xe2\x58\x67\xaa\x8c\x9e\xc1\xc2\x4f\x5c\x04\x7b\x0b\xb5\xcd\xe7\x77\x4d\x69\x97\x1c\x63\x42\x51\xde\xc1\x13\xca\xf2\x51\xd2\x19\xb9\x5e\x73\xb9\x40\x70\xa9\x5a\xe6\x08\xc8\x6e\x03\x38\x2b\x57\x3e\x15\x8f\xd6\xe3\x6f\x04\x32\x5d\xca\x50\xca\xc2\x27\x82\x26\x96\xf0\x47\x94\xb5\x06\xd7\x75\x5a\xdd\xaa\xef\x7a\xdc\xb4\x11\x65\x89\xa4\x42\x82\xd3\x7b\x5d\x41\x56\x57\x43\x02\x1c\x99\x33\xf3\xfb\x45\x40\x5f\x87\xc5\x35\xa9\xc8\x70\xad\xcc\x62\x01\xa1\xce\x9b\xd8\xde\x5f\x47\x8e\xcf\x39\xe9\x96\x76\xc2\xd4\x0e\x2c\x34\x2a\x4e\x1b\xf6\x31\xa9\xfe\xb8\xd0\x10\x84\xcc\x57\x95\xc5\x50\x9f\x80\x4f\x15\x9a\xbd\xa7\x79\x1d\x8a\x11\x7f\xa1\x47\x07\xa4\x8f\x6b\x10\x73\xf6\x74\x98\xcf\x8f\x3c\x8f\xaf\x3d\xba\x08\x9e\x29\xdc\x4b\xb5\xe2\x0d\x15\xbe\x76\x96\xf8\xaf\x1d\x1a\x84\x9d\x91\xce\xa1\x8a\x07\x82\x0b\x51\x3e\xb7\x8b\x99\x5e\x2c\xbf\xf8\xda\x4b\xb3\xe1\x81\x89\x23\x1e\x66\x1a\xf4\xd2\x11\x85\xe4\x1c\x7a\x1a\x16\xd9\xf2\x5a\x25\xa3\xaf\x46\x2d\x76\x0d\x7e\xad\x30\xe5\xcc\x6a\x43\xd9\x4d\x48\xb6\x6f\xa6\xb3\xf9\xcd\x74\x38\x9a\xc2\x9f\x60\xf4\xdb\xe8\xf2\x9e\x1e\x9f\x9f\x2a\x87\xbc\x0c\x84\x53\xe7\xe7\x65\x8a\xc2\x78\x89\x15\x76\xbd\xb2\x14\x06\xa0\xdd\xa8\xfc\x84\xbe\xa5\xf3\xe5\x55\x07\x0a\xc9\x4b\x08\x23\x43\x9d\xaa\x14\x06\x7d\xb2\x70\xa4\x8b\x65\x15\xf2\x41\x83\xab\x82\x4e\x89\x5f\xa8\xed\x63\x21\x97\xde\x70\x52\xb8\x80\x32\x9c\x51\x3c\x38\x96\x41\x20\x6d\xa2\x2b\x9d\x93\x93\x9d\x47\x27\x1b\xf5\xa8\x8d\x57\x4c\x3f\x2d\x01\x34\x7e\xf6\xde\x06\xd0\xce\x35\xda\x65\x25\x8b\xfc\xc0\xab\x3a\x83\xd8\x0d\x00\x98\x0f\x5a\xc4\x69\xb9\xb4\x25\xd7\x94\x45\xb1\xd6\x46\xba\xcd\x96\x2f\x05\x12\x26\x6d\xb7\xa9\xa4\xf1\xf9\x3f\x0a\x06\x36\x64\xcd\xbe\x4c\x60\xe5\x56\x16\xc2\x10\x2f\x9c\xca\xd1\x01\xdf\xb1\x2f\xdb\x88\x47\x84\xb5\x66\xe3\x4d\xb1\x62\x69\xa4\xe6\xf1\x4d\xa5\xed\x6d\xef\xc7\x06\xfb\x64\x85\xb6\x68\xdd\xbd\xf2\x6c\x61\x3e\x50\x19\xda\x67\x94\xf2\xb9\xd3\x41\x55\x6d\x4f\x98\x5a\xa8\x98\x8c\x6a\xa5\x90\x4d\xfa\xbd\x0d\x77\xab\xcc\xaa\xf0\xd7\x06\xcc\x2c\x2b\xd1\x57\xe1\x08\x30\x6b\xc3\x99\x6a\x70\xf4\x7e\x26\xe5\xb8\x01\x68\xd1\xc3\x42\x2a\x14\x26\x41\x3b\xab\xfa\x0e\x15\x43\x50\x8c\xf6\x1e\xf6\xef\x32\xda\xc9\x17\xd8\xa9\x4d\xdf\x06\x26\xda\x3c\xb8\x0d\xee\xbd\x6f\x68\xca\xe0\xcb\x96\x39\x37\xd1\xb4\xe6\x96\xbd\xef\xc2\xa2\xca\x17\x5d\xff\xff\x3c\xb5\xc1\x05\xef\xf6\xc2\x3b\xe2\xb9\xc1\x4c\x96\x12\x95\x5b\xf8\x75\xc8\x63\x53\x6c\x1c\x3b\xd8\x72\xae\xe6\x7d\x7a\x23\x2b\xe7\x07\x28\xc8\xb0\x9a\x8a\x3d\x6b\xc5\x33\x2f\x9a\xbb\x89\x56\x65\xe7\x72\x3a\x1a\xb0\x72\x3e\x73\x39\x6d\x1a\x93\x13\xc6\x21\x1b\xa1\xd6\x9c\xeb\xfa\x2b\xaa\x32\x6a\x98\xa0\x3f\xe7\x3f\xe1\xee\x3c\xa4\xdf\x75\xdd\x8c\x31\x73\xdc\xff\x0f\x64\x94\x9e\x5d\x8f\x15\xfe\x5e\x59\xe7\x2b\x38\xbe\x48\x16\xd6\x98\x0e\xae\x03\x4f\xb5\x03\xee\xd3\xc3\xf9\xcd\xed\x68\xca\x3c\xd6\x95\x02\xde\x1e\x5f\x64\xf0\x55\x8d\x1c\x97\x92\xef\xe3\x0d\x9d\xdf\x9c\xff\x9e\x0e\xae\x3d\xb9\x52\xec\x5b\xd5\x15\xa6\x31\xa9\xb6\x4b\x0a\x46\x2b\x7f\x3d\xe2\x5d\x1c\xab\x3a\xf8\x8e\xe6\x56\xae\xd4\x56\x12\x22\x3a\xf7\x99\x47\x81\x5c\x5a\x3b\x53\xb8\x66\xa0\x74\x1e\x60\x26\x16\x94\x71\xb5\xa0\xce\xe1\x22\x4a\xef\xa0\xb2\x8d\xb1\x2c\x98\xb5\x45\x14\xa6\x0b\x62\xe5\xd0\x80\x28\xcb\x62\xef\x0d\x5c\xda\x90\x67\x05\x8d\xf8\x93\x1f\x4e\x8b\x80\x92\xec\xc4\x22\x3c\x4a\xdc\x45\xd3\xa7\xf1\x05\xae\x5c\x9d\x98\x79\x45\x79\xd2\x27\x2f\x76\x68\x3d\x49\x07\x6d\xad\xeb\x3c\xb9\xb9\xf9\xb0\x27\x7c\x33\x9c\x2d\x0e\x63\x51\xef\x30\x68\x9d\xb3\x41\x57\xd6\x9f\xea\x42\x58\x17\xec\x22\xa6\xb9\x2d\xdb\x69\xbc\x4f\xd5\xbe\x9b\x8a\xfe\xa5\x65\x09\xde\xb6\xda\x09\x22\xa3\xfa\xda\xa4\x47\xf3\xd9\xe0\xe2\x6a\xc4\x1b\x41\xae\xeb\xb9\xc4\x8c\x26\xa4\x57\x42\xf3\xc1\x70\xc8\x93\x32\xa1\x32\x2c\xbe\x79\xda\xe5\x60\x72\x39\xba\xea\x34\x6c\x7d\xeb\xc4\xdb\xfb\xbb\xf7\x23\xbf\x64\x50\xf2\x33\x33\x7b\x75\xee\x2d\x5c\x1d\x84\x63\xf7\x01\x43\x0f\xfa\x1d\xab\x7a\x06\xb9\x88\xcf\x49\x52\x5d\x10\x6c\x95\x7b\x69\x77\x3c\x10\xab\x93\x0c\xee\x60\xc9\x84\x02\xb9\x56\xda\xf8\x8d\xf3\x15\xc0\x1a\x5a\xcd\x65\xfe\xe4\x5d\x99\x2e\x69\x9d\xc8\xe9\xdc\x99\xa7\x39\xa7\xe5\xe8\xaf\x5e\x5a\x42\x4e\x47\xd7\x37\x7f\x0d\x52\xfa\xe4\x4e\xad\x63\xad\xca\xed\xfd\xf0\xab\xd1\x6c\x34\xb8\x9f\xbd\xe7\x41\x85\x54\x0f\x47\x63\xae\xc6\x93\x5f\xeb\x11\xb5\x96\x15\xee\x6a\x07\xd4\x01\x98\x8c\x3e\x0c\x2e\x2f\x6f\xee\x27\xb3\xd6\xde\x1b\xbd\x83\xb3\xd2\xc8\xad\x30\xfb\x73\x1a\x77\x3b\x1d\x5f\x0f\xa6\x1f\xe7\xe3\xc9\x70\xd4\xec\x3a\x4b\xf0\x0d\xe3\xbd\x40\x3c\xa5\x2a\x73\xcf\xc8\x57\xa6\xdc\xdf\x0e\x07\xb3\xb6\x41\xf2\xf1\xff\xfa\x1c\xe2\x6e\x3e\x19\x7d\x98\xdf\x0e\x3e\x8e\xa6\x6d\x3e\xbf\x95\x84\x67\x78\x7e\x73\x35\x3c\x45\x25\x39\x3d\x61\xe0\xf1\xe9\x61\xf1\xfc\x2d\x50\x5c\xe9\x6e\x74\x79\x33\x19\x7e\x4d\x8b\x5f\x9e\x93\x68\xf2\x40\x2d\x5f\x9e\xf7\xcd\xaa\xf9\x26\x32\x27\xd5\x53\xef\xec\xe0\x62\x1c\xea\x7d\xb5\x99\xdd\x8d\x66\x83\x8b\x71\x7b\x58\x0d\x49\x8f\xc7\x5e\xde\x0c\x83\xb5\xa8\x93\xa6\x7d\x3f\x79\xde\xb8\xcb\xba\x86\xcb\x23\x99\x61\x1a\x39\xf7\x8e\xae\xcd\xc3\xb3\x83\x83\xf9\xf9\x30\x3f\x48\xe2\xee\xc9\x72\x55\xc4\x3b\x9c\xe7\xbc\xb2\xb0\xc5\xad\x36\xfb\x5e\x1d\xe1\x7d\xf5\x29\x86\x78\xce\xd8\x75\x65\x28\x71\x30\x90\x09\x72\xfa\x7a\x55\x23\xf2\x1f\xd2\x0a\xcf\x0f\xed\xba\xd3\x49\x1f\x79\x88\x02\x86\xe4\x43\xda\x30\x80\xf0\x53\x13\xd5\xeb\x07\xe3\x61\xfd\xe8\x9f\xc1\x0a\x4e\x03\x19\x5f\x40\xf5\xcf\xf3\xd4\x82\x12\xc9\x0a\xa1\x48\x92\xce\xe5\xb2\x78\xb5\x2c\xa4\xa5\xcc\x56\xb8\x40\x20\x3e\x19\xb8\x7e\xb8\x3f\x6d\x13\x11\x31\xcb\xf1\x6d\x72\xb7\xbe\x80\x66\x42\xfd\x83\x2b\x2e\x20\x9c\x43\x02\x63\x84\x10\x0e\x6e\x11\x8e\x38\xce\xb1\x10\xfb\x7b\xe5\x64\xf1\x7f\x59\x0f\x1f\x65\xe6\x8e\x41\x03\xd7\x00\xbc\x49\x84\xc2\xf9\x4a\xc8\x22\xb9\x05\xab\x4b\x2f\xa5\xf4\x7b\x78\x4a\xdc\x84\xe0\x78\x18\xd1\x4b\xda\x99\xb4\x08\xe5\x47\xf3\x74\x72\x5b\x4f\x6d\x53\x5d\x18\xf1\x95\xe4\x58\xc0\x6c\x06\xb4\xae\xf0\x6b\x70\xd1\x36\x30\x6f\xd6\xcf\x2e\x71\x90\xd9\x97\x95\xe5\x3e\x0b\x49\xa9\xa8\xc1\xcc\x51\x62\x7b\x54\x2a\x88\xb8\xea\x87\xc7\x37\x3f\xf0\x93\x1f\x68\xde\xbc\x15\x91\xf9\x3e\x4b\x70\x75\xec\x1f\x68\x34\x2c\x78\xf3\xe6\x16\xb3\xb4\xa7\x81\x00\x43\x7a\xf4\xbf\x89\xcf\xd2\xe8\xb5\x11\xdb\xad\x70\x32\x63\x60\xb0\xdc\xc7\xea\x4d\x52\xad\xac\xc1\xd3\xd7\x09\xfb\x23\xfd\xad\x94\xeb\x64\x95\x7d\x0a\x23\xab\x42\xc4\xbb\x1a\xd7\x85\x95\x2e\x0a\xbd\xf3\xfa\x14\x70\x7d\x33\x1c\xbf\xfb\x18\x64\x64\xae\xe2\x93\x06\x64\xfd\x2b\x99\x1b\x33\x62\x2a\x05\xdf\xcb\xd5\x97\x8a\xad\x35\x3d\xae\x8a\x85\x34\xca\x60\x60\x89\x2b\x6d\xb0\xc5\xde\x33\xba\xe3\x8d\x60\xa1\xa3\x84\xe4\xd6\x53\xa6\x89\xb9\x98\xd1\x86\xd6\x90\x05\x6a\x2b\x75\xdf\xcf\x63\x43\x58\x40\x52\xa6\x08\xaa\xf0\xee\xfc\xf2\xd9\xb2\xbe\x0f\xeb\x75\x93\xae\xaf\xde\xb3\x7d\x27\xee\x95\x63\x7d\xea\x5f\x21\x96\xc8\xc3\x84\x5f\x71\x4f\x0f\xbf\xe3\xa7\xb7\xc2\x6d\x9a\x6c\x2a\x9e\xa0\x03\x1a\x75\x64\xe0\xc2\x7d\xb0\x42\x7f\x18\xc7\x93\xbb\x4e\xfa\x92\x19\x8e\x2f\xa7\xa3\xeb\xe3\x4c\x94\xdb\x99\x92\x04\x5f\x10\xae\xe8\xfa\xac\xb6\x8e\xb9\xcc\x5b\x12\xa0\x2e\x8e\xe5\x1c\x5e\x1c\xe7\x92\xb7\x06\x1f\xa5\xae\x68\xfb\x39\xe5\x8a\xe9\x48\x53\x5f\xe1\x4e\x84\x18\x0e\x85\x8f\x6c\x82\xdb\xf4\xfc\x0d\x46\x4c\x5a\x8b\xfc\xb6\x15\x1d\x7c\x06\x48\xf1\xfb\x9f\xa2\x5c\x6f\x60\xbc\x50\xc6\xdd\x09\xba\xb7\x1e\xef\xc1\x03\xee\xeb\x46\x51\xbd\x8b\xc4\x1a\x5d\x00\x8d\xe8\xb3\x36\xe2\x26\xd2\x93\xf6\x1e\x86\xba\x88\x56\x8e\xd5\x7d\xb6\xc1\x27\xbe\xcd\x39\x4f\x49\x7b\x73\x07\x41\x5b\x44\x76\x76\x7f\x3b\x4c\xd2\xd2\x5a\x07\xe9\xbd\x23\x2d\x16\x69\x7d\xd3\x1a\x21\xfd\x55\x64\x23\xcf\xad\xa1\x70\xf7\xec\x1a\xe1\x6a\x3b\x5c\xf9\xc6\xea\x96\x5e\x45\xc6\x6a\x2e\xfd\x6d\x40\x18\xe8\x6f\x93\x5f\x00\x10\xad\x78\x5f\xec\x2b\xab\xcf\x12\x0c\x5c\xd4\x2c\x7d\x33\xc1\x26\xe4\x5c\x1c\x9c\x16\x92\x19\xbe\x6b\xec\xca\xc3\x37\x7a\xc4\xe0\x0e\xfd\xe9\xa0\xdf\xf1\xf6\xf3\x87\xda\x56\x88\x6a\x6d\xf6\xbf\xe2\x9e\x09\xf2\x95\x57\xdc\x64\x9a\xa7\xc4\x16\xeb\xdb\x68\xff\xe1\x40\x73\xd4\xbf\x3a\x8e\x53\xc9\x33\x7e\x2c\xd5\xba\x0f\xf7\xe3\xc9\xec\xe7\x3f\xce\x47\x93\xcb\x9b\xe1\x78\xf2\x0b\xfc\x09\x26\x83\xeb\xd1\x79\x8b\x52\x8e\x2b\x51\x15\x8e\x0b\xa5\x0d\x55\x6f\xc5\x0f\xb8\xff\xa7\xa8\x7d\x99\x5e\x54\x40\xe3\xb1\xfe\xfd\x75\x10\x4d\xe1\x90\x0a\x31\x4e\x74\x38\x2d\xbe\x1c\x5f\x0f\xae\x3a\x00\xef\x47\xbf\x0d\xc2\x2f\xa2\x4a\x61\x4a\x57\x1e\x32\xfd\xf8\xb4\xa0\x2c\xe3\xe3\xf5\xc5\xcd\x95\x37\x21\xbe\x7e\xb7\xa1\x3c\xe4\x6d\xc9\xbf\x9e\x53\x22\x42\x63\xf0\xe9\x68\x4c\xed\xca\x8f\xda\xf4\x98\xa3\x58\x49\x1d\x0d\xf9\xc7\xdd\xcd\xbb\xd9\xfc\xdd\x60\x7c\xc5\xbf\xde\x0f\xa6\xc3\xe6\xd7\x70\x74\x35\xf8\x18\xc6\x8d\x7e\xbb\x1d\x4f\xc3\xdf\xf7\x93\x5f\x27\x37\x1f\x62\xad\x71\x74\xf4\x41\x45\x5a\x53\x4c\x6a\xcc\xbd\x4e\x67\x96\xd6\xd0\x7d\xaf\xd7\x82\x12\xa8\xba\x81\x6e\x11\xef\x17\xf6\xe8\x20\x44\x8e\x1e\x90\xbf\xa1\xe0\x50\xf1\xf7\x2b\x7b\x5d\x81\x42\xcc\xb9\x99\xe3\xa0\xc9\x2f\x74\x80\xf9\xb8\x15\xbb\xbf\x88\x9f\xa4\x8b\x48\xda\x90\x42\xd4\x17\x79\x3d\xb8\x40\x6e\x8b\x6f\x8a\x32\xbe\x3c\x4b\x9c\x2c\x31\x34\xf3\x6f\x63\x15\x45\xd8\xb4\x55\x29\x94\xc1\x9c\xef\x7b\x8a\x49\x4a\xeb\xe6\xa5\x7b\x18\x1e\x5a\x17\x05\x3d\xb8\x43\x84\x5c\x67\xd5\xb6\xee\xef\x0c\x1f\xbd\xb4\x6f\xf5\xa4\x0a\x17\x79\x31\x5a\xda\x67\x1a\xcf\x00\x5e\xbe\x17\x76\x73\x70\xfd\x53\xb7\x09\x0d\x0a\xab\xe1\x41\xe9\x9d\x0a\xa2\xb8\x79\x2e\xd7\x68\xdd\xc2\xa7\x04\x71\x87\x38\xf1\xe0\x17\x87\x41\xc6\xb7\x4f\x16\x7b\xa8\x94\xfc\x54\x61\xd3\x47\xa9\x7c\xa9\x94\x62\x7a\x52\x79\xac\xef\x21\x0b\xad\x88\x5c\xfc\xd2\x8a\x23\x28\x67\x28\xbe\xe1\x64\x89\x60\xb0\xb2\xf1\x2b\x2a\x69\x61\x5d\x09\x23\x94\x43\x9f\xdc\x6d\xb5\xd2\x4e\xab\x00\x02\xa5\xca\x8c\xef\xf4\x65\xb0\x97\x54\xcd\x9b\x8b\x95\xd2\x50\xe0\x71\x7b\x2e\x87\x31\xf9\x42\x86\x0f\xbe\x34\x3c\x20\x96\xdc\x71\xf3\x40\x9a\x5a\x69\xf3\x60\x63\x4b\x7f\xdd\x06\xd1\x05\x91\xd6\xd6\x7c\x37\x7a\xfd\xf5\xc3\x78\xf2\x4b\xdf\x97\xd1\xf8\xc3\x9d\xd7\x9e\x46\xc0\x97\x5d\x58\xb7\xbb\x4c\x13\x45\x34\x55\x7c\x3f\x25\x5e\x8b\x47\xf1\xeb\x3b\xb3\x25\x99\x9b\xd5\x99\x64\xfc\xcf\x82\xfa\xeb\xe5\x78\x87\x54\xc3\x90\xdd\x66\x0f\xd2\xbd\xb2\x20\xb7\xa5\x36\x2e\xdc\xc7\x28\xf1\x28\xd7\xe1\x62\xe1\x21\xea\xa3\xd8\x37\x75\x5a\xcf\xe3\x5d\x60\xb1\xd5\x84\xfa\x1d\x17\x37\x9a\x57\x14\x1d\xd9\x17\xf2\x92\x76\x13\x3f\x97\x10\x4d\xcf\x0a\xa5\x50\xb6\x07\x13\xed\xfc\xd7\x69\x3b\xce\x13\x9a\x66\x29\x4a\xaf\x84\x8d\x9f\x4b\x74\xa1\x52\x05\x5a\x4b\xc3\x18\x47\xaf\xb4\xd9\x86\x21\x42\xc5\x6b\x51\xb8\x45\xb3\x11\xa5\x8d\xc4\x72\x1d\xcf\x29\xa7\x62\xfd\x73\x18\xa8\x9c\xdd\x8d\xb7\x01\xef\x57\x44\x7d\x77\x4f\xa6\x24\xd8\x67\xf3\xb1\xd2\x2a\xe3\xb6\x7e\xf2\x05\xc7\x62\x03\x88\xa5\x3c\x7e\xfc\xf9\xb8\x41\x9a\x7d\x4c\x93\x1a\xfb\xc4\xf8\x45\x84\xc4\xb7\xfa\x0e\x0c\xf2\x1e\x67\x21\x83\xa4\xc3\xd1\x58\xa6\x77\x25\xbe\xd5\x99\xcb\xbe\x6f\x7e\x86\xa5\x74\x75\x3f\x15\x4f\x99\x54\x5b\x38\x8b\x5f\x92\xe8\x15\xfc\xf4\x07\xee\xeb\x27\x37\xea\xad\x20\x4e\x22\xe7\x15\x7d\x4c\x65\xd8\xb0\x1a\x02\x41\xc9\xfa\x11\xcd\xaa\xd0\x3b\x75\x9e\x7e\xb7\xb6\xba\x08\xe3\xea\x76\x60\x0a\x3d\x16\x04\x54\x52\xb9\x37\x3f\x13\x59\x83\xa2\x90\x6e\xdf\x8d\x7b\xbe\xc3\xa4\xcd\x5e\xba\x3f\x37\xbd\x9f\x24\xb6\x17\xb6\x34\xb8\x92\x4f\x70\xe6\xaf\x4c\xde\xbe\x7e\xf3\x73\x4b\x32\x18\x0f\xcf\xd9\x2d\x86\xab\x38\x0d\x32\x47\xe5\x62\x4b\x30\x77\xc1\xfa\x12\xdc\x43\x2b\x9e\xd4\x9a\x5c\xd6\x77\x5f\x51\x86\x5b\x5e\xb1\xd5\xd5\xbc\x15\x4f\x93\xd3\x7d\xe7\xfc\xee\xf2\xf6\xde\xf7\xac\xdf\x9d\x14\xfe\x6d\x22\x7b\xac\xc1\xdc\x61\xd6\x1a\xab\x20\x74\xd4\x77\xda\x7d\x3d\x87\x9f\x2a\xbc\xf8\x9d\x6d\xeb\xe4\x53\x0a\xe3\x0e\x95\x0d\xaf\x46\xf1\xc7\x8b\xdf\x19\x2d\xed\x10\x76\x5a\xbd\x72\x6c\xf8\x3a\x17\xfb\xda\x1a\x07\x8d\x21\x1e\x75\xe3\x1e\xf6\xb0\x7e\xb5\xa9\xd4\x37\x0e\x24\xad\x8f\xad\xb6\xcd\x13\xdd\x88\x91\x8b\x03\x3a\x81\x1d\xa7\x4d\xba\x78\x53\xd0\x6c\x11\xa8\x3f\xba\xa0\x83\x1d\x3f\xa2\x6a\xbc\x45\xc1\x9f\xef\xe8\x55\xbc\x4d\xb6\xfc\x71\x4c\xe3\x3c\x69\x7d\xfb\xe7\xce\x77\xb5\x8b\x88\x4d\xf7\x4b\x74\x94\x83\xd8\x12\x33\x5f\x42\x10\x21\xdd\x5f\x90\x34\xfe\x92\xb6\x20\x88\x81\xba\x2c\x30\x69\x76\xe5\xc6\x7d\xdc\x33\xc0\xf8\x73\xd0\x72\xe2\x04\x4f\xe9\xda\xb7\xef\x3f\xe3\x30\x5a\xb9\x44\x00\x60\xde\xaf\xd5\x8a\x05\xe0\x2f\x4c\x6a\x72\x9f\x3b\xff\x1b\x00\x00\xff\xff\x81\x48\x40\xe5\xed\x3c\x00\x00")

func transactionsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_transactionsGraphql,
		"transactions.graphql",
	)
}

func transactionsGraphql() (*asset, error) {
	bytes, err := transactionsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions.graphql", size: 15597, mode: os.FileMode(436), modTime: time.Unix(1587588369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"block.graphql": blockGraphql,
	"blockmeta.graphql": blockmetaGraphql,
	"query.graphql": queryGraphql,
	"query_alpha.graphql": query_alphaGraphql,
	"schema.graphql": schemaGraphql,
	"search_transaction.graphql": search_transactionGraphql,
	"subscription.graphql": subscriptionGraphql,
	"transactions.graphql": transactionsGraphql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"block.graphql": &bintree{blockGraphql, map[string]*bintree{}},
	"blockmeta.graphql": &bintree{blockmetaGraphql, map[string]*bintree{}},
	"query.graphql": &bintree{queryGraphql, map[string]*bintree{}},
	"query_alpha.graphql": &bintree{query_alphaGraphql, map[string]*bintree{}},
	"schema.graphql": &bintree{schemaGraphql, map[string]*bintree{}},
	"search_transaction.graphql": &bintree{search_transactionGraphql, map[string]*bintree{}},
	"subscription.graphql": &bintree{subscriptionGraphql, map[string]*bintree{}},
	"transactions.graphql": &bintree{transactionsGraphql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


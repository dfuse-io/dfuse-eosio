"""The Connection type for a Token"""
type TokenConnection {
    """`block` is the block at which the token data is valid"""
    blockRef: BlockRef

    """A list of edges to tokens"""
    edges: [TokenEdge]!

    """Information to aid pagination"""
    pageInfo: PageInfo
}

"""A single Token response."""
type TokenEdge {
    """See https://docs.dfuse.io/eosio/public-apis/reference/search/cursors"""
    cursor: String!

    """The Token object."""
    node: Token!
}

"""A single Block response."""
type BlockRef {
    """Sequential number of this block on the chain."""
    number: Uint64!

    id: String!
}

"""A single Token"""
type Token {
    """Contract that created the token i.e.: eosio.token"""
    contract: String!

    """Symbol of token  i.e.: EOS"""
    symbol: String!

    """Token precision"""
    precision: Uint32!

    """Token contract issuer: eosio"""
    issuer: String!

    """Number of token holders"""
    holders: Uint64!

    """Token's maximum supply"""
    maximumSupply(format: ASSET_FORMAT = ASSET): String!

    """Token's total supply"""
    totalSupply(format: ASSET_FORMAT = ASSET): String!
}

"""The Connection type for a Account Balance"""
type AccountBalanceConnection {
    """`block` is the block at which the token data is valid"""
    blockRef: BlockRef

    """A list of edges to account balances"""
    edges: [AccountBalanceEdge]!

    """Information to aid pagination"""
    pageInfo: PageInfo
}

"""A single Token response."""
type AccountBalanceEdge {
    """See https://docs.dfuse.io/eosio/public-apis/reference/search/cursors"""
    cursor: String!

    """The account balance object."""
    node: AccountBalance!
}


type AccountBalance {
    """Contract that created the token i.e.: eosio.token"""
    contract: String!

    """Account holding the token"""
    account: String!

    """Symbol of token  i.e.: EOS"""
    symbol: String!

    """Token precision"""
    precision: Uint32!

    """Amount of the token held in the account"""
    balance(format: ASSET_FORMAT = ASSET): String!
}

"""Cursors required to continue either forward or backwards from a list of paginated elements"""
type PageInfo {
    """cursor of the first element of the list, use it to search in the opposite direction"""
    startCursor: String!
    """cursor of the last element of the list, use it to continue"""
    endCursor: String!
    """indicates whether there is a next page"""
    hasNextPage: Boolean!
    """indicates whether there is a previous page"""
    hasPreviousPage: Boolean!
}

enum ASSET_FORMAT {
    """value with the precision and symbol i.e '1234.5678 EOS'"""
    ASSET       # 12345.6789 EOS
    """value without the precision or symbol i.e. '12345678'"""
    INTEGER     # 123456789
    """value with the precision and not the symbol i.e. '1234.5678'"""
    DECIMAL     # 12345.6789
}
